{"version":3,"sources":["serviceWorker.js","constants/routes.js","components/Session/context.js","components/Firebase/context.js","components/Firebase/firebase.js","components/Firebase/index.js","components/Session/withAuthentication.js","components/Session/withAuthorization.js","components/PasswordChange/index.js","components/PasswordForget/index.js","components/Account/index.js","components/Users/UserList.js","components/Users/UserItem.js","components/Admin/index.js","constants/roles.js","components/Home/index.js","components/Tests/TestList.js","components/Tests/HostedTestList.js","components/Tests/CreateTestBank.js","components/Tests/TakeTest.js","components/Tests/SelectTest.js","components/Tests/TestPage.js","components/Tests/BarChart.js","components/Tests/HostTest.js","components/Instructor/index.js","components/SignOut/index.js","components/Navigation/index.js","components/SignUp/index.js","components/SignIn/index.js","components/Student/index.js","components/Questions/NewQuestion.js","components/App/index.js","index.js","images/logo.svg"],"names":["Boolean","window","location","hostname","match","HOME","TESTS","CREATE_TEST","NEW_QUESTION","AuthUserContext","React","createContext","FirebaseContext","withFirebase","Component","props","react_default","a","createElement","Consumer","firebase","Object","assign","config","apiKey","process","authDomain","databaseURL","projectId","storageBucket","messagingSenderId","Firebase","_this","this","classCallCheck","doCreateUserWithEmailAndPassword","email","password","auth","createUserWithEmailAndPassword","doSignInWithEmailAndPassword","signInWithEmailAndPassword","doSignInWithGoogle","signInWithPopup","googleProvider","doSignInWithFacebook","facebookProvider","doSignInWithTwitter","twitterProvider","doSignOut","signOut","doPasswordReset","sendPasswordResetEmail","doSendEmailVerification","currentUser","sendEmailVerification","url","REACT_APP_CONFIRMATION_EMAIL_REDIRECT","doPasswordUpdate","updatePassword","onAuthUserListener","next","fallback","onAuthStateChanged","authUser","user","uid","once","then","snapshot","dbUser","val","roles","objectSpread","emailVerified","providerData","db","ref","concat","users","test","tid","tests","image","fileName","storage","images","host","hosts","app","initializeApp","serverValue","database","ServerValue","emailAuthProvider","EmailAuthProvider","GoogleAuthProvider","FacebookAuthProvider","TwitterAuthProvider","withAuthentication","WithAuthentication","_React$Component","possibleConstructorReturn","getPrototypeOf","call","state","JSON","parse","localStorage","getItem","inherits","createClass","key","value","_this2","listener","setItem","stringify","setState","removeItem","context","Provider","withAuthorization","condition","WithAuthorization","apply","arguments","_this$props","history","push","compose","withRouter","INITIAL_STATE","passwordOne","passwordTwo","error","PasswordChangeForm","onSubmit","event","catch","preventDefault","onChange","defineProperty","target","name","_this$state","isInvalid","type","placeholder","disabled","message","PasswordForgetFormBase","PasswordForgetLink","Link","to","PasswordForgetPage","PasswordForgetForm","SIGN_IN_METHODS","id","provider","LoginManagementBase","fetchSignInMethods","fetchSignInMethodsForEmail","activeSignInMethods","onSocialLoginLink","linkWithPopup","onDefaultLoginLink","credential","linkAndRetrieveDataWithCredential","onUnlink","providerId","unlink","map","signInMethod","onlyOneLeft","length","isEnabled","includes","Account_DefaultLoginToggle","onLink","Account_SocialLoginToggle","SocialLoginToggle","_ref","onClick","DefaultLoginToggle","_this3","_this$props2","_this$state2","PermissionRequestsBase","_this4","handleRequests","e","child","set","PermissionRequests","LoginManagement","PasswordChange","UserList","loading","on","usersObject","usersList","keys","off","username","role","pathname","UserItem","onSendPasswordResetEmail","handleRequestApproval","remove","handleRoleRemoval","console","log","params","requests","req","components_Users_UserList","HomePage","TestList","handleOnChange","questions","userTests","testsObject","testsList","_arr","values","_i","substring","ROUTES","HostedTestList","CreateTestBank","fetchUser","handleOnSubmit","tidPrefix","totalPoints","passingScore","testBankMeta","handleChange","testBankId","TakeTest","handleSubmitAnswer","dataset","question","answered","submittedAnswers","currentQuestion","selectedAnswer","instructorID","className","questionNum","getDownloadURL","src","alt","title","options","op","data-key","data-question","components_Tests_TestList","TestPage","componentWillMount","handleHostTest","answersGiven","numberOfQuestions","i","hostedTest","_this$props$location$","toggle","answer","BarChart","es","data","labels","datasets","label","backgroundColor","borderWidth","hoverBackgroundColor","hoverBorderColor","maintainAspectRatio","legend","display","scales","yAxes","ticks","max","min","stepSize","width","height","HostTest","handleNextQuestion","prevState","submittedAnswersArray","justAnswers","dataArry","currQuest","entries","forEach","_ref2","slicedToArray","sort","current","cnt","_this$state3","Tests_BarChart","InstructorPage","handleEndHostedQuizzes","handleLinkClick","route","components_Tests_HostedTestList","NavigationAuth","logo","NavLink","exact","activeClassName","SignOut","NavigationNonAuth","Navigation","Navigation_NavigationAuth","Navigation_NavigationNonAuth","requestAdmin","requestInstructor","ERROR_CODE_ACCOUNT_EXISTS","ERROR_MSG_ACCOUNT_EXISTS","SignUpFormBase","code","onChangeCheckbox","checked","SignUpLink","SignUpForm","SignUpPage","SignInFormBase","SignInGoogleBase","_this2$props","socialAuthUser","displayName","SignInFacebookBase","_this3$props","additionalUserInfo","profile","SignInTwitterBase","_this4$props","SignInForm","SignInGoogle","SignInFacebook","SignInTwitter","SignInPage","PasswordForget_PasswordForgetLink","SignUp_SignUpLink","StudentPage","handleStartTest","NewQuestion","op1","op2","op3","op4","op5","op6","op7","op8","op9","op10","reference1","reference2","upLoadImage","isNullOrUndefined","file","uploadImage","files","put","addQuestion","accept","Fragment","src_components_Navigation","Switch","Route","path","component","AccountPage","AdminPage","SelectTest","ReactDOM","render","Firebase_context","BrowserRouter","components_App","document","getElementById","navigator","serviceWorker","ready","registration","unregister","module","exports","__webpack_require__","p"],"mappings":"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","file":"static/js/main.138899fd.chunk.js","sourcesContent":["// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read http://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit http://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See http://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","export const HOME = \"/\";\nexport const SIGN_UP = \"/signup\";\nexport const SIGN_IN = \"/signin\";\nexport const ACCOUNT = \"/account\";\nexport const PASSWORD_FORGET = \"/pw-forget\";\nexport const ADMIN = \"/admin\";\nexport const ADMIN_DETAILS = \"/admin/:id\";\nexport const INSTRUCTOR = \"/instructor\";\nexport const STUDENT = \"/student\";\nexport const TESTS = \"/tests\";\nexport const TEST_VIEW = \"/tests/:id\";\nexport const CREATE_TEST = \"/tests/create\";\nexport const NEW_QUESTION = \"/tests/new_question\";\nexport const SELECT_TEST = \"/tests/select\";\nexport const TAKE_TEST = \"/tests/s/:tid\";\nexport const HOST_TEST = \"/tests/i/:tid\";\n","import React from 'react';\n\nconst AuthUserContext = React.createContext(null);\n\nexport default AuthUserContext;\n","import React from 'react';\n\nconst FirebaseContext = React.createContext(null);\n\nexport const withFirebase = Component => props => (\n  <FirebaseContext.Consumer>{firebase => <Component {...props} firebase={firebase} />}</FirebaseContext.Consumer>\n);\n\nexport default FirebaseContext;\n","import app from 'firebase/app';\nimport 'firebase/auth';\nimport 'firebase/database';\nimport 'firebase/storage';\n\nconst config = {\n  apiKey: process.env.REACT_APP_API_KEY,\n  authDomain: process.env.REACT_APP_AUTH_DOMAIN,\n  databaseURL: process.env.REACT_APP_DATABASE_URL,\n  projectId: process.env.REACT_APP_PROJECT_ID,\n  storageBucket: process.env.REACT_APP_STORAGE_BUCKET,\n  messagingSenderId: process.env.REACT_APP_MESSAGING_SENDER_ID,\n};\n\nclass Firebase {\n  constructor() {\n    app.initializeApp(config);\n\n    // *** Helper *** //\n\n    this.serverValue = app.database.ServerValue;\n    this.emailAuthProvider = app.auth.EmailAuthProvider;\n\n    // *** Firebase APIs *** //\n\n    this.auth = app.auth();\n    this.db = app.database();\n    this.storage = app.storage();\n\n    // *** Social Sign In Method Provider *** //\n\n    this.googleProvider = new app.auth.GoogleAuthProvider();\n    this.facebookProvider = new app.auth.FacebookAuthProvider();\n    this.twitterProvider = new app.auth.TwitterAuthProvider();\n  }\n\n  // *** Auth API *** //\n\n  doCreateUserWithEmailAndPassword = (email, password) =>\n    this.auth.createUserWithEmailAndPassword(email, password);\n\n  doSignInWithEmailAndPassword = (email, password) =>\n    this.auth.signInWithEmailAndPassword(email, password);\n\n  doSignInWithGoogle = () => this.auth.signInWithPopup(this.googleProvider);\n\n  doSignInWithFacebook = () => this.auth.signInWithPopup(this.facebookProvider);\n\n  doSignInWithTwitter = () => this.auth.signInWithPopup(this.twitterProvider);\n\n  doSignOut = () => this.auth.signOut();\n\n  doPasswordReset = (email) => this.auth.sendPasswordResetEmail(email);\n\n  doSendEmailVerification = () =>\n    this.auth.currentUser.sendEmailVerification({\n      url: process.env.REACT_APP_CONFIRMATION_EMAIL_REDIRECT,\n    });\n\n  doPasswordUpdate = (password) =>\n    this.auth.currentUser.updatePassword(password);\n\n  // *** Merge Auth and DB User API *** //\n\n  onAuthUserListener = (next, fallback) =>\n    this.auth.onAuthStateChanged((authUser) => {\n      if (authUser) {\n        this.user(authUser.uid)\n          .once('value')\n          .then((snapshot) => {\n            const dbUser = snapshot.val();\n\n            // *** default empty roles ***  //\n            if (!dbUser.roles) {\n              dbUser.roles = [];\n            }\n\n            // *** merge auth and db user *** //\n            authUser = {\n              uid: authUser.uid,\n              email: authUser.email,\n              emailVerified: authUser.emailVerified,\n              providerData: authUser.providerData,\n              ...dbUser,\n            };\n\n            next(authUser);\n          });\n      } else {\n        fallback();\n      }\n    });\n\n  // *** User API *** //\n\n  user = (uid) => this.db.ref(`users/${uid}`);\n\n  users = () => this.db.ref(`users`);\n\n  // *** Tests Banks API *** //\n\n  test = (tid) => this.db.ref(`tests/${tid}`);\n\n  tests = () => this.db.ref(`tests`);\n\n  // *** Question Image API *** //\n  image = (uid, fileName) => this.storage.ref(`${uid}/images/${fileName}`);\n\n  images = (uid) => this.storage.ref(`${uid}/images`);\n\n  // *** Host API *** //\n\n  host = (tid) => this.db.ref(`hosts/${tid}`);\n\n  hosts = () => this.db.ref(`hosts`);\n}\n\nexport default Firebase;\n","import FirebaseContext, { withFirebase } from './context';\nimport Firebase from './firebase';\n\nexport default Firebase;\n\nexport { FirebaseContext, withFirebase };\n","import React from 'react';\n\n// *** HOC and Context *** //\nimport AuthUserContext from './context';\nimport { withFirebase } from '../Firebase';\n\nconst withAuthentication = (Component) => {\n  class WithAuthentication extends React.Component {\n    constructor(props) {\n      super(props);\n\n      this.state = {\n        authUser: JSON.parse(localStorage.getItem('authUser')),\n      };\n    }\n\n    componentDidMount() {\n      const { firebase } = this.props;\n      this.listener = firebase.onAuthUserListener(\n        (authUser) => {\n          localStorage.setItem('authUser', JSON.stringify(authUser));\n          this.setState({ authUser });\n        },\n        () => {\n          localStorage.removeItem('authUser');\n          this.setState({ authUser: null });\n        },\n      );\n    }\n\n    componentWillUnmount() {\n      this.listener();\n    }\n\n    render() {\n      const { authUser } = this.state;\n      return (\n        <AuthUserContext.Provider value={authUser}>\n          <Component {...this.props} />\n        </AuthUserContext.Provider>\n      );\n    }\n  }\n\n  return withFirebase(WithAuthentication);\n};\n\nexport default withAuthentication;\n","import React from 'react';\n\n// *** Constants *** //\nimport * as ROUTES from '../../constants/routes';\n\n// *** Third-Party *** //\nimport { withRouter } from 'react-router-dom';\nimport { compose } from 'recompose';\n\n// *** HOC and Context *** //\nimport AuthUserContext from './context';\nimport { withFirebase } from '../Firebase';\n\nconst withAuthorization = (condition) => (Component) => {\n  class WithAuthorization extends React.Component {\n    componentDidMount() {\n      const { firebase, history } = this.props;\n      this.listener = firebase.onAuthUserListener(\n        (authUser) => {\n          if (!condition(authUser)) {\n            history.push(ROUTES.SIGN_IN);\n          }\n        },\n        () => history.push(ROUTES.SIGN_IN),\n      );\n    }\n\n    componentWillUnmount() {\n      this.listener();\n    }\n\n    render() {\n      return (\n        <AuthUserContext.Consumer>\n          {(authUser) =>\n            condition(authUser) ? <Component {...this.props} /> : null\n          }\n        </AuthUserContext.Consumer>\n      );\n    }\n  }\n\n  return compose(\n    withRouter,\n    withFirebase,\n  )(WithAuthorization);\n};\n\nexport default withAuthorization;\n","import React, { Component } from 'react';\n\n// *** HOC and Context *** //\nimport { withFirebase } from '../Firebase';\n\nconst INITIAL_STATE = {\n  passwordOne: '',\n  passwordTwo: '',\n  error: null,\n};\n\nclass PasswordChangeForm extends Component {\n  constructor(props) {\n    super(props);\n\n    this.state = { ...INITIAL_STATE };\n  }\n\n  onSubmit = (event) => {\n    const { passwordOne } = this.state;\n    const { firebase } = this.state;\n\n    firebase\n      .doPasswordUpdate(passwordOne)\n      .then(() => {\n        this.setState({ ...INITIAL_STATE });\n      })\n      .catch((error) => {\n        this.setState({ error });\n      });\n\n    event.preventDefault();\n  };\n\n  onChange = (event) => {\n    this.setState({ [event.target.name]: event.target.value });\n  };\n\n  render() {\n    const { passwordOne, passwordTwo, error } = this.state;\n\n    const isInvalid = passwordOne !== passwordTwo || passwordOne === '';\n\n    return (\n      <form onSubmit={this.onSubmit}>\n        <input\n          name=\"passwordOne\"\n          value={passwordOne}\n          onChange={this.onChange}\n          type=\"password\"\n          placeholder=\"New Password\"\n        />\n        <input\n          name=\"passwordTwo\"\n          value={passwordTwo}\n          onChange={this.onChange}\n          type=\"password\"\n          placeholder=\"Confirm New Password\"\n        />\n        <button disabled={isInvalid} type=\"submit\">\n          Reset My Password\n        </button>\n\n        {error && <p>{error.message}</p>}\n      </form>\n    );\n  }\n}\n\nexport default withFirebase(PasswordChangeForm);\n","import React, { Component } from 'react';\n\n// *** Constants *** //\nimport * as ROUTES from '../../constants/routes';\n\n// *** Third-Party *** //\nimport { Link } from 'react-router-dom';\n\n// *** HOC and Context *** //\nimport { withFirebase } from '../Firebase';\n\nconst PasswordForgetPage = () => (\n  <div>\n    <h1>PasswordForget</h1>\n    <PasswordForgetForm />\n  </div>\n);\n\nconst INITIAL_STATE = {\n  email: '',\n  error: null,\n};\n\nclass PasswordForgetFormBase extends Component {\n  constructor(props) {\n    super(props);\n\n    this.state = { ...INITIAL_STATE };\n  }\n\n  onSubmit = (event) => {\n    const { email } = this.state;\n    const { firebase } = this.props;\n\n    firebase\n      .doPasswordReset(email)\n      .then(() => {\n        this.setState({ ...INITIAL_STATE });\n      })\n      .catch((error) => {\n        this.setState({ error });\n      });\n\n    event.preventDefault();\n  };\n\n  onChange = (event) => {\n    this.setState({ [event.target.name]: event.target.value });\n  };\n\n  render() {\n    const { email, error } = this.state;\n    const isInvalid = email === '';\n\n    return (\n      <form onSubmit={this.onSubmit}>\n        <input\n          name=\"email\"\n          value={email}\n          onChange={this.onChange}\n          type=\"text\"\n          placeholder=\"Email Address\"\n        />\n        <button disabled={isInvalid} type=\"submit\">\n          Reset My Password\n        </button>\n\n        {error && <p>{error.message}</p>}\n      </form>\n    );\n  }\n}\n\nconst PasswordForgetLink = () => (\n  <p>\n    <Link to={ROUTES.PASSWORD_FORGET}>Forgot Password?</Link>\n  </p>\n);\n\nexport default PasswordForgetPage;\n\nconst PasswordForgetForm = withFirebase(PasswordForgetFormBase);\n\nexport { PasswordForgetForm, PasswordForgetLink };\n","import React, { Component } from 'react';\n\n// *** Third-Party *** //\nimport { compose } from 'recompose';\n\n// *** Styles *** //\nimport '../../styles/components/Account/Account.css';\n\n// *** HOC and Context *** //\nimport { AuthUserContext, withAuthorization } from '../Session';\nimport { withFirebase } from '../Firebase';\n\n// *** Components *** //\nimport PasswordChangeForm from '../PasswordChange';\nimport { PasswordForgetForm } from '../PasswordForget';\n\nconst SIGN_IN_METHODS = [\n  {\n    id: 'password',\n    provider: null,\n  },\n  {\n    id: 'google.com',\n    provider: 'googleProvider',\n  },\n  {\n    id: 'facebook.com',\n    provider: 'facebookProvider',\n  },\n  {\n    id: 'twitter.com',\n    provider: 'twitterProvider',\n  },\n];\n\nconst AccountPage = () => (\n  <AuthUserContext.Consumer>\n    {(authUser) => (\n      <main id=\"account\">\n        <h2>Account: {authUser.email}</h2>\n        <PasswordForgetForm />\n        <PasswordChangeForm />\n        <LoginManagement authUser={authUser} />\n        <PermissionRequests />\n      </main>\n    )}\n  </AuthUserContext.Consumer>\n);\n\nclass LoginManagementBase extends Component {\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      activeSignInMethods: [],\n      error: null,\n    };\n  }\n\n  componentDidMount() {\n    this.fetchSignInMethods();\n  }\n\n  fetchSignInMethods = () => {\n    const { firebase, authUser } = this.props;\n    firebase.auth\n      .fetchSignInMethodsForEmail(authUser.email)\n      .then((activeSignInMethods) =>\n        this.setState({ activeSignInMethods, error: null }),\n      )\n      .catch((error) => this.setState({ error }));\n  };\n\n  onSocialLoginLink = (provider) => {\n    const { firebase } = this.props;\n    firebase.auth.currentUser\n      .linkWithPopup(firebase[provider])\n      .then(this.fetchSignInMethods)\n      .catch((error) => this.setState({ error }));\n  };\n\n  onDefaultLoginLink = (password) => {\n    const { firebase } = this.props;\n    const credential = firebase.emailAuthProvider.credential(\n      this.props.authUser.email,\n      password,\n    );\n\n    firebase.auth.currentUser\n      .linkAndRetrieveDataWithCredential(credential)\n      .then(this.fetchSignInMethods)\n      .catch((error) => this.setState({ error }));\n  };\n\n  onUnlink = (providerId) => {\n    const { firebase } = this.props;\n    firebase.auth.currentUser\n      .unlink(providerId)\n      .then(this.fetchSignInMethods)\n      .catch((error) => this.setState({ error }));\n  };\n\n  render() {\n    const { activeSignInMethods, error } = this.state;\n\n    return (\n      <article id=\"signin-methods\">\n        <span>Sign In Methods:</span>\n        <ul>\n          {SIGN_IN_METHODS.map((signInMethod) => {\n            const onlyOneLeft = activeSignInMethods.length === 1;\n            const isEnabled = activeSignInMethods.includes(signInMethod.id);\n\n            return (\n              <li key={signInMethod.id}>\n                {signInMethod.id === 'password' ? (\n                  <DefaultLoginToggle\n                    onlyOneLeft={onlyOneLeft}\n                    isEnabled={isEnabled}\n                    signInMethod={signInMethod}\n                    onLink={this.onDefaultLoginLink}\n                    onUnlink={this.onUnlink}\n                  />\n                ) : (\n                  <SocialLoginToggle\n                    onlyOneLeft={onlyOneLeft}\n                    isEnabled={isEnabled}\n                    signInMethod={signInMethod}\n                    onLink={this.onSocialLoginLink}\n                    onUnlink={this.onUnlink}\n                  />\n                )}\n              </li>\n            );\n          })}\n        </ul>\n        {error && error.message}\n      </article>\n    );\n  }\n}\n\nconst SocialLoginToggle = ({\n  onlyOneLeft,\n  isEnabled,\n  signInMethod,\n  onLink,\n  onUnlink,\n}) =>\n  isEnabled ? (\n    <button\n      type=\"button\"\n      onClick={() => onUnlink(signInMethod.id)}\n      disabled={onlyOneLeft}\n    >\n      Deactivate {signInMethod.id}\n    </button>\n  ) : (\n    <button type=\"button\" onClick={() => onLink(signInMethod.provider)}>\n      Link {signInMethod.id}\n    </button>\n  );\n\nclass DefaultLoginToggle extends Component {\n  constructor(props) {\n    super(props);\n\n    this.state = { passwordOne: '', passwordTwo: '' };\n  }\n\n  onSubmit = (event) => {\n    const { passwordOne } = this.state;\n    const { onLink } = this.props;\n    event.preventDefault();\n\n    onLink(passwordOne);\n    this.setState({ passwordOne: '', passwordTwo: '' });\n  };\n\n  onChange = (event) => {\n    this.setState({ [event.target.name]: event.target.value });\n  };\n\n  render() {\n    const { onlyOneLeft, isEnabled, signInMethod, onUnlink } = this.props;\n\n    const { passwordOne, passwordTwo } = this.state;\n\n    const isInvalid = passwordOne !== passwordTwo || passwordOne === '';\n\n    return isEnabled ? (\n      <button\n        type=\"button\"\n        onClick={() => onUnlink(signInMethod.id)}\n        disabled={onlyOneLeft}\n      >\n        Deactivate {signInMethod.id}\n      </button>\n    ) : (\n      <form onSubmit={this.onSubmit}>\n        <input\n          name=\"passwordOne\"\n          value={passwordOne}\n          onChange={this.onChange}\n          type=\"password\"\n          placeholder=\"New Password\"\n        />\n        <input\n          name=\"passwordTwo\"\n          value={passwordTwo}\n          onChange={this.onChange}\n          type=\"password\"\n          placeholder=\"Confirm New Password\"\n        />\n\n        <button disabled={isInvalid} type=\"submit\">\n          Link {signInMethod.id}\n        </button>\n      </form>\n    );\n  }\n}\n\nclass PermissionRequestsBase extends Component {\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      uid: null,\n    };\n  }\n\n  componentDidMount() {\n    const { firebase } = this.props;\n    const uid = firebase.auth.currentUser.uid;\n    this.setState({ uid });\n  }\n\n  handleRequests = (e) => {\n    const { uid } = this.state;\n    const { firebase } = this.props;\n    let key;\n    if (e.target.id === 'ADMIN') {\n      key = 0;\n    } else {\n      key = 1;\n    }\n    firebase\n      .user(uid)\n      .child(`requests`)\n      .child(key)\n      .set(e.target.id);\n  };\n\n  render() {\n    return (\n      <article id=\"permission-request\">\n        <b>Requests: </b>(Click to send request)\n        <button id=\"ADMIN\" type=\"button\" onClick={this.handleRequests}>\n          ADMIN\n        </button>\n        <button id=\"INSTRUCTOR\" type=\"button\" onClick={this.handleRequests}>\n          INSTRUCTOR\n        </button>\n      </article>\n    );\n  }\n}\n\nconst PermissionRequests = withFirebase(PermissionRequestsBase);\n\nconst LoginManagement = withFirebase(LoginManagementBase);\n\nconst condition = (authUser) => !!authUser;\n\nexport default compose(withAuthorization(condition))(AccountPage);\n","import React, { Component } from 'react';\n\n// *** Constants *** //\nimport * as ROUTES from '../../constants/routes';\n\n// *** Styles *** //\nimport '../../styles/components/Users/UserList.css';\n\n// *** Third-Party *** //\nimport { Link } from 'react-router-dom';\n\n// *** HOC and Context *** //\nimport { withFirebase } from '../Firebase';\n\nclass UserList extends Component {\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      loading: false,\n      users: [],\n    };\n  }\n\n  componentDidMount() {\n    const { firebase } = this.props;\n    this.setState({ loading: true });\n\n    firebase.users().on('value', (snapshot) => {\n      const usersObject = snapshot.val();\n\n      const usersList = Object.keys(usersObject).map((key) => ({\n        ...usersObject[key],\n        uid: key,\n      }));\n\n      this.setState({\n        users: usersList,\n        loading: false,\n      });\n    });\n  }\n\n  componentWillUnmount() {\n    const { firebase } = this.props;\n    firebase.users().off();\n  }\n\n  render() {\n    const { users, loading } = this.state;\n\n    return (\n      <article id=\"user-list\">\n        <h3>Enrolled Users</h3>\n        {loading && <div>Loading ...</div>}\n        <ul>\n          {users.map((user) => (\n            <li key={user.uid}>\n              <span>\n                <strong>ID:</strong> {user.uid}\n              </span>\n              <span>\n                <strong>E-Mail:</strong> {user.email}\n              </span>\n              <span>\n                <strong>Username:</strong> {user.username}\n              </span>\n              {user.roles && (\n                <span>\n                  <strong>Roles:</strong>\n                  <ul>\n                    {user.roles.map((role) => (\n                      <li key={role}>{role}</li>\n                    ))}\n                  </ul>\n                </span>\n              )}\n              <span>\n                <Link\n                  to={{\n                    pathname: `${ROUTES.ADMIN}/${user.uid}`,\n                    state: { user },\n                  }}\n                >\n                  Details\n                </Link>\n              </span>\n            </li>\n          ))}\n        </ul>\n      </article>\n    );\n  }\n}\n\nexport default withFirebase(UserList);\n","import React, { Component } from 'react';\n\n// *** Styles *** //\nimport '../../styles/components/Users/UserItem.css';\n\n// *** HOC and Context *** //\nimport { withFirebase } from '../Firebase';\nclass UserItem extends Component {\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      loading: true,\n      user: null,\n      uid: null,\n      ...props.location.state,\n    };\n  }\n\n  componentDidMount() {\n    const { match, firebase } = this.props;\n    firebase.user(match.params.id).on('value', (snapshot) => {\n      this.setState({\n        user: snapshot.val(),\n        uid: match.params.id,\n        loading: false,\n      });\n    });\n  }\n\n  componentWillUnmount() {\n    const { match, firebase } = this.props;\n    firebase.user(match.params.id).off();\n  }\n\n  onSendPasswordResetEmail = () => {\n    const { user } = this.state;\n    const { firebase } = this.props;\n    firebase.doPasswordReset(user.email);\n  };\n\n  handleRequestApproval = (e) => {\n    const { uid } = this.state;\n    const { firebase } = this.props;\n    let key;\n    if (e.target.id === 'ADMIN') {\n      key = 0;\n    } else {\n      key = 1;\n    }\n    firebase\n      .user(uid)\n      .child(`roles`)\n      .child(key)\n      .set(e.target.id);\n    firebase\n      .user(uid)\n      .child(`requests`)\n      .child(key)\n      .remove();\n  };\n\n  handleRoleRemoval = (e) => {\n    const { uid } = this.state;\n    const { firebase } = this.props;\n    let key;\n    if (e.target.id === 'ADMIN') {\n      key = 0;\n    } else {\n      key = 1;\n    }\n    firebase\n      .user(uid)\n      .child('roles')\n      .child(key)\n      .remove();\n\n    console.log(key);\n  };\n\n  render() {\n    const { user, loading, uid } = this.state;\n\n    return (\n      <main id=\"user-item\">\n        <h2>{user.username}</h2>\n        {loading && <div>Loading ...</div>}\n\n        {user && (\n          <div>\n            <span>\n              <b>ID:</b> {uid}\n            </span>\n            <span>\n              <b>E-Mail:</b> {user.email}\n            </span>\n            <span>\n              <b>Username:</b> {user.username}\n            </span>\n            {user.requests && (\n              <span id=\"requests\">\n                <b>Requests: </b>(Click to Approve)\n                <ul>\n                  {user.requests.map((req) => (\n                    <li key={req}>\n                      <input\n                        id={req}\n                        type=\"button\"\n                        value={req}\n                        onClick={this.handleRequestApproval}\n                      />\n                    </li>\n                  ))}\n                </ul>\n              </span>\n            )}\n            {user.roles && (\n              <span>\n                <b>Roles: </b>(Click to Remove)\n                <ul>\n                  {user.roles.map((role) => (\n                    <li key={role}>\n                      <input\n                        id={role}\n                        type=\"button\"\n                        value={role}\n                        onClick={this.handleRoleRemoval}\n                      />\n                    </li>\n                  ))}\n                </ul>\n              </span>\n            )}\n            <span>\n              <input\n                value=\"Send Password Reset\"\n                type=\"button\"\n                onClick={this.onSendPasswordResetEmail}\n              />\n            </span>\n          </div>\n        )}\n      </main>\n    );\n  }\n}\n\nexport default withFirebase(UserItem);\n","import React from 'react';\n\n// *** Constants *** //\nimport * as ROLES from '../../constants/roles';\n\n// *** Third-Party *** //\nimport { compose } from 'recompose';\n\n// *** Styles *** //\nimport '../../styles/components/Admin/Admin.css';\n\n// *** HOC and Context *** //\nimport { withAuthorization } from '../Session';\n\n// *** Components *** //\nimport { UserList } from '../Users';\n\nconst AdminPage = () => (\n  <main id=\"admin-page\">\n    <h2>Admin</h2>\n    <UserList />\n  </main>\n);\n\nconst condition = (authUser) =>\n  authUser && authUser.roles.includes(ROLES.ADMIN);\n\nexport default compose(withAuthorization(condition))(AdminPage);\n","export const ADMIN = \"ADMIN\";\nexport const INSTRUCTOR = \"INSTRUCTOR\";\nexport const STUDENT = \"STUDENT\";\n","import React, { Component } from \"react\";\n\n// *** Third-Party *** //\nimport { compose } from \"recompose\";\n\n// *** Styles *** //\nimport \"../../styles/components/Home/Home.css\";\n\n// *** HOC and Context *** //\nimport { withAuthorization } from \"../Session\";\nimport { withFirebase } from \"../Firebase\";\n\nclass HomePage extends Component {\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      users: null\n    };\n  }\n\n  componentDidMount() {\n    const { firebase } = this.props;\n    firebase.users().on(\"value\", snapshot => {\n      this.setState({\n        users: snapshot.val()\n      });\n    });\n  }\n\n  componentWillUnmount() {\n    this.props.firebase.users().off();\n  }\n\n  render() {\n    return (\n      <main id=\"home\">\n        <p>\n          Welcome to\n          <br />\n          <span id=\"title\">Question Air</span>\n        </p>\n      </main>\n    );\n  }\n}\n\nconst condition = authUser => !!authUser;\n\nexport default compose(\n  withFirebase,\n  withAuthorization(condition)\n)(HomePage);\n","import React, { Component } from \"react\";\n\n// *** Constants *** //\nimport * as ROUTES from \"../../constants/routes\";\n\n// *** Styles *** //\nimport \"../../styles/components/Tests/TestList.css\";\n\n// *** Third-Party *** //\nimport { Link, withRouter } from \"react-router-dom\";\nimport { compose } from \"recompose\";\n\n// *** HOC and Context *** //\nimport { withFirebase } from \"../Firebase\";\n\nclass TestList extends Component {\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      authUser: JSON.parse(localStorage.getItem(\"authUser\")),\n      loading: true,\n      tid: \"\",\n      test: null,\n      questions: [],\n      userTests: [],\n      tests: []\n    };\n  }\n\n  componentWillMount() {\n    const { authUser, userTests } = this.state;\n    const { firebase } = this.props;\n    this.setState({ loading: true });\n    firebase.tests(authUser.uid).on(\"value\", snapshot => {\n      const testsObject = snapshot.val();\n      if (testsObject === null) {\n        return;\n      } else {\n        const testsList = Object.keys(testsObject).map(key => ({\n          ...testsObject[key],\n          uid: key\n        }));\n\n        this.setState({\n          tests: testsList\n        });\n\n        for (const value of Object.values(testsList)) {\n          if (value.tid.includes(authUser.uid.substring(0, 4))) {\n            userTests.push(value);\n          }\n        }\n\n        this.setState({ loading: false });\n      }\n    });\n  }\n\n  componentWillUnmount() {\n    const { firebase } = this.props;\n    firebase.tests().off();\n    firebase.host().off();\n  }\n\n  handleOnChange = e => {\n    this.setState({ [e.target.name]: e.target.value });\n  };\n\n  render() {\n    const { userTests, loading, authUser } = this.state;\n\n    return (\n      <section id=\"instructor-test-list\">\n        {loading && <div>No available quizzes.</div>}\n        {userTests && (\n          <ul>\n            {userTests.length !== 0 &&\n              userTests.map(test => (\n                <Link\n                  to={{\n                    pathname: `${ROUTES.TESTS}/${test.tid}`,\n                    state: { test, authUser }\n                  }}\n                  key={test.tid}\n                >\n                  <li>Quiz ID Number: {test.tid}</li>\n                </Link>\n              ))}\n          </ul>\n        )}\n      </section>\n    );\n  }\n}\n\nexport default compose(\n  withRouter,\n  withFirebase\n)(TestList);\n","import React, { Component } from \"react\";\n\n// *** Constants *** //\nimport * as ROUTES from \"../../constants/routes\";\n\n// *** Styles *** //\nimport \"../../styles/components/Tests/HostedTestList.css\";\n\n// *** Third-Party *** //\nimport { Link, withRouter } from \"react-router-dom\";\nimport { compose } from \"recompose\";\n\n// *** HOC and Context *** //\nimport { withFirebase } from \"../Firebase\";\n\nclass HostedTestList extends Component {\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      authUser: JSON.parse(localStorage.getItem(\"authUser\")).uid,\n      loading: true,\n      tid: \"\",\n      test: null,\n      questions: [],\n      userTests: [],\n      tests: []\n    };\n  }\n\n  componentWillMount() {\n    const { authUser, userTests } = this.state;\n    const { firebase } = this.props;\n    this.setState({ loading: true });\n    firebase.hosts().on(\"value\", snapshot => {\n      const testsObject = snapshot.val();\n      if (testsObject === null) {\n        return;\n      } else {\n        const testsList = Object.keys(testsObject).map(key => ({\n          ...testsObject[key],\n          uid: key\n        }));\n\n        this.setState({\n          tests: testsList\n        });\n\n        for (const value of Object.values(testsList)) {\n          if (value.tid.includes(authUser.substring(0, 4))) {\n            userTests.push(value);\n          }\n        }\n\n        this.setState({ loading: false });\n      }\n    });\n  }\n\n  componentWillUnmount() {\n    const { firebase } = this.props;\n    firebase.tests().off();\n    firebase.host().off();\n  }\n\n  handleOnChange = e => {\n    this.setState({ [e.target.name]: e.target.value });\n  };\n\n  render() {\n    const { userTests, loading } = this.state;\n\n    return (\n      <section id=\"instructor-hostedtest-list\">\n        {loading && <div>No available quizzes.</div>}\n        {userTests && (\n          <ul>\n            {userTests.length !== 0 &&\n              userTests.map(test => (\n                <Link\n                  to={{\n                    pathname: `${ROUTES.TESTS}/i/${test.tid}`,\n                    state: test.tid\n                  }}\n                  key={test.tid}\n                >\n                  <li>Quiz ID Number: {test.tid}</li>\n                </Link>\n              ))}\n          </ul>\n        )}\n      </section>\n    );\n  }\n}\n\nexport default compose(\n  withRouter,\n  withFirebase\n)(HostedTestList);\n","import React from 'react';\n\n// *** Styles *** //\nimport '../../styles/components/Tests/CreateTestBank.css';\n\n// *** HOC and Context *** //\nimport { withFirebase } from '../Firebase';\n\nclass CreateTestBank extends React.Component {\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      authUser: JSON.parse(localStorage.getItem('authUser')),\n      error: '',\n      tid: '',\n      totalPoints: '',\n      passingScore: '',\n      tidPrefix: '',\n    };\n  }\n\n  componentDidMount() {\n    const { authUser } = this.state;\n    this.fetchUser();\n    const tidPrefix = authUser.uid.substring(0, 4);\n    this.setState({ tidPrefix });\n  }\n\n  fetchUser = () => {\n    const { firebase } = this.props;\n    firebase.auth.onAuthStateChanged((user) => {\n      if (user) {\n        this.setState({ user, error: null });\n      }\n    });\n  };\n\n  handleOnSubmit = (e) => {\n    const { tid, tidPrefix, totalPoints, passingScore } = this.state;\n    const { firebase } = this.props;\n    e.preventDefault();\n\n    const testBankMeta = {\n      tid: `${tidPrefix}${tid}`,\n      totalPoints: totalPoints,\n      passingScore: passingScore,\n    };\n\n    firebase.test(`${tidPrefix}${tid}`).set(testBankMeta);\n\n    this.setState({\n      tid: '',\n      totalPoints: '',\n      passingScore: '',\n    });\n  };\n\n  handleChange = (e) => {\n    this.setState({\n      [e.target.name]: e.target.value,\n    });\n  };\n\n  render() {\n    const {\n      authUser,\n      tidPrefix,\n      totalPoints,\n      testBankId,\n      passingScore,\n    } = this.state;\n    return (\n      <main id=\"create-test-bank\">\n        <h2>Create Test Bank</h2>\n        <p>\n          Instructor Name: {authUser.username}\n          <br />\n          Test ID prefix: {tidPrefix}\n        </p>\n        <form id=\"newTestBank\" onSubmit={this.handleOnSubmit}>\n          <label>Test Bank ID Number</label>\n          <input\n            type=\"number\"\n            value={testBankId}\n            name=\"tid\"\n            onChange={this.handleChange}\n            placeholder=\"Test ID\"\n          />\n          <label>Total Points</label>\n          <input\n            type=\"number\"\n            value={totalPoints}\n            name=\"totalPoints\"\n            onChange={this.handleChange}\n            placeholder=\"Total Points\"\n          />\n          <label>Passing Score</label>\n          <input\n            type=\"number\"\n            value={passingScore}\n            name=\"passingScore\"\n            onChange={this.handleChange}\n            placeholder=\"Passing Score\"\n          />\n          <input type=\"submit\" name=\"submit\" value=\"Submit\" />\n          <input type=\"reset\" name=\"reset\" value=\"Reset\" />\n        </form>\n      </main>\n    );\n  }\n}\n\nexport default withFirebase(CreateTestBank);\n","import React from \"react\";\n\n// *** Styles *** //\nimport \"../../styles/components/Tests/TakeTest.css\";\n\n// *** Third-Party *** //\nimport { compose } from \"recompose\";\n\n// *** HOC and Context *** //\nimport { withFirebase } from \"../Firebase\";\nimport { withAuthentication } from \"../Session\";\n\nclass TakeTest extends React.Component {\n  constructor(props) {\n    super(props);\n    const { state } = this.props.location;\n    this.state = {\n      uid: state.uid,\n      tid: state.tid,\n      questions: [],\n      test: null,\n      loading: true,\n      submittedAnswers: [],\n      currentQuestion: \"\",\n      selectedAnswer: \"\",\n      answered: false\n    };\n  }\n\n  componentDidMount() {\n    const { tid } = this.state;\n    const { firebase } = this.props;\n    firebase.host(tid).on(\"value\", snapshot => {\n      this.setState({\n        test: snapshot.val(),\n        questions: Object.values(snapshot.val().questions),\n        currentQuestion: snapshot.val().currentQuestion,\n        loading: false\n      });\n    });\n  }\n\n  handleSubmitAnswer = e => {\n    e.preventDefault();\n    const { firebase } = this.props;\n    const { tid, uid } = this.state;\n    firebase\n      .host(tid)\n      .child(`answersGiven/`)\n      .child(`${e.target.dataset.question}/`)\n      .child(`${uid}`)\n      .set(e.target.dataset.key);\n\n    this.setState({ answered: true });\n  };\n\n  render() {\n    const {\n      loading,\n      test,\n      questions,\n      tid,\n      instructorID,\n      url,\n      currentQuestion,\n      answered\n    } = this.state;\n    const { firebase } = this.props;\n    return (\n      <main id=\"take-test\">\n        {loading && <div>Loading ...</div>}\n        {test && (\n          <section id=\"test\">\n            <h2>Test ID: {tid}</h2>\n            {answered ? (\n              <article className=\"question-results\">\n                You've answered the question...\n              </article>\n            ) : (\n              <article className=\"test-question\">\n                <ul id=\"questions\">\n                  <li className=\"question\">\n                    {\n                      <p className=\"questionTitle\">\n                        Question #{questions[currentQuestion].questionNum}:{\" \"}\n                        {questions[currentQuestion].question}\n                      </p>\n                    }\n                  </li>\n                  {questions[currentQuestion].image &&\n                    firebase\n                      .images(instructorID)\n                      .child(\n                        `${questions[currentQuestion].image.substring(12)}`\n                      )\n                      .getDownloadURL()\n                      .then(url => {\n                        this.setState({ url });\n                      })}\n                  <br />\n                  {questions[currentQuestion].image && (\n                    <img src={url} alt=\"question\" title=\"Image Question\" />\n                  )}\n                  <ol>\n                    {questions[currentQuestion].options.map(op => (\n                      <li\n                        key={op}\n                        data-key={op}\n                        data-question={questions[currentQuestion].questionNum}\n                        className=\"option btn\"\n                        id={op}\n                        value={op}\n                        onClick={this.handleSubmitAnswer}\n                      >\n                        {op}\n                      </li>\n                    ))}\n                  </ol>\n                </ul>\n              </article>\n            )}\n          </section>\n        )}\n      </main>\n    );\n  }\n}\n\nexport default compose(\n  withAuthentication,\n  withFirebase\n)(TakeTest);\n","import React from 'react';\n\n// *** Styles *** //\nimport '../../styles/components/Student/TakeTest.css';\n\n// *** HOC and Context *** //\nimport { withFirebase } from '../Firebase';\n\n// *** Components *** //\nimport TestList from './TestList';\n\nconst TakeTest = () => (\n  <main id=\"taketest\">\n    <h2>Select A Test</h2>\n    <div className=\"select-test\">\n      <TestList />\n    </div>\n  </main>\n);\n\nexport default withFirebase(TakeTest);\n","import React from \"react\";\n\n// *** Constants *** //\nimport * as ROUTES from \"../../constants/routes\";\nimport * as ROLES from \"../../constants/roles\";\n\n// *** Styles *** //\nimport \"../../styles/components/Tests/TestPage.css\";\n\n// *** Third-Party *** //\nimport { compose } from \"recompose\";\n\n// *** HOC and Context *** //\nimport { withFirebase } from \"../Firebase\";\nimport { withAuthentication } from \"../Session\";\n\nclass TestPage extends React.Component {\n  constructor(props) {\n    super(props);\n    const { authUser, test } = this.props.location.state;\n    this.state = {\n      authUser: authUser,\n      test: test,\n      tid: test.tid,\n      questions: Object.values(test.questions),\n      loading: true,\n      url: \"\",\n      toggle: false,\n      answersGiven: []\n    };\n  }\n\n  componentWillMount = () => {\n    this.setState({ loading: false });\n    console.log(this.state);\n  };\n\n  handleHostTest = e => {\n    e.preventDefault();\n    const { tid, test, questions, answersGiven } = this.state;\n    const { firebase, history } = this.props;\n    const numberOfQuestions = questions.length;\n    for (let i = 1; i <= numberOfQuestions; i++) {\n      this.state.answersGiven.push([i, false]);\n    }\n    const hostedTest = {\n      answersGiven: answersGiven,\n      currentQuestion: 0,\n      ...test\n    };\n    // *** Create Hosted Test *** //\n    firebase.host(tid).set(hostedTest);\n\n    history.push({\n      pathname: `${ROUTES.TESTS}/i/${tid}`,\n      state: tid\n    });\n  };\n\n  render() {\n    const { test, tid, loading, questions, authUser, url } = this.state;\n    const { firebase } = this.props;\n\n    return (\n      <main id=\"test-page\">\n        <h2>Test #{tid}</h2>\n        {loading && <div>Loading ...</div>}\n        {/* Checks if there is a tests object and prints the following JSX */}\n        {test && (\n          <div>\n            {(authUser && authUser.roles.includes(ROLES.ADMIN)) ||\n            authUser.roles.includes(ROLES.INSTRUCTOR) ? (\n              <article id=\"tests-host\">\n                <form onSubmit={this.handleHostTest}>\n                  <input type=\"submit\" name=\"submit\" value=\"Host This Test\" />\n                </form>\n              </article>\n            ) : (\n              \"\"\n            )}\n            <ul>\n              <li>Possible Points: {test.totalPoints}</li>\n              <li>Passing Score: {test.passingScore}</li>\n              <li>Number of Questions: {test.questions.length - 1}</li>\n              <li>\n                Questions:\n                <ul id=\"questions\">\n                  {/* Iterates through the questions array, checks if there is an image associated with it, downloads the image and sets the url to the url state. */}\n                  {questions.map(question => {\n                    question.image &&\n                      firebase\n                        .images(authUser.uid)\n                        .child(`${question.image.substring(12)}`)\n                        .getDownloadURL()\n                        .then(url => {\n                          this.setState({ url });\n                        });\n                    /* Returns the question number, text, image (if there is one) and then iterates through the options which are clickable to submit answers. */\n                    return (\n                      <li className=\"question\" key={question.questionNum}>\n                        <p className=\"questionTitle\">\n                          Question #{question.questionNum}: {question.question}\n                        </p>\n                        <br />\n                        {question.image && (\n                          <img\n                            src={url}\n                            alt=\"question\"\n                            title=\"Image Question\"\n                          />\n                        )}\n                        <ol>\n                          {question.options.map(op => (\n                            <li\n                              key={op}\n                              data-key={op}\n                              data-question={question.questionNum}\n                              className=\"option btn\"\n                              id={op}\n                              value={op}\n                              onClick={this.handleSubmitAnswer}\n                              // onMouseDown={this.handleToggle}\n                            >\n                              {op}\n                            </li>\n                          ))}\n                        </ol>\n                        Answer: {question.answer}\n                      </li>\n                    );\n                  })}\n                </ul>\n              </li>\n            </ul>\n          </div>\n        )}\n      </main>\n    );\n  }\n}\n\n// Wraps the component with the higher order component \"withFirebase\" to give the component access to the Firebase API.\nexport default compose(\n  withAuthentication,\n  withFirebase\n)(TestPage);\n","import React from \"react\";\nimport { Bar } from \"react-chartjs-2\";\n\nconst BarChart = props => (\n  <Bar\n    data={{\n      labels: props.labels,\n      datasets: [\n        {\n          label: \"My First Dataset\",\n          backgroundColor: \"#0051ba\",\n          borderWidth: 1,\n          hoverBackgroundColor: \"#e8000d\",\n          hoverBorderColor: \"#fff\",\n          data: props.data\n        }\n      ]\n    }}\n    options={{\n      maintainAspectRatio: false,\n      legend: {\n        display: false\n      },\n      scales: {\n        yAxes: [\n          {\n            ticks: {\n              max: 100,\n              min: 0,\n              stepSize: 10\n            }\n          }\n        ]\n      }\n    }}\n    width={100}\n    height={100}\n  />\n);\n\nexport default BarChart;\n","import React, { Component } from \"react\";\nimport BarChart from \"./BarChart\";\n\n// *** Constants *** //\n\n// *** Styles *** //\n\n// *** Third-Party *** //\nimport { compose } from \"recompose\";\n\n// *** HOC and Context *** //\nimport { withFirebase } from \"../Firebase\";\nimport { withAuthentication } from \"../Session\";\n\n// *** Components *** //\n\nclass HostTest extends Component {\n  constructor(props) {\n    super(props);\n    const { state } = this.props.location;\n    this.state = {\n      tid: state,\n      questions: [],\n      test: null,\n      loading: true,\n      answersGiven: [],\n      currentQuestion: \"\",\n      submittedAnswers: [],\n      labels: [],\n      data: []\n    };\n  }\n  componentWillMount() {\n    const { tid, data } = this.state;\n    const { firebase } = this.props;\n    firebase.host(tid).on(\"value\", snapshot => {\n      this.setState({\n        test: snapshot.val(),\n        questions: Object.values(snapshot.val().questions),\n        currentQuestion: snapshot.val().currentQuestion,\n        answersGiven: Object.values(snapshot.val().answersGiven),\n        loading: false\n      });\n\n      // *** Initializing Arrays *** //\n      const submittedAnswersArray = [];\n      const justAnswers = [];\n      const labels = [];\n      const dataArry = [];\n      const currQuest = snapshot.val().currentQuestion;\n\n      // *** if that looks at the answers given to the current question, pulls out the answers from the student IDs *** //\n      if (this.state.answersGiven[currQuest]) {\n        Object.entries(this.state.answersGiven[currQuest]).forEach(\n          ([key, value]) => {\n            submittedAnswersArray.push([key, value]);\n            justAnswers.push(value);\n          }\n        );\n        this.setState({\n          submittedAnswers: submittedAnswersArray\n        });\n      } else {\n        return;\n      }\n\n      // *** Sort justAnswers and counts the duplicates. Also stores the unique entires into the labels array. *** //\n      justAnswers.sort();\n      let current = null;\n      let cnt = 1;\n      for (let i = 0; i < justAnswers.length; i++) {\n        current = justAnswers[i];\n        if (justAnswers[i + 1] == current) {\n          cnt++;\n        } else {\n          labels.push(current);\n          // *** Takes the number of answers that are the same, divides them by the length of the answers and multiples by 100 to get the percentage *** //\n          dataArry.push((cnt / justAnswers.length) * 100);\n          cnt = 1;\n        }\n      }\n\n      this.setState({ labels, data: dataArry });\n    });\n  }\n\n  handleNextQuestion = () => {\n    const { firebase } = this.props;\n    const { tid, currentQuestion } = this.state;\n    let increment = 1;\n    this.setState(prevState => ({\n      currentQuestion: prevState.currentQuestion + increment\n    }));\n\n    firebase\n      .host(tid)\n      .child(`currentQuestion`)\n      .set(currentQuestion);\n  };\n\n  render() {\n    const { tid, loading, test, labels, data } = this.state;\n    return (\n      <main id=\"host-test\">\n        {loading && <div>Loading...</div>}\n        {test && (\n          <section>\n            <h2>Test ID: {tid}</h2>\n            <p>Answers</p>\n            <BarChart labels={labels} data={data} />\n          </section>\n        )}\n        <input\n          type=\"button\"\n          value=\"Next Question\"\n          name=\"next-question\"\n          onClick={this.handleNextQuestion}\n        />\n      </main>\n    );\n  }\n}\n\nexport default compose(\n  withAuthentication,\n  withFirebase\n)(HostTest);\n","import React from \"react\";\n\n// *** Constants *** //\nimport * as ROLES from \"../../constants/roles\";\nimport * as ROUTES from \"../../constants/routes\";\n\n// *** Styles *** //\nimport \"../../styles/components/Instructor/InstructorPage.css\";\n\n// *** Third-Party *** //\nimport { compose } from \"recompose\";\n\n// *** HOC and Context *** //\nimport { withAuthorization } from \"../Session\";\nimport { withRouter } from \"react-router-dom\";\n\n// *** Components *** //\nimport { TestList } from \"../Tests\";\nimport { HostedTestList } from \"../Tests\";\n\nclass InstructorPage extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      authUser: JSON.parse(localStorage.getItem(\"authUser\")).uid\n    };\n  }\n\n  handleEndHostedQuizzes = () => {\n    const { authUser } = this.state;\n    const { firebase } = this.props;\n    firebase.hosts(authUser).remove();\n  };\n\n  handleLinkClick = e => {\n    const { history } = this.props;\n    let route;\n    if (e.target.name === \"CREATE_TEST\") {\n      route = ROUTES.CREATE_TEST;\n    } else {\n      route = ROUTES.NEW_QUESTION;\n    }\n    history.push(route);\n  };\n\n  render() {\n    return (\n      <main id=\"instructor-page\">\n        <h2>Instructor</h2>\n        <h3>Create Quizzes</h3>\n        <input\n          type=\"button\"\n          value=\"Create Quiz Bank\"\n          name=\"CREATE_TEST\"\n          onClick={this.handleLinkClick}\n        />\n        <input\n          type=\"button\"\n          value=\"New Question\"\n          name=\"NEW_QUESTION\"\n          onClick={this.handleLinkClick}\n        />\n        <section id=\"instructor-test-list\">\n          <article id=\"test-list\">\n            <h3>Available Quizzes</h3>\n            <TestList />\n          </article>\n        </section>\n        <section id=\"instructor-hosted-tests\">\n          <article id=\"hosted-list\">\n            <h3>Hosted Quizzes</h3>\n            <HostedTestList />\n            <input\n              type=\"button\"\n              value=\"End Hosted Quizzes\"\n              className=\"endHostedTests\"\n              onClick={this.handleEndHostedQuizzes}\n            />\n          </article>\n        </section>\n      </main>\n    );\n  }\n}\n\nconst condition = authUser =>\n  (authUser && authUser.roles.includes(ROLES.ADMIN)) ||\n  authUser.roles.includes(ROLES.INSTRUCTOR);\n\nexport default compose(\n  withAuthorization(condition),\n  withRouter\n)(InstructorPage);\n","import React from 'react';\n\n// *** HOC and Context *** //\nimport { withFirebase } from '../Firebase';\n\nconst SignOutButton = ({ firebase }) => (\n  <button type=\"button\" onClick={firebase.doSignOut}>\n    Sign Out\n  </button>\n);\n\nexport default withFirebase(SignOutButton);\n","import React from \"react\";\n\n// *** Constants *** //\nimport * as ROUTES from \"../../constants/routes\";\nimport * as ROLES from \"../../constants/roles\";\n\n// *** Styles *** //\nimport logo from \"../../images/logo.svg\";\nimport \"../../styles/components/Navigation.css\";\n\n// *** Third-Party *** //\nimport { NavLink as Link } from \"react-router-dom\";\n\n// *** HOC and Context *** //\nimport { AuthUserContext } from \"../Session\";\n\n// *** Components *** //\nimport SignOutButton from \"../SignOut\";\n\nconst Navigation = () => (\n  <AuthUserContext.Consumer>\n    {authUser =>\n      authUser ? <NavigationAuth authUser={authUser} /> : <NavigationNonAuth />\n    }\n  </AuthUserContext.Consumer>\n);\n\nconst NavigationAuth = ({ authUser }) => (\n  <header>\n    <div id=\"logo-title\">\n      <img src={logo} alt=\"Question Air\" title=\"Question Air\" />\n      <h1>\n        Question <span id=\"air\">Air</span>\n      </h1>\n    </div>\n    <nav>\n      <ul>\n        <li>\n          <Link to={ROUTES.HOME} exact activeClassName=\"selected\">\n            Home\n          </Link>\n        </li>\n        <li>\n          <Link to={ROUTES.ACCOUNT} activeClassName=\"selected\">\n            Account\n          </Link>\n        </li>\n        <li>\n          <Link to={ROUTES.STUDENT} activeClassName=\"selected\">\n            Student\n          </Link>\n        </li>\n        {(authUser.roles.includes(ROLES.ADMIN) ||\n          authUser.roles.includes(ROLES.INSTRUCTOR)) && (\n          <li>\n            <Link to={ROUTES.INSTRUCTOR} activeClassName=\"selected\">\n              Instructor\n            </Link>\n          </li>\n        )}\n        {authUser.roles.includes(ROLES.ADMIN) && (\n          <li>\n            <Link to={ROUTES.ADMIN} activeClassName=\"selected\">\n              Admin\n            </Link>\n          </li>\n        )}\n      </ul>\n      <SignOutButton />\n    </nav>\n  </header>\n);\n\nconst NavigationNonAuth = () => (\n  <header>\n    <h1>Question Air</h1>\n    <nav>\n      <ul>\n        <li>\n          <Link to={ROUTES.SIGN_IN}>Sign In</Link>\n        </li>\n      </ul>\n    </nav>\n  </header>\n);\n\nexport default Navigation;\n","import React, { Component } from 'react';\n\n// *** Constants *** //\nimport * as ROUTES from '../../constants/routes';\n\n// *** Third-Party *** //\nimport { Link, withRouter } from 'react-router-dom';\n\n// *** HOC and Context *** //\nimport { withFirebase } from '../Firebase';\n\nconst SignUpPage = () => (\n  <div>\n    <h1>SignUp</h1>\n    <SignUpForm />\n  </div>\n);\n\nconst INITIAL_STATE = {\n  username: '',\n  email: '',\n  passwordOne: '',\n  passwordTwo: '',\n  requestAdmin: false,\n  requestInstructor: false,\n  error: null,\n};\n\nconst ERROR_CODE_ACCOUNT_EXISTS = 'auth/email-already-in-use';\n\nconst ERROR_MSG_ACCOUNT_EXISTS = `\n  An account with this E-Mail address already exists.\n  Try to login with this account instead. If you think the\n  account is already used from one of the social logins, try\n  to sign in with one of them. Afterward, associate your accounts\n  on your personal account page.\n`;\n\nclass SignUpFormBase extends Component {\n  constructor(props) {\n    super(props);\n\n    this.state = { ...INITIAL_STATE };\n  }\n\n  onSubmit = (event) => {\n    const {\n      username,\n      email,\n      passwordOne,\n      requestAdmin,\n      requestInstructor,\n    } = this.state;\n    const { firebase, history } = this.props;\n    const requests = [];\n    if (requestAdmin) {\n      requests.push('admin');\n    }\n    if (requestInstructor) {\n      requests.push('instructor');\n    }\n\n    firebase\n      .doCreateUserWithEmailAndPassword(email, passwordOne)\n      .then((authUser) => {\n        // Create a user in your Firebase real time database\n        return firebase.user(authUser.user.uid).set({\n          username,\n          email,\n          requests,\n        });\n      })\n      .then(() => {\n        return firebase.doSendEmailVerification();\n      })\n      .then(() => {\n        this.setState({ ...INITIAL_STATE });\n        history.push(ROUTES.HOME);\n      })\n      .catch((error) => {\n        if (error.code === ERROR_CODE_ACCOUNT_EXISTS) {\n          error.message = ERROR_MSG_ACCOUNT_EXISTS;\n        }\n\n        this.setState({ error });\n      });\n\n    event.preventDefault();\n  };\n\n  onChange = (event) => {\n    this.setState({ [event.target.name]: event.target.value });\n  };\n\n  onChangeCheckbox = (event) => {\n    this.setState({ [event.target.name]: event.target.checked });\n  };\n\n  render() {\n    const {\n      username,\n      email,\n      passwordOne,\n      passwordTwo,\n      error,\n      requestInstructor,\n      requestAdmin,\n    } = this.state;\n\n    const isInvalid =\n      passwordOne !== passwordTwo ||\n      passwordOne === '' ||\n      email === '' ||\n      username === '';\n\n    return (\n      <form onSubmit={this.onSubmit}>\n        <input\n          name=\"username\"\n          value={username}\n          onChange={this.onChange}\n          type=\"text\"\n          placeholder=\"Full Name\"\n        />\n        <input\n          name=\"email\"\n          value={email}\n          onChange={this.onChange}\n          type=\"text\"\n          placeholder=\"Email Address\"\n        />\n        <input\n          name=\"passwordOne\"\n          value={passwordOne}\n          onChange={this.onChange}\n          type=\"password\"\n          placeholder=\"Password\"\n        />\n        <input\n          name=\"passwordTwo\"\n          value={passwordTwo}\n          onChange={this.onChange}\n          type=\"password\"\n          placeholder=\"Confirm Password\"\n        />\n        <label>\n          Request Admin:\n          <input\n            name=\"requestAdmin\"\n            type=\"checkbox\"\n            checked={requestAdmin}\n            onChange={this.onChangeCheckbox}\n          />\n        </label>\n        <label>\n          Request Instructor:\n          <input\n            name=\"requestInstructor\"\n            type=\"checkbox\"\n            checked={requestInstructor}\n            onChange={this.onChangeCheckbox}\n          />\n        </label>\n        <button disabled={isInvalid} type=\"submit\">\n          Sign Up\n        </button>\n\n        {error && <p>{error.message}</p>}\n      </form>\n    );\n  }\n}\n\nconst SignUpLink = () => (\n  <p>\n    Don't have an account? <Link to={ROUTES.SIGN_UP}>Sign Up</Link>\n  </p>\n);\n\nconst SignUpForm = withRouter(withFirebase(SignUpFormBase));\n\nexport default SignUpPage;\n\nexport { SignUpForm, SignUpLink };\n","import React, { Component } from 'react';\n\n// *** Constants *** //\nimport * as ROUTES from '../../constants/routes';\n\n// *** Third-Party *** //\nimport { withRouter } from 'react-router-dom';\nimport { compose } from 'recompose';\n\n// *** HOC and Context *** //\nimport { withFirebase } from '../Firebase';\n\n// *** Components *** //\nimport { PasswordForgetLink } from '../PasswordForget';\nimport { SignUpLink } from '../SignUp';\n\nconst SignInPage = () => (\n  <div>\n    <h1>SignIn</h1>\n    <SignInForm />\n    <SignInGoogle />\n    <SignInFacebook />\n    <SignInTwitter />\n    <PasswordForgetLink />\n    <SignUpLink />\n  </div>\n);\n\nconst INITIAL_STATE = {\n  email: '',\n  password: '',\n  error: null,\n};\n\nconst ERROR_CODE_ACCOUNT_EXISTS =\n  'auth/account-exists-with-different-credential';\n\nconst ERROR_MSG_ACCOUNT_EXISTS = `\n  An account with an E-Mail address to\n  this social account already exists. Try to login from\n  this account instead and associate your social accounts on\n  your personal account page.\n`;\n\nclass SignInFormBase extends Component {\n  constructor(props) {\n    super(props);\n\n    this.state = { ...INITIAL_STATE };\n  }\n\n  onSubmit = (event) => {\n    const { email, password } = this.state;\n    const { firebase, history } = this.props;\n\n    firebase\n      .doSignInWithEmailAndPassword(email, password)\n      .then(() => {\n        this.setState({ ...INITIAL_STATE });\n        history.push(ROUTES.HOME);\n      })\n      .catch((error) => {\n        this.setState({ error });\n      });\n\n    event.preventDefault();\n  };\n\n  onChange = (event) => {\n    this.setState({ [event.target.name]: event.target.value });\n  };\n\n  render() {\n    const { email, password, error } = this.state;\n\n    const isInvalid = password === '' || email === '';\n\n    return (\n      <form onSubmit={this.onSubmit}>\n        <input\n          name=\"email\"\n          value={email}\n          onChange={this.onChange}\n          type=\"text\"\n          placeholder=\"Email Address\"\n        />\n        <input\n          name=\"password\"\n          value={password}\n          onChange={this.onChange}\n          type=\"password\"\n          placeholder=\"Password\"\n        />\n        <button disabled={isInvalid} type=\"submit\">\n          Sign In\n        </button>\n\n        {error && <p>{error.message}</p>}\n      </form>\n    );\n  }\n}\n\nclass SignInGoogleBase extends Component {\n  constructor(props) {\n    super(props);\n\n    this.state = { error: null };\n  }\n\n  onSubmit = (event) => {\n    const { firebase, history } = this.props;\n    firebase\n      .doSignInWithGoogle()\n      .then((socialAuthUser) => {\n        // Create a user in your Firebase Realtime Database too\n        return firebase.user(socialAuthUser.user.uid).set({\n          username: socialAuthUser.user.displayName,\n          email: socialAuthUser.user.email,\n          roles: [],\n        });\n      })\n      .then(() => {\n        this.setState({ error: null });\n        history.push(ROUTES.HOME);\n      })\n      .catch((error) => {\n        if (error.code === ERROR_CODE_ACCOUNT_EXISTS) {\n          error.message = ERROR_MSG_ACCOUNT_EXISTS;\n        }\n\n        this.setState({ error });\n      });\n\n    event.preventDefault();\n  };\n\n  render() {\n    const { error } = this.state;\n\n    return (\n      <form onSubmit={this.onSubmit}>\n        <button type=\"submit\">Sign In with Google</button>\n\n        {error && <p>{error.message}</p>}\n      </form>\n    );\n  }\n}\n\nclass SignInFacebookBase extends Component {\n  constructor(props) {\n    super(props);\n\n    this.state = { error: null };\n  }\n\n  onSubmit = (event) => {\n    const { firebase, history } = this.props;\n    firebase\n      .doSignInWithFacebook()\n      .then((socialAuthUser) => {\n        // Create a user in your Firebase Realtime Database too\n        return firebase.user(socialAuthUser.user.uid).set({\n          username: socialAuthUser.additionalUserInfo.profile.name,\n          email: socialAuthUser.additionalUserInfo.profile.email,\n          roles: [],\n        });\n      })\n      .then(() => {\n        this.setState({ error: null });\n        history.push(ROUTES.HOME);\n      })\n      .catch((error) => {\n        if (error.code === ERROR_CODE_ACCOUNT_EXISTS) {\n          error.message = ERROR_MSG_ACCOUNT_EXISTS;\n        }\n\n        this.setState({ error });\n      });\n\n    event.preventDefault();\n  };\n\n  render() {\n    const { error } = this.state;\n\n    return (\n      <form onSubmit={this.onSubmit}>\n        <button type=\"submit\">Sign In with Facebook</button>\n\n        {error && <p>{error.message}</p>}\n      </form>\n    );\n  }\n}\n\nclass SignInTwitterBase extends Component {\n  constructor(props) {\n    super(props);\n\n    this.state = { error: null };\n  }\n\n  onSubmit = (event) => {\n    const { firebase, history } = this.props;\n    firebase\n      .doSignInWithTwitter()\n      .then((socialAuthUser) => {\n        // Create a user in your Firebase Realtime Database too\n        return firebase.user(socialAuthUser.user.uid).set({\n          username: socialAuthUser.additionalUserInfo.profile.name,\n          email: socialAuthUser.additionalUserInfo.profile.email,\n          roles: [],\n        });\n      })\n      .then(() => {\n        this.setState({ error: null });\n        history.push(ROUTES.HOME);\n      })\n      .catch((error) => {\n        if (error.code === ERROR_CODE_ACCOUNT_EXISTS) {\n          error.message = ERROR_MSG_ACCOUNT_EXISTS;\n        }\n\n        this.setState({ error });\n      });\n\n    event.preventDefault();\n  };\n\n  render() {\n    const { error } = this.state;\n\n    return (\n      <form onSubmit={this.onSubmit}>\n        <button type=\"submit\">Sign In with Twitter</button>\n\n        {error && <p>{error.message}</p>}\n      </form>\n    );\n  }\n}\n\nconst SignInForm = compose(\n  withRouter,\n  withFirebase,\n)(SignInFormBase);\n\nconst SignInGoogle = compose(\n  withRouter,\n  withFirebase,\n)(SignInGoogleBase);\n\nconst SignInFacebook = compose(\n  withRouter,\n  withFirebase,\n)(SignInFacebookBase);\n\nconst SignInTwitter = compose(\n  withRouter,\n  withFirebase,\n)(SignInTwitterBase);\n\nexport default SignInPage;\n\nexport { SignInForm, SignInGoogle, SignInFacebook, SignInTwitter };\n","import React from 'react';\n\n// *** Constants *** //\nimport * as ROLES from '../../constants/roles';\n\n// *** Styles *** //\nimport '../../styles/components/Student/StudentDashboard.css';\n\n// *** Third-Party *** //\nimport { compose } from 'recompose';\n\n// *** HOC and Context *** //\nimport { withAuthorization, withAuthentication } from '../Session';\nimport { withFirebase } from '../Firebase';\n\nclass StudentPage extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      tid: '',\n      uid: '',\n      authUser: JSON.parse(localStorage.getItem(`authUser`)),\n    };\n  }\n\n  componentWillMount() {\n    const { authUser } = this.state;\n    this.setState({ uid: authUser.uid });\n  }\n\n  handleStartTest = (e) => {\n    e.preventDefault();\n    const { tid, uid } = this.state;\n    const { history } = this.props;\n    history.push({\n      pathname: `tests/s/${tid}`,\n      state: { tid, uid },\n    });\n  };\n\n  handleOnChange = (e) => {\n    this.setState({ [e.target.name]: e.target.value });\n  };\n\n  render() {\n    const { tid } = this.state;\n    return (\n      <main id=\"student\">\n        <h2>Student</h2>\n        <h3>Take a Test</h3>\n        <form onSubmit={this.handleStartTest}>\n          <label>\n            Enter the given Test ID number\n            <input\n              type=\"text\"\n              name=\"tid\"\n              value={tid}\n              onChange={this.handleOnChange}\n              placeholder=\"Test ID\"\n            />\n          </label>\n          <input type=\"submit\" value=\"Submit\" name=\"submit\" />\n        </form>\n      </main>\n    );\n  }\n}\n\nconst condition = (authUser) =>\n  (authUser && authUser.roles.includes(ROLES.ADMIN)) ||\n  authUser.roles.includes(ROLES.INSTRUCTOR) ||\n  authUser.roles.includes(ROLES.STUDENT);\n\nexport default compose(\n  withAuthorization(condition),\n  withAuthentication,\n  withFirebase,\n)(StudentPage);\n","import React from 'react';\n\n// *** Libraries *** //\nimport { isNullOrUndefined } from 'util';\n\n// *** Styles *** //\nimport '../../styles/components/Questions/NewQuestion.css';\n\n// *** HOC and Context *** //\nimport { withFirebase } from '../Firebase';\n\nclass NewQuestion extends React.Component {\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      tid: '',\n      reference1: '',\n      reference2: '',\n      question: '',\n      questionNum: '',\n      op1: '',\n      op2: '',\n      op3: '',\n      op4: '',\n      op5: '',\n      op6: '',\n      op7: '',\n      op8: '',\n      op9: '',\n      op10: '',\n      options: [],\n      answer: '',\n      user: '',\n      image: '',\n    };\n  }\n\n  componentDidMount() {\n    this.fetchUser();\n  }\n\n  fetchUser = () => {\n    const { firebase } = this.props;\n    firebase.auth.onAuthStateChanged((user) => {\n      if (user) {\n        this.setState({ user, error: null });\n      }\n    });\n  };\n\n  handleOnSubmit = (e) => {\n    const { firebase } = this.props;\n    const {\n      op1,\n      op2,\n      op3,\n      op4,\n      op5,\n      op6,\n      op7,\n      op8,\n      op9,\n      op10,\n      options,\n      tid,\n      reference1,\n      reference2,\n      question,\n      questionNum,\n      answer,\n      user,\n      image,\n    } = this.state;\n    e.preventDefault();\n\n    if (op1) {\n      options.push(op1);\n    }\n    if (op2) {\n      options.push(op2);\n    }\n    if (op3) {\n      options.push(op3);\n    }\n    if (op4) {\n      options.push(op4);\n    }\n    if (op5) {\n      options.push(op5);\n    }\n    if (op6) {\n      options.push(op6);\n    }\n    if (op7) {\n      options.push(op7);\n    }\n    if (op8) {\n      options.push(op8);\n    }\n    if (op9) {\n      options.push(op9);\n    }\n    if (op10) {\n      options.push(op10);\n    }\n    if (e.target.upLoadImage === isNullOrUndefined) {\n      const file = e.target.uploadImage.files[0];\n      const fileName = file.name;\n      firebase\n        .image(user.uid, fileName)\n        .put(file)\n        .then((snapshot) => {\n          console.log(snapshot);\n        });\n    }\n\n    const addQuestion = {\n      reference1: reference1,\n      reference2: reference2,\n      question: question,\n      questionNum: questionNum,\n      options: options,\n      answer: answer,\n      image: image,\n    };\n\n    firebase\n      .test(tid)\n      .child('questions/')\n      .child(questionNum)\n      .set(addQuestion);\n\n    this.setState({\n      reference1: '',\n      reference2: '',\n      question: '',\n      questionNum: '',\n      op1: '',\n      op2: '',\n      op3: '',\n      op4: '',\n      op5: '',\n      op6: '',\n      op7: '',\n      op8: '',\n      op9: '',\n      op10: '',\n      answer: '',\n      options: [],\n      image: '',\n    });\n  };\n\n  handleChange = (e) => {\n    this.setState({\n      [e.target.name]: e.target.value,\n    });\n  };\n\n  render() {\n    const {\n      testBankId,\n      reference1,\n      reference2,\n      questionNum,\n      question,\n      op1,\n      op2,\n      op3,\n      op4,\n      op5,\n      op6,\n      op7,\n      op8,\n      op9,\n      op10,\n      answer,\n    } = this.state;\n    return (\n      <main id=\"new-question\">\n        <h2>Create Questions</h2>\n        <form id=\"newQuestion\" onSubmit={this.handleOnSubmit}>\n          <label>Test Bank ID Number</label>\n          <input\n            type=\"text\"\n            value={testBankId}\n            name=\"tid\"\n            onChange={this.handleChange}\n            placeholder=\"Test Bank ID\"\n          />\n          <label>Reference 1</label>\n          <input\n            type=\"text\"\n            value={reference1}\n            name=\"reference1\"\n            onChange={this.handleChange}\n            placeholder=\"Reference 1\"\n          />\n          <label>Reference 2</label>\n          <input\n            type=\"text\"\n            value={reference2}\n            name=\"reference2\"\n            onChange={this.handleChange}\n            placeholder=\"Reference 2\"\n          />\n          <label>Question Number and Content</label>\n          <input\n            type=\"number\"\n            value={questionNum}\n            name=\"questionNum\"\n            onChange={this.handleChange}\n            placeholder=\"Question Number\"\n          />\n          <input\n            type=\"text\"\n            value={question}\n            name=\"question\"\n            onChange={this.handleChange}\n            placeholder=\"Question Text\"\n          />\n          <input\n            accept=\".jpg,.png\"\n            type=\"file\"\n            id=\"uploadImage\"\n            name=\"image\"\n            onChange={this.handleChange}\n          />\n          <label>Option A</label>\n          <input\n            type=\"text\"\n            value={op1}\n            name=\"op1\"\n            onChange={this.handleChange}\n            placeholder=\"Option A\"\n          />\n          <label>Option B</label>\n          <input\n            type=\"text\"\n            value={op2}\n            name=\"op2\"\n            onChange={this.handleChange}\n            placeholder=\"Option B\"\n          />\n          <label>Option C</label>\n          <input\n            type=\"text\"\n            value={op3}\n            name=\"op3\"\n            onChange={this.handleChange}\n            placeholder=\"Option C\"\n          />\n          <label>Option D</label>\n          <input\n            type=\"text\"\n            value={op4}\n            name=\"op4\"\n            onChange={this.handleChange}\n            placeholder=\"Option D\"\n          />\n          <label>Option E</label>\n          <input\n            type=\"text\"\n            value={op5}\n            name=\"op5\"\n            onChange={this.handleChange}\n            placeholder=\"Option E\"\n          />\n          <label>Option F</label>\n          <input\n            type=\"text\"\n            value={op6}\n            name=\"op6\"\n            onChange={this.handleChange}\n            placeholder=\"Option F\"\n          />\n          <label>Option G</label>\n          <input\n            type=\"text\"\n            value={op7}\n            name=\"op7\"\n            onChange={this.handleChange}\n            placeholder=\"Option G\"\n          />\n          <label>Option H</label>\n          <input\n            type=\"text\"\n            value={op8}\n            name=\"op8\"\n            onChange={this.handleChange}\n            placeholder=\"Option H\"\n          />\n          <label>Option I</label>\n          <input\n            type=\"text\"\n            value={op9}\n            name=\"op9\"\n            onChange={this.handleChange}\n            placeholder=\"Option I\"\n          />\n          <label>Option J</label>\n          <input\n            type=\"text\"\n            value={op10}\n            name=\"op10\"\n            onChange={this.handleChange}\n            placeholder=\"Option J\"\n          />\n\n          <label>Correct Answer</label>\n          <input\n            type=\"text\"\n            value={answer}\n            name=\"answer\"\n            onChange={this.handleChange}\n            placeholder=\"Correct Answer\"\n          />\n\n          <input type=\"submit\" name=\"submit\" value=\"Submit\" />\n          <input type=\"reset\" name=\"reset\" value=\"Reset\" />\n        </form>\n      </main>\n    );\n  }\n}\n\nexport default withFirebase(NewQuestion);\n","import React from 'react';\n\n// *** Constants *** //\nimport * as ROUTES from '../../constants/routes';\n\n// *** Third-Party *** //\nimport { Route, Switch } from 'react-router-dom';\n\n// *** Styles *** //\nimport '../../styles/base/App.css';\n\n// *** HOC and Context *** //\nimport { withAuthentication } from '../Session';\n\n// *** Components *** //\nimport AccountPage from '../Account';\nimport AdminPage from '../Admin';\nimport HomePage from '../Home';\nimport InstructorPage from '../Instructor';\nimport Navigation from '../Navigation';\nimport PasswordForgetPage from '../PasswordForget';\nimport SignInPage from '../SignIn';\nimport SignUpPage from '../SignUp';\nimport StudentPage from '../Student';\nimport { NewQuestion } from '../Questions';\nimport {\n  CreateTestBank,\n  TakeTest,\n  SelectTest,\n  TestPage,\n  HostTest,\n} from '../Tests';\nimport { UserItem } from '../Users';\n\nconst App = () => (\n  <React.Fragment>\n    <Navigation />\n    <Switch>\n      <Route exact path={ROUTES.HOME} component={HomePage} />\n      <Route exact path={ROUTES.SIGN_UP} component={SignUpPage} />\n      <Route exact path={ROUTES.SIGN_IN} component={SignInPage} />\n      <Route\n        exact\n        path={ROUTES.PASSWORD_FORGET}\n        component={PasswordForgetPage}\n      />\n      <Route exact path={ROUTES.ACCOUNT} component={AccountPage} />\n      <Route exact path={ROUTES.ADMIN} component={AdminPage} />\n      <Route exact path={ROUTES.ADMIN_DETAILS} component={UserItem} />\n      <Route exact path={ROUTES.INSTRUCTOR} component={InstructorPage} />\n      <Route exact path={ROUTES.STUDENT} component={StudentPage} />\n      <Route exact path={ROUTES.CREATE_TEST} component={CreateTestBank} />\n      <Route exact path={ROUTES.NEW_QUESTION} component={NewQuestion} />\n      <Route exact path={ROUTES.SELECT_TEST} component={SelectTest} />\n      <Route exact path={ROUTES.TEST_VIEW} component={TestPage} />\n      <Route exact path={ROUTES.TAKE_TEST} component={TakeTest} />\n      <Route exact path={ROUTES.HOST_TEST} component={HostTest} />\n    </Switch>\n  </React.Fragment>\n);\n\nexport default withAuthentication(App);\n","import React from 'react';\nimport * as serviceWorker from './serviceWorker';\n\n// *** Third-Party *** //\nimport ReactDOM from 'react-dom';\nimport { BrowserRouter as Router } from 'react-router-dom';\n\n// *** Styles *** //\nimport './styles/base/index.css';\nimport './styles/base/settings.css';\nimport './styles/base/reset.css';\n\n// *** Components *** //\nimport App from './components/App';\nimport Firebase, { FirebaseContext } from './components/Firebase';\n\nReactDOM.render(\n  <FirebaseContext.Provider value={new Firebase()}>\n    <Router>\n      <App />\n    </Router>\n  </FirebaseContext.Provider>,\n  document.getElementById('root'),\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: http://bit.ly/CRA-PWA\nserviceWorker.unregister();\n","module.exports = __webpack_public_path__ + \"static/media/logo.9efb01ae.svg\";"],"sourceRoot":""}