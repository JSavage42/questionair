{"version":3,"sources":["serviceWorker.js","components/Session/context.js","components/Firebase/context.js","components/Firebase/firebase.js","components/Firebase/index.js","components/Session/withAuthentication.js","constants/routes.js","components/Session/withAuthorization.js","components/SignOut/index.js","components/Navigation/index.js","constants/roles.js","components/SignUp/index.js","components/PasswordForget/index.js","components/SignIn/index.js","components/Home/index.js","components/PasswordChange/index.js","components/Account/index.js","components/Users/UserList.js","components/Users/UserItem.js","components/Admin/index.js","components/Tests/TestList.js","components/Tests/CreateTestBank.js","components/Tests/TakeTest.js","components/Tests/SelectTest.js","components/Tests/TestPage.js","components/Instructor/index.js","components/Student/index.js","components/Questions/NewQuestion.js","components/App/index.js","index.js"],"names":["Boolean","window","location","hostname","match","AuthUserContext","React","createContext","FirebaseContext","withFirebase","Component","props","react_default","a","createElement","Consumer","firebase","Object","assign","config","apiKey","process","authDomain","databaseURL","projectId","storageBucket","messagingSenderId","Firebase","_this","this","classCallCheck","doCreateUserWithEmailAndPassword","email","password","auth","createUserWithEmailAndPassword","doSignInWithEmailAndPassword","signInWithEmailAndPassword","doSignInWithGoogle","signInWithPopup","googleProvider","doSignInWithFacebook","facebookProvider","doSignInWithTwitter","twitterProvider","doSignOut","signOut","doPasswordReset","sendPasswordResetEmail","doSendEmailVerification","currentUser","sendEmailVerification","url","REACT_APP_CONFIRMATION_EMAIL_REDIRECT","doPasswordUpdate","updatePassword","onAuthUserListener","next","fallback","onAuthStateChanged","authUser","user","uid","once","then","snapshot","dbUser","val","roles","objectSpread","emailVerified","providerData","db","ref","concat","users","test","tid","tests","image","fileName","storage","images","app","initializeApp","serverValue","database","ServerValue","emailAuthProvider","EmailAuthProvider","GoogleAuthProvider","FacebookAuthProvider","TwitterAuthProvider","withAuthentication","WithAuthentication","_React$Component","possibleConstructorReturn","getPrototypeOf","call","state","JSON","parse","localStorage","getItem","inherits","createClass","key","value","_this2","listener","setItem","stringify","setState","removeItem","context","Provider","HOME","withAuthorization","condition","WithAuthorization","apply","arguments","history","push","compose","withRouter","_ref","type","onClick","NavigationAuth","Link","to","ROUTES","includes","SignOut","NavigationNonAuth","Navigation","Navigation_NavigationAuth","Navigation_NavigationNonAuth","INITIAL_STATE","username","passwordOne","passwordTwo","requestAdmin","requestInstructor","error","ERROR_CODE_ACCOUNT_EXISTS","ERROR_MSG_ACCOUNT_EXISTS","SignUpFormBase","onSubmit","event","_this$state","requests","set","catch","code","message","preventDefault","onChange","defineProperty","target","name","onChangeCheckbox","checked","_this$state2","isInvalid","placeholder","disabled","SignUpLink","SignUpForm","SignUpPage","PasswordForgetFormBase","PasswordForgetLink","PasswordForgetPage","PasswordForgetForm","SignInFormBase","SignInGoogleBase","socialAuthUser","displayName","SignInFacebookBase","_this3","additionalUserInfo","profile","SignInTwitterBase","_this4","SignInForm","SignInGoogle","SignInFacebook","SignInTwitter","SignInPage","PasswordForget_PasswordForgetLink","SignUp_SignUpLink","HomePage","on","off","PasswordChangeForm","SIGN_IN_METHODS","id","provider","LoginManagementBase","fetchSignInMethods","fetchSignInMethodsForEmail","activeSignInMethods","onSocialLoginLink","linkWithPopup","onDefaultLoginLink","credential","linkAndRetrieveDataWithCredential","onUnlink","providerId","unlink","map","signInMethod","onlyOneLeft","length","isEnabled","Account_DefaultLoginToggle","onLink","Account_SocialLoginToggle","SocialLoginToggle","DefaultLoginToggle","_this$props","LoginManagement","PasswordChange","UserList","loading","console","log","usersObject","usersList","keys","role","pathname","UserItem","onSendPasswordResetEmail","handleRequestApproval","e","child","params","req","Switch","Route","exact","path","component","TestList","testsObject","testsList","quiz","CreateTestBank","fetchUser","handleOnSubmit","testBankMeta","totalPoints","passingScore","handleChange","testBankId","TakeTest","className","Tests_TestList","TestPage","handleSubmitAnswer","questions","values","question","substring","getDownloadURL","questionNum","src","alt","title","options","op","answer","NewQuestion","op1","op2","op3","op4","op5","op6","op7","op8","op9","op10","upLoadImage","isNullOrUndefined","file","uploadImage","files","put","reference1","reference2","form","accept","BrowserRouter","src_components_Navigation","AccountPage","AdminPage","InstructorPage","StudentPage","SelectTest","ReactDOM","render","Firebase_context","components_App","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.e70fdb11.chunk.js","sourcesContent":["// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read http://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit http://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See http://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\n\nconst AuthUserContext = React.createContext(null);\n\nexport default AuthUserContext;\n","import React from 'react';\n\nconst FirebaseContext = React.createContext(null);\n\nexport const withFirebase = Component => props => (\n  <FirebaseContext.Consumer>{firebase => <Component {...props} firebase={firebase} />}</FirebaseContext.Consumer>\n);\n\nexport default FirebaseContext;\n","import app from \"firebase/app\";\nimport \"firebase/auth\";\nimport \"firebase/database\";\nimport \"firebase/storage\";\n\nconst config = {\n  apiKey: process.env.REACT_APP_API_KEY,\n  authDomain: process.env.REACT_APP_AUTH_DOMAIN,\n  databaseURL: process.env.REACT_APP_DATABASE_URL,\n  projectId: process.env.REACT_APP_PROJECT_ID,\n  storageBucket: process.env.REACT_APP_STORAGE_BUCKET,\n  messagingSenderId: process.env.REACT_APP_MESSAGING_SENDER_ID\n};\n\nclass Firebase {\n  constructor() {\n    app.initializeApp(config);\n\n    /* Helper */\n\n    this.serverValue = app.database.ServerValue;\n    this.emailAuthProvider = app.auth.EmailAuthProvider;\n\n    /* Firebase APIs */\n\n    this.auth = app.auth();\n    this.db = app.database();\n    this.storage = app.storage();\n\n    /* Social Sign In Method Provider */\n\n    this.googleProvider = new app.auth.GoogleAuthProvider();\n    this.facebookProvider = new app.auth.FacebookAuthProvider();\n    this.twitterProvider = new app.auth.TwitterAuthProvider();\n  }\n\n  // *** Auth API ***\n\n  doCreateUserWithEmailAndPassword = (email, password) =>\n    this.auth.createUserWithEmailAndPassword(email, password);\n\n  doSignInWithEmailAndPassword = (email, password) =>\n    this.auth.signInWithEmailAndPassword(email, password);\n\n  doSignInWithGoogle = () => this.auth.signInWithPopup(this.googleProvider);\n\n  doSignInWithFacebook = () => this.auth.signInWithPopup(this.facebookProvider);\n\n  doSignInWithTwitter = () => this.auth.signInWithPopup(this.twitterProvider);\n\n  doSignOut = () => this.auth.signOut();\n\n  doPasswordReset = email => this.auth.sendPasswordResetEmail(email);\n\n  doSendEmailVerification = () =>\n    this.auth.currentUser.sendEmailVerification({\n      url: process.env.REACT_APP_CONFIRMATION_EMAIL_REDIRECT\n    });\n\n  doPasswordUpdate = password => this.auth.currentUser.updatePassword(password);\n\n  // *** Merge Auth and DB User API *** //\n\n  onAuthUserListener = (next, fallback) =>\n    this.auth.onAuthStateChanged(authUser => {\n      if (authUser) {\n        this.user(authUser.uid)\n          .once(\"value\")\n          .then(snapshot => {\n            const dbUser = snapshot.val();\n\n            // default empty roles\n            if (!dbUser.roles) {\n              dbUser.roles = [];\n            }\n\n            // merge auth and db user\n            authUser = {\n              uid: authUser.uid,\n              email: authUser.email,\n              emailVerified: authUser.emailVerified,\n              providerData: authUser.providerData,\n              ...dbUser\n            };\n\n            next(authUser);\n          });\n      } else {\n        fallback();\n      }\n    });\n\n  // *** User API ***\n\n  user = uid => this.db.ref(`users/${uid}`);\n\n  users = () => this.db.ref(`users`);\n\n  // *** Tests Banks API ***\n\n  test = (uid, tid) => this.db.ref(`users/${uid}/tests/${tid}`);\n\n  tests = uid => this.db.ref(`users/${uid}/tests`);\n\n  // *** Question Image API ***\n  image = (uid, fileName) => this.storage.ref(`${uid}/images/${fileName}`);\n\n  images = uid => this.storage.ref(`${uid}/images`);\n}\n\nexport default Firebase;\n","import FirebaseContext, { withFirebase } from './context';\nimport Firebase from './firebase';\n\nexport default Firebase;\n\nexport { FirebaseContext, withFirebase };\n","import React from 'react';\n\nimport AuthUserContext from './context';\nimport { withFirebase } from '../Firebase';\n\nconst withAuthentication = Component => {\n  class WithAuthentication extends React.Component {\n    constructor(props) {\n      super(props);\n\n      this.state = {\n        authUser: JSON.parse(localStorage.getItem('authUser')),\n      };\n    }\n\n    componentDidMount() {\n      this.listener = this.props.firebase.onAuthUserListener(\n        authUser => {\n          localStorage.setItem('authUser', JSON.stringify(authUser));\n          this.setState({ authUser });\n        },\n        () => {\n          localStorage.removeItem('authUser');\n          this.setState({ authUser: null });\n        }\n      );\n    }\n\n    componentWillUnmount() {\n      this.listener();\n    }\n\n    render() {\n      return (\n        <AuthUserContext.Provider value={this.state.authUser}>\n          <Component {...this.props} />\n        </AuthUserContext.Provider>\n      );\n    }\n  }\n\n  return withFirebase(WithAuthentication);\n};\n\nexport default withAuthentication;\n","export const HOME = \"/\";\nexport const SIGN_UP = \"/signup\";\nexport const SIGN_IN = \"/signin\";\nexport const ACCOUNT = \"/account\";\nexport const PASSWORD_FORGET = \"/pw-forget\";\nexport const ADMIN = \"/admin\";\nexport const ADMIN_DETAILS = \"/admin/:id\";\nexport const INSTRUCTOR = \"/instructor\";\nexport const STUDENT = \"/student\";\nexport const TESTS = \"/tests\";\nexport const CREATE_TEST = \"/tests/create\";\nexport const NEW_QUESTION = \"/tests/new_question\";\nexport const SELECT_TEST = \"/tests/select/\";\nexport const TAKE_TEST = \"/tests/take/:id\";\n","import React from 'react';\nimport { withRouter } from 'react-router-dom';\nimport { compose } from 'recompose';\n\nimport AuthUserContext from './context';\nimport { withFirebase } from '../Firebase';\nimport * as ROUTES from '../../constants/routes';\n\nconst withAuthorization = condition => Component => {\n  class WithAuthorization extends React.Component {\n    componentDidMount() {\n      this.listener = this.props.firebase.onAuthUserListener(\n        authUser => {\n          if (!condition(authUser)) {\n            this.props.history.push(ROUTES.SIGN_IN);\n          }\n        },\n        () => this.props.history.push(ROUTES.SIGN_IN)\n      );\n    }\n\n    componentWillUnmount() {\n      this.listener();\n    }\n\n    render() {\n      return (\n        <AuthUserContext.Consumer>\n          {authUser => (condition(authUser) ? <Component {...this.props} /> : null)}\n        </AuthUserContext.Consumer>\n      );\n    }\n  }\n\n  return compose(\n    withRouter,\n    withFirebase\n  )(WithAuthorization);\n};\n\nexport default withAuthorization;\n","import React from \"react\";\nimport { withFirebase } from \"../Firebase\";\n\nconst SignOutButton = ({ firebase }) => (\n  <button type=\"button\" onClick={firebase.doSignOut}>\n    Sign Out\n  </button>\n);\n\nexport default withFirebase(SignOutButton);\n","import React from \"react\";\nimport { Link } from \"react-router-dom\";\n\nimport { AuthUserContext } from \"../Session\";\nimport SignOutButton from \"../SignOut\";\nimport * as ROUTES from \"../../constants/routes\";\nimport * as ROLES from \"../../constants/roles\";\nimport \"../../styles/components/Navigation.css\";\n\nconst Navigation = () => (\n  <AuthUserContext.Consumer>\n    {authUser =>\n      authUser ? <NavigationAuth authUser={authUser} /> : <NavigationNonAuth />\n    }\n  </AuthUserContext.Consumer>\n);\n\nconst NavigationAuth = ({ authUser }) => (\n  <header>\n    <h1>Question Air</h1>\n    <nav>\n      <ul>\n        <li>\n          <Link to={ROUTES.HOME}>Home</Link>\n        </li>\n        <li>\n          <Link to={ROUTES.ACCOUNT}>Account</Link>\n        </li>\n        <li>\n          <Link to={ROUTES.STUDENT}>Student</Link>\n        </li>\n        {(authUser.roles.includes(ROLES.ADMIN) ||\n          authUser.roles.includes(ROLES.INSTRUCTOR)) && (\n          <li>\n            <Link to={ROUTES.INSTRUCTOR}>Instructor</Link>\n          </li>\n        )}\n        {authUser.roles.includes(ROLES.ADMIN) && (\n          <li>\n            <Link to={ROUTES.ADMIN}>Admin</Link>\n          </li>\n        )}\n        <li>\n          <SignOutButton />\n        </li>\n      </ul>\n    </nav>\n  </header>\n);\n\nconst NavigationNonAuth = () => (\n  <header>\n    <h1>Question Air</h1>\n    <nav>\n      <ul>\n        <li>\n          <Link to={ROUTES.SIGN_IN}>Sign In</Link>\n        </li>\n      </ul>\n    </nav>\n  </header>\n);\n\nexport default Navigation;\n","export const ADMIN = \"ADMIN\";\nexport const INSTRUCTOR = \"INSTRUCTOR\";\nexport const STUDENT = \"STUDENT\";\n","import React, { Component } from \"react\";\nimport { Link, withRouter } from \"react-router-dom\";\n\nimport { withFirebase } from \"../Firebase\";\nimport * as ROUTES from \"../../constants/routes\";\n\nconst SignUpPage = () => (\n  <div>\n    <h1>SignUp</h1>\n    <SignUpForm />\n  </div>\n);\n\nconst INITIAL_STATE = {\n  username: \"\",\n  email: \"\",\n  passwordOne: \"\",\n  passwordTwo: \"\",\n  requestAdmin: false,\n  requestInstructor: false,\n  error: null\n};\n\nconst ERROR_CODE_ACCOUNT_EXISTS = \"auth/email-already-in-use\";\n\nconst ERROR_MSG_ACCOUNT_EXISTS = `\n  An account with this E-Mail address already exists.\n  Try to login with this account instead. If you think the\n  account is already used from one of the social logins, try\n  to sign in with one of them. Afterward, associate your accounts\n  on your personal account page.\n`;\n\nclass SignUpFormBase extends Component {\n  constructor(props) {\n    super(props);\n\n    this.state = { ...INITIAL_STATE };\n  }\n\n  onSubmit = event => {\n    const {\n      username,\n      email,\n      passwordOne,\n      requestAdmin,\n      requestInstructor\n    } = this.state;\n    const requests = [];\n    if (requestAdmin) {\n      requests.push(\"admin\");\n    }\n    if (requestInstructor) {\n      requests.push(\"instructor\");\n    }\n\n    this.props.firebase\n      .doCreateUserWithEmailAndPassword(email, passwordOne)\n      .then(authUser => {\n        // Create a user in your Firebase realtime database\n        return this.props.firebase.user(authUser.user.uid).set({\n          username,\n          email,\n          requests\n        });\n      })\n      .then(() => {\n        return this.props.firebase.doSendEmailVerification();\n      })\n      .then(() => {\n        this.setState({ ...INITIAL_STATE });\n        this.props.history.push(ROUTES.HOME);\n      })\n      .catch(error => {\n        if (error.code === ERROR_CODE_ACCOUNT_EXISTS) {\n          error.message = ERROR_MSG_ACCOUNT_EXISTS;\n        }\n\n        this.setState({ error });\n      });\n\n    event.preventDefault();\n  };\n\n  onChange = event => {\n    this.setState({ [event.target.name]: event.target.value });\n  };\n\n  onChangeCheckbox = event => {\n    this.setState({ [event.target.name]: event.target.checked });\n  };\n\n  render() {\n    const {\n      username,\n      email,\n      passwordOne,\n      passwordTwo,\n      error,\n      requestInstructor,\n      requestAdmin\n    } = this.state;\n\n    const isInvalid =\n      passwordOne !== passwordTwo ||\n      passwordOne === \"\" ||\n      email === \"\" ||\n      username === \"\";\n\n    return (\n      <form onSubmit={this.onSubmit}>\n        <input\n          name=\"username\"\n          value={username}\n          onChange={this.onChange}\n          type=\"text\"\n          placeholder=\"Full Name\"\n        />\n        <input\n          name=\"email\"\n          value={email}\n          onChange={this.onChange}\n          type=\"text\"\n          placeholder=\"Email Address\"\n        />\n        <input\n          name=\"passwordOne\"\n          value={passwordOne}\n          onChange={this.onChange}\n          type=\"password\"\n          placeholder=\"Password\"\n        />\n        <input\n          name=\"passwordTwo\"\n          value={passwordTwo}\n          onChange={this.onChange}\n          type=\"password\"\n          placeholder=\"Confirm Password\"\n        />\n        <label>\n          Request Admin:\n          <input\n            name=\"requestAdmin\"\n            type=\"checkbox\"\n            checked={requestAdmin}\n            onChange={this.onChangeCheckbox}\n          />\n        </label>\n        <label>\n          Request Instructor:\n          <input\n            name=\"requestInstructor\"\n            type=\"checkbox\"\n            checked={requestInstructor}\n            onChange={this.onChangeCheckbox}\n          />\n        </label>\n        <button disabled={isInvalid} type=\"submit\">\n          Sign Up\n        </button>\n\n        {error && <p>{error.message}</p>}\n      </form>\n    );\n  }\n}\n\nconst SignUpLink = () => (\n  <p>\n    Don't have an account? <Link to={ROUTES.SIGN_UP}>Sign Up</Link>\n  </p>\n);\n\nconst SignUpForm = withRouter(withFirebase(SignUpFormBase));\n\nexport default SignUpPage;\n\nexport { SignUpForm, SignUpLink };\n","import React, { Component } from 'react';\nimport { Link } from 'react-router-dom';\n\nimport { withFirebase } from '../Firebase';\nimport * as ROUTES from '../../constants/routes';\n\nconst PasswordForgetPage = () => (\n  <div>\n    <h1>PasswordForget</h1>\n    <PasswordForgetForm />\n  </div>\n);\n\nconst INITIAL_STATE = {\n  email: '',\n  error: null,\n};\n\nclass PasswordForgetFormBase extends Component {\n  constructor(props) {\n    super(props);\n\n    this.state = { ...INITIAL_STATE };\n  }\n\n  onSubmit = event => {\n    const { email } = this.state;\n\n    this.props.firebase\n      .doPasswordReset(email)\n      .then(() => {\n        this.setState({ ...INITIAL_STATE });\n      })\n      .catch(error => {\n        this.setState({ error });\n      });\n\n    event.preventDefault();\n  };\n\n  onChange = event => {\n    this.setState({ [event.target.name]: event.target.value });\n  };\n\n  render() {\n    const { email, error } = this.state;\n\n    const isInvalid = email === '';\n\n    return (\n      <form onSubmit={this.onSubmit}>\n        <input name='email' value={this.state.email} onChange={this.onChange} type='text' placeholder='Email Address' />\n        <button disabled={isInvalid} type='submit'>\n          Reset My Password\n        </button>\n\n        {error && <p>{error.message}</p>}\n      </form>\n    );\n  }\n}\n\nconst PasswordForgetLink = () => (\n  <p>\n    <Link to={ROUTES.PASSWORD_FORGET}>Forgot Password?</Link>\n  </p>\n);\n\nexport default PasswordForgetPage;\n\nconst PasswordForgetForm = withFirebase(PasswordForgetFormBase);\n\nexport { PasswordForgetForm, PasswordForgetLink };\n","import React, { Component } from 'react';\nimport { withRouter } from 'react-router-dom';\nimport { compose } from 'recompose';\n\nimport { SignUpLink } from '../SignUp';\nimport { PasswordForgetLink } from '../PasswordForget';\nimport { withFirebase } from '../Firebase';\nimport * as ROUTES from '../../constants/routes';\n\nconst SignInPage = () => (\n  <div>\n    <h1>SignIn</h1>\n    <SignInForm />\n    <SignInGoogle />\n    <SignInFacebook />\n    <SignInTwitter />\n    <PasswordForgetLink />\n    <SignUpLink />\n  </div>\n);\n\nconst INITIAL_STATE = {\n  email: '',\n  password: '',\n  error: null,\n};\n\nconst ERROR_CODE_ACCOUNT_EXISTS = 'auth/account-exists-with-different-credential';\n\nconst ERROR_MSG_ACCOUNT_EXISTS = `\n  An account with an E-Mail address to\n  this social account already exists. Try to login from\n  this account instead and associate your social accounts on\n  your personal account page.\n`;\n\nclass SignInFormBase extends Component {\n  constructor(props) {\n    super(props);\n\n    this.state = { ...INITIAL_STATE };\n  }\n\n  onSubmit = event => {\n    const { email, password } = this.state;\n\n    this.props.firebase\n      .doSignInWithEmailAndPassword(email, password)\n      .then(() => {\n        this.setState({ ...INITIAL_STATE });\n        this.props.history.push(ROUTES.HOME);\n      })\n      .catch(error => {\n        this.setState({ error });\n      });\n\n    event.preventDefault();\n  };\n\n  onChange = event => {\n    this.setState({ [event.target.name]: event.target.value });\n  };\n\n  render() {\n    const { email, password, error } = this.state;\n\n    const isInvalid = password === '' || email === '';\n\n    return (\n      <form onSubmit={this.onSubmit}>\n        <input name='email' value={email} onChange={this.onChange} type='text' placeholder='Email Address' />\n        <input name='password' value={password} onChange={this.onChange} type='password' placeholder='Password' />\n        <button disabled={isInvalid} type='submit'>\n          Sign In\n        </button>\n\n        {error && <p>{error.message}</p>}\n      </form>\n    );\n  }\n}\n\nclass SignInGoogleBase extends Component {\n  constructor(props) {\n    super(props);\n\n    this.state = { error: null };\n  }\n\n  onSubmit = event => {\n    this.props.firebase\n      .doSignInWithGoogle()\n      .then(socialAuthUser => {\n        // Create a user in your Firebase Realtime Database too\n        return this.props.firebase.user(socialAuthUser.user.uid).set({\n          username: socialAuthUser.user.displayName,\n          email: socialAuthUser.user.email,\n          roles: [],\n        });\n      })\n      .then(() => {\n        this.setState({ error: null });\n        this.props.history.push(ROUTES.HOME);\n      })\n      .catch(error => {\n        if (error.code === ERROR_CODE_ACCOUNT_EXISTS) {\n          error.message = ERROR_MSG_ACCOUNT_EXISTS;\n        }\n\n        this.setState({ error });\n      });\n\n    event.preventDefault();\n  };\n\n  render() {\n    const { error } = this.state;\n\n    return (\n      <form onSubmit={this.onSubmit}>\n        <button type='submit'>Sign In with Google</button>\n\n        {error && <p>{error.message}</p>}\n      </form>\n    );\n  }\n}\n\nclass SignInFacebookBase extends Component {\n  constructor(props) {\n    super(props);\n\n    this.state = { error: null };\n  }\n\n  onSubmit = event => {\n    this.props.firebase\n      .doSignInWithFacebook()\n      .then(socialAuthUser => {\n        // Create a user in your Firebase Realtime Database too\n        return this.props.firebase.user(socialAuthUser.user.uid).set({\n          username: socialAuthUser.additionalUserInfo.profile.name,\n          email: socialAuthUser.additionalUserInfo.profile.email,\n          roles: [],\n        });\n      })\n      .then(() => {\n        this.setState({ error: null });\n        this.props.history.push(ROUTES.HOME);\n      })\n      .catch(error => {\n        if (error.code === ERROR_CODE_ACCOUNT_EXISTS) {\n          error.message = ERROR_MSG_ACCOUNT_EXISTS;\n        }\n\n        this.setState({ error });\n      });\n\n    event.preventDefault();\n  };\n\n  render() {\n    const { error } = this.state;\n\n    return (\n      <form onSubmit={this.onSubmit}>\n        <button type='submit'>Sign In with Facebook</button>\n\n        {error && <p>{error.message}</p>}\n      </form>\n    );\n  }\n}\n\nclass SignInTwitterBase extends Component {\n  constructor(props) {\n    super(props);\n\n    this.state = { error: null };\n  }\n\n  onSubmit = event => {\n    this.props.firebase\n      .doSignInWithTwitter()\n      .then(socialAuthUser => {\n        // Create a user in your Firebase Realtime Database too\n        return this.props.firebase.user(socialAuthUser.user.uid).set({\n          username: socialAuthUser.additionalUserInfo.profile.name,\n          email: socialAuthUser.additionalUserInfo.profile.email,\n          roles: [],\n        });\n      })\n      .then(() => {\n        this.setState({ error: null });\n        this.props.history.push(ROUTES.HOME);\n      })\n      .catch(error => {\n        if (error.code === ERROR_CODE_ACCOUNT_EXISTS) {\n          error.message = ERROR_MSG_ACCOUNT_EXISTS;\n        }\n\n        this.setState({ error });\n      });\n\n    event.preventDefault();\n  };\n\n  render() {\n    const { error } = this.state;\n\n    return (\n      <form onSubmit={this.onSubmit}>\n        <button type='submit'>Sign In with Twitter</button>\n\n        {error && <p>{error.message}</p>}\n      </form>\n    );\n  }\n}\n\nconst SignInForm = compose(\n  withRouter,\n  withFirebase\n)(SignInFormBase);\n\nconst SignInGoogle = compose(\n  withRouter,\n  withFirebase\n)(SignInGoogleBase);\n\nconst SignInFacebook = compose(\n  withRouter,\n  withFirebase\n)(SignInFacebookBase);\n\nconst SignInTwitter = compose(\n  withRouter,\n  withFirebase\n)(SignInTwitterBase);\n\nexport default SignInPage;\n\nexport { SignInForm, SignInGoogle, SignInFacebook, SignInTwitter };\n","import React, { Component } from \"react\";\nimport { compose } from \"recompose\";\n\nimport { withAuthorization } from \"../Session\";\nimport { withFirebase } from \"../Firebase\";\n\nclass HomePage extends Component {\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      users: null\n    };\n  }\n\n  componentDidMount() {\n    this.props.firebase.users().on(\"value\", snapshot => {\n      this.setState({\n        users: snapshot.val()\n      });\n    });\n  }\n\n  componentWillUnmount() {\n    this.props.firebase.users().off();\n  }\n\n  render() {\n    return (\n      <div>\n        <h1>Home Page</h1>\n        <p>The Home Page is accessible by every signed in user.</p>\n      </div>\n    );\n  }\n}\n\nconst condition = authUser => !!authUser;\n\nexport default compose(\n  withFirebase,\n  withAuthorization(condition)\n)(HomePage);\n","import React, { Component } from 'react';\n\nimport { withFirebase } from '../Firebase';\n\nconst INITIAL_STATE = {\n  passwordOne: '',\n  passwordTwo: '',\n  error: null,\n};\n\nclass PasswordChangeForm extends Component {\n  constructor(props) {\n    super(props);\n\n    this.state = { ...INITIAL_STATE };\n  }\n\n  onSubmit = event => {\n    const { passwordOne } = this.state;\n\n    this.props.firebase\n      .doPasswordUpdate(passwordOne)\n      .then(() => {\n        this.setState({ ...INITIAL_STATE });\n      })\n      .catch(error => {\n        this.setState({ error });\n      });\n\n    event.preventDefault();\n  };\n\n  onChange = event => {\n    this.setState({ [event.target.name]: event.target.value });\n  };\n\n  render() {\n    const { passwordOne, passwordTwo, error } = this.state;\n\n    const isInvalid = passwordOne !== passwordTwo || passwordOne === '';\n\n    return (\n      <form onSubmit={this.onSubmit}>\n        <input\n          name='passwordOne'\n          value={passwordOne}\n          onChange={this.onChange}\n          type='password'\n          placeholder='New Password'\n        />\n        <input\n          name='passwordTwo'\n          value={passwordTwo}\n          onChange={this.onChange}\n          type='password'\n          placeholder='Confirm New Password'\n        />\n        <button disabled={isInvalid} type='submit'>\n          Reset My Password\n        </button>\n\n        {error && <p>{error.message}</p>}\n      </form>\n    );\n  }\n}\n\nexport default withFirebase(PasswordChangeForm);\n","import React, { Component } from 'react';\nimport { compose } from 'recompose';\n\nimport { AuthUserContext, withAuthorization } from '../Session';\nimport { withFirebase } from '../Firebase';\nimport { PasswordForgetForm } from '../PasswordForget';\nimport PasswordChangeForm from '../PasswordChange';\n\nconst SIGN_IN_METHODS = [\n  {\n    id: 'password',\n    provider: null,\n  },\n  {\n    id: 'google.com',\n    provider: 'googleProvider',\n  },\n  {\n    id: 'facebook.com',\n    provider: 'facebookProvider',\n  },\n  {\n    id: 'twitter.com',\n    provider: 'twitterProvider',\n  },\n];\n\nconst AccountPage = () => (\n  <AuthUserContext.Consumer>\n    {authUser => (\n      <div>\n        <h1>Account: {authUser.email}</h1>\n        <PasswordForgetForm />\n        <PasswordChangeForm />\n        <LoginManagement authUser={authUser} />\n      </div>\n    )}\n  </AuthUserContext.Consumer>\n);\n\nclass LoginManagementBase extends Component {\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      activeSignInMethods: [],\n      error: null,\n    };\n  }\n\n  componentDidMount() {\n    this.fetchSignInMethods();\n  }\n\n  fetchSignInMethods = () => {\n    this.props.firebase.auth\n      .fetchSignInMethodsForEmail(this.props.authUser.email)\n      .then(activeSignInMethods => this.setState({ activeSignInMethods, error: null }))\n      .catch(error => this.setState({ error }));\n  };\n\n  onSocialLoginLink = provider => {\n    this.props.firebase.auth.currentUser\n      .linkWithPopup(this.props.firebase[provider])\n      .then(this.fetchSignInMethods)\n      .catch(error => this.setState({ error }));\n  };\n\n  onDefaultLoginLink = password => {\n    const credential = this.props.firebase.emailAuthProvider.credential(this.props.authUser.email, password);\n\n    this.props.firebase.auth.currentUser\n      .linkAndRetrieveDataWithCredential(credential)\n      .then(this.fetchSignInMethods)\n      .catch(error => this.setState({ error }));\n  };\n\n  onUnlink = providerId => {\n    this.props.firebase.auth.currentUser\n      .unlink(providerId)\n      .then(this.fetchSignInMethods)\n      .catch(error => this.setState({ error }));\n  };\n\n  render() {\n    const { activeSignInMethods, error } = this.state;\n\n    return (\n      <div>\n        Sign In Methods:\n        <ul>\n          {SIGN_IN_METHODS.map(signInMethod => {\n            const onlyOneLeft = activeSignInMethods.length === 1;\n            const isEnabled = activeSignInMethods.includes(signInMethod.id);\n\n            return (\n              <li key={signInMethod.id}>\n                {signInMethod.id === 'password' ? (\n                  <DefaultLoginToggle\n                    onlyOneLeft={onlyOneLeft}\n                    isEnabled={isEnabled}\n                    signInMethod={signInMethod}\n                    onLink={this.onDefaultLoginLink}\n                    onUnlink={this.onUnlink}\n                  />\n                ) : (\n                  <SocialLoginToggle\n                    onlyOneLeft={onlyOneLeft}\n                    isEnabled={isEnabled}\n                    signInMethod={signInMethod}\n                    onLink={this.onSocialLoginLink}\n                    onUnlink={this.onUnlink}\n                  />\n                )}\n              </li>\n            );\n          })}\n        </ul>\n        {error && error.message}\n      </div>\n    );\n  }\n}\n\nconst SocialLoginToggle = ({ onlyOneLeft, isEnabled, signInMethod, onLink, onUnlink }) =>\n  isEnabled ? (\n    <button type='button' onClick={() => onUnlink(signInMethod.id)} disabled={onlyOneLeft}>\n      Deactivate {signInMethod.id}\n    </button>\n  ) : (\n    <button type='button' onClick={() => onLink(signInMethod.provider)}>\n      Link {signInMethod.id}\n    </button>\n  );\n\nclass DefaultLoginToggle extends Component {\n  constructor(props) {\n    super(props);\n\n    this.state = { passwordOne: '', passwordTwo: '' };\n  }\n\n  onSubmit = event => {\n    event.preventDefault();\n\n    this.props.onLink(this.state.passwordOne);\n    this.setState({ passwordOne: '', passwordTwo: '' });\n  };\n\n  onChange = event => {\n    this.setState({ [event.target.name]: event.target.value });\n  };\n\n  render() {\n    const { onlyOneLeft, isEnabled, signInMethod, onUnlink } = this.props;\n\n    const { passwordOne, passwordTwo } = this.state;\n\n    const isInvalid = passwordOne !== passwordTwo || passwordOne === '';\n\n    return isEnabled ? (\n      <button type='button' onClick={() => onUnlink(signInMethod.id)} disabled={onlyOneLeft}>\n        Deactivate {signInMethod.id}\n      </button>\n    ) : (\n      <form onSubmit={this.onSubmit}>\n        <input\n          name='passwordOne'\n          value={passwordOne}\n          onChange={this.onChange}\n          type='password'\n          placeholder='New Password'\n        />\n        <input\n          name='passwordTwo'\n          value={passwordTwo}\n          onChange={this.onChange}\n          type='password'\n          placeholder='Confirm New Password'\n        />\n\n        <button disabled={isInvalid} type='submit'>\n          Link {signInMethod.id}\n        </button>\n      </form>\n    );\n  }\n}\n\nconst LoginManagement = withFirebase(LoginManagementBase);\n\nconst condition = authUser => !!authUser;\n\nexport default compose(withAuthorization(condition))(AccountPage);\n","import React, { Component } from \"react\";\nimport { Link } from \"react-router-dom\";\n\nimport { withFirebase } from \"../Firebase\";\nimport * as ROUTES from \"../../constants/routes\";\nimport \"../../styles/components/Users/UserList.css\";\n\nclass UserList extends Component {\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      loading: false,\n      users: []\n    };\n  }\n\n  componentDidMount() {\n    this.setState({ loading: true });\n\n    this.props.firebase.users().on(\"value\", snapshot => {\n      console.log(snapshot.val());\n      const usersObject = snapshot.val();\n\n      const usersList = Object.keys(usersObject).map(key => ({\n        ...usersObject[key],\n        uid: key\n      }));\n\n      this.setState({\n        users: usersList,\n        loading: false\n      });\n    });\n  }\n\n  componentWillUnmount() {\n    this.props.firebase.users().off();\n  }\n\n  render() {\n    const { users, loading } = this.state;\n\n    return (\n      <article id=\"user-list\">\n        <h2>Enrolled Users</h2>\n        {loading && <div>Loading ...</div>}\n        <ul>\n          {console.log(users)}\n          {users.map(user => (\n            <li key={user.uid}>\n              <span>\n                <strong>ID:</strong> {user.uid}\n              </span>\n              <span>\n                <strong>E-Mail:</strong> {user.email}\n              </span>\n              <span>\n                <strong>Username:</strong> {user.username}\n              </span>\n              {user.roles && (\n                <span>\n                  <strong>Roles:</strong>\n                  <ul>\n                    {user.roles.map(role => (\n                      <li key={role}>{role}</li>\n                    ))}\n                  </ul>\n                </span>\n              )}\n              <span>\n                <Link\n                  to={{\n                    pathname: `${ROUTES.ADMIN}/${user.uid}`,\n                    state: { user }\n                  }}\n                >\n                  Details\n                </Link>\n              </span>\n            </li>\n          ))}\n        </ul>\n      </article>\n    );\n  }\n}\n\nexport default withFirebase(UserList);\n","import React, { Component } from \"react\";\nimport \"../../styles/components/Users/UserItem.css\";\nimport { withFirebase } from \"../Firebase\";\nimport \"../../styles/components/Users/UserItem.css\";\nclass UserItem extends Component {\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      loading: false,\n      user: null,\n      ...props.location.state\n    };\n  }\n\n  componentDidMount() {\n    if (this.state.user) {\n      return;\n    }\n\n    this.setState({ loading: true });\n\n    this.props.firebase\n      .user(this.props.match.params.id)\n      .on(\"value\", snapshot => {\n        this.setState({\n          user: snapshot.val(),\n          loading: false\n        });\n      });\n    console.log(this.state.user);\n  }\n\n  componentWillUnmount() {\n    this.props.firebase.user(this.props.match.params.id).off();\n  }\n\n  onSendPasswordResetEmail = () => {\n    this.props.firebase.doPasswordReset(this.state.user.email);\n  };\n\n  handleRequestApproval = e => {\n    let key;\n    if (e.target.id === \"ADMIN\") {\n      key = 0;\n    } else {\n      key = 1;\n    }\n    this.props.firebase\n      .user(this.state.user.uid)\n      .child(`roles`)\n      .child(key)\n      .set(e.target.id);\n  };\n\n  render() {\n    const { user, loading } = this.state;\n\n    return (\n      <article id=\"user-item\">\n        <h2>{this.state.user.username}</h2>\n        {loading && <div>Loading ...</div>}\n\n        {user && (\n          <div>\n            <span>\n              <b>ID:</b> {user.uid}\n            </span>\n            <span>\n              <b>E-Mail:</b> {user.email}\n            </span>\n            <span>\n              <b>Username:</b> {user.username}\n            </span>\n            {user.requests && (\n              <span id=\"requests\">\n                <b>Requests: </b>\n                <p>\n                  <b>Click to approve</b>\n                </p>\n                <ul>\n                  {user.requests.map(req => (\n                    <li key={req}>\n                      <button\n                        id={req}\n                        type=\"button\"\n                        onClick={this.handleRequestApproval}\n                      >\n                        {req}\n                      </button>\n                    </li>\n                  ))}\n                </ul>\n              </span>\n            )}\n            {user.roles && (\n              <span>\n                <strong>Roles:</strong>\n                <ul>\n                  {user.roles.map(role => (\n                    <li key={role}>{role}</li>\n                  ))}\n                </ul>\n              </span>\n            )}\n            <span>\n              <button type=\"button\" onClick={this.onSendPasswordResetEmail}>\n                Send Password Reset\n              </button>\n            </span>\n          </div>\n        )}\n      </article>\n    );\n  }\n}\n\nexport default withFirebase(UserItem);\n","import React from \"react\";\nimport { Switch, Route } from \"react-router-dom\";\nimport { compose } from \"recompose\";\nimport { withAuthorization } from \"../Session\";\nimport { UserList, UserItem } from \"../Users\";\nimport * as ROLES from \"../../constants/roles\";\nimport * as ROUTES from \"../../constants/routes\";\nimport \"../../styles/components/Admin/Admin.css\";\n\nconst AdminPage = () => (\n  <main id=\"admin-page\">\n    <h1>Admin</h1>\n    <p>The Admin Page is accessible by every signed in admin user.</p>\n\n    <Switch>\n      <Route exact path={ROUTES.ADMIN_DETAILS} component={UserItem} />\n      <Route exact path={ROUTES.ADMIN} component={UserList} />\n    </Switch>\n  </main>\n);\n\nconst condition = authUser => authUser && authUser.roles.includes(ROLES.ADMIN);\n\nexport default compose(withAuthorization(condition))(AdminPage);\n","import React, { Component } from \"react\";\nimport { Link } from \"react-router-dom\";\n\nimport { withFirebase } from \"../Firebase\";\nimport * as ROUTES from \"../../constants/routes\";\n\nclass TestList extends Component {\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      tests: [],\n      authUser: JSON.parse(localStorage.getItem(\"authUser\")),\n      loading: false\n    };\n  }\n\n  componentDidMount() {\n    this.setState({ loading: true });\n    this.props.firebase.tests(this.state.authUser.uid).on(\"value\", snapshot => {\n      const testsObject = snapshot.val();\n      if (testsObject === null) {\n        this.setState({ loading: false });\n      } else {\n        const testsList = Object.keys(testsObject).map(key => ({\n          ...testsObject[key],\n          uid: key\n        }));\n\n        this.setState({\n          tests: testsList,\n          loading: false\n        });\n      }\n    });\n  }\n\n  componentWillUnmount() {\n    this.props.firebase.tests().off();\n  }\n\n  render() {\n    const { tests, loading } = this.state;\n    return (\n      <div>\n        <h2>Available Quizzes</h2>\n        {loading && <div>Loading ...</div>}\n        <ul>\n          {tests &&\n            tests.map(quiz => (\n              <li key={quiz.tid}>\n                <strong>Take Quiz ID Number: </strong>\n                <Link\n                  to={{\n                    pathname: `${ROUTES.TESTS}/${quiz.tid}`,\n                    state: { quiz }\n                  }}\n                >\n                  {quiz.tid}\n                </Link>\n              </li>\n            ))}\n        </ul>\n      </div>\n    );\n  }\n}\n\nexport default withFirebase(TestList);\n","import React from \"react\";\nimport \"../../styles/components/Tests/CreateTestBank.css\";\nimport { withFirebase } from \"../Firebase\";\n\nclass CreateTestBank extends React.Component {\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      authUser: JSON.parse(localStorage.getItem(\"authUser\")),\n      error: \"\",\n      tid: \"\",\n      totalPoints: \"\",\n      passingScore: \"\"\n    };\n  }\n\n  componentDidMount() {\n    this.fetchUser();\n  }\n\n  fetchUser = () => {\n    this.props.firebase.auth.onAuthStateChanged(user => {\n      if (user) {\n        this.setState({ user, error: null });\n      }\n    });\n  };\n\n  handleOnSubmit = e => {\n    e.preventDefault();\n\n    const testBankMeta = {\n      tid: this.state.tid,\n      totalPoints: this.state.totalPoints,\n      passingScore: this.state.passingScore\n    };\n\n    this.props.firebase\n      .user(this.state.authUser.uid)\n      .child(\"tests\")\n      .child(this.state.tid)\n      .set(testBankMeta);\n\n    this.setState({\n      tid: \"\",\n      totalPoints: \"\",\n      passingScore: \"\"\n    });\n  };\n\n  handleChange = e => {\n    this.setState({\n      [e.target.name]: e.target.value\n    });\n  };\n\n  render() {\n    return (\n      <main id=\"create-test-bank\">\n        <h2>Create Test Bank</h2>\n        <p>Instructor Name: {this.state.authUser.username}</p>\n        <form id=\"newTestBank\" onSubmit={this.handleOnSubmit}>\n          <label>Test Bank ID Number</label>\n          <input\n            type=\"number\"\n            value={this.state.testBankId}\n            name=\"tid\"\n            onChange={this.handleChange}\n          />\n          <label>Total Points</label>\n          <input\n            type=\"number\"\n            value={this.state.totalPoints}\n            name=\"totalPoints\"\n            onChange={this.handleChange}\n          />\n          <label>Passing Score</label>\n          <input\n            type=\"number\"\n            value={this.state.passingScore}\n            name=\"passingScore\"\n            onChange={this.handleChange}\n          />\n          <input type=\"submit\" name=\"submit\" value=\"Submit\" />\n          <input type=\"reset\" name=\"reset\" value=\"Reset\" />\n        </form>\n      </main>\n    );\n  }\n}\n\nexport default withFirebase(CreateTestBank);\n","import React from \"react\";\nimport { withFirebase } from \"../Firebase\";\n\nclass TakeTest extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      authUser: JSON.parse(localStorage.getItem(\"authUser\"))\n    };\n  }\n\n  componentDidMount() {}\n\n  render() {\n    return <h2>Take the Test</h2>;\n  }\n}\n\nexport default withFirebase(TakeTest);\n","import React from \"react\";\nimport TestList from \"./TestList\";\nimport { withFirebase } from \"../Firebase\";\nimport \"../../styles/components/Student/TakeTest.css\";\n\nconst TakeTest = () => (\n  <main id=\"taketest\">\n    <h2>Select A Test</h2>\n    <div className=\"select-test\">\n      <TestList />\n    </div>\n  </main>\n);\n\nexport default withFirebase(TakeTest);\n","import React from \"react\";\nimport \"../../styles/components/Tests/TestPage.css\";\nimport { withFirebase } from \"../Firebase\";\n\nclass TestPage extends React.Component {\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      authUser: JSON.parse(localStorage.getItem(\"authUser\")),\n      test: null,\n      tid: \"\",\n      questions: [],\n      loading: true,\n      url: \"\"\n    };\n  }\n\n  componentDidMount() {\n    const { authUser } = this.state;\n    if (authUser.tests) {\n      const tid = this.props.history.location.state.test.tid;\n      this.setState({ tid: tid });\n      this.props.firebase\n        .test(authUser.uid, this.props.history.location.state.test.tid)\n        .on(\"value\", snapshot => {\n          this.setState({\n            test: snapshot.val(),\n            questions: Object.values(snapshot.val().questions),\n            loading: false\n          });\n        });\n    }\n  }\n\n  componentWillUnmount() {\n    const { authUser, tid } = this.state;\n    this.props.firebase.test(authUser.uid, tid).off();\n  }\n\n  handleSubmitAnswer = e => {\n    console.log(e.target.id);\n  };\n\n  render() {\n    const { test, tid, loading } = this.state;\n\n    return (\n      <main id=\"test-page\">\n        <h2>Test #{tid}</h2>\n        {loading && <div>Loading ...</div>}\n\n        {test && (\n          <div>\n            <ul>\n              <li>Possible Points: {this.state.test.totalPoints}</li>\n              <li>Passing Score: {this.state.test.passingScore}</li>\n              <li>Number of Questions: {this.state.test.questions.length}</li>\n              <li>\n                Questions:\n                <ul id=\"questions\">\n                  {this.state.questions.map(question => {\n                    question.image &&\n                      this.props.firebase\n                        .images(this.state.authUser.uid)\n                        .child(`${question.image.substring(12)}`)\n                        .getDownloadURL()\n                        .then(url => {\n                          this.setState({ url });\n                        });\n                    return (\n                      <li className=\"question\" key={question.questionNum}>\n                        <p className=\"questionTitle\">\n                          Question #{question.questionNum}: {question.question}\n                        </p>\n                        <br />\n                        {question.image && (\n                          <img\n                            src={this.state.url}\n                            alt=\"question\"\n                            title=\"Image Question\"\n                          />\n                        )}\n                        <ol>\n                          {question.options.map(op => (\n                            <li\n                              key={op}\n                              className=\"option\"\n                              id={op}\n                              value={op}\n                              onClick={this.handleSubmitAnswer}\n                            >\n                              {op}\n                            </li>\n                          ))}\n                        </ol>\n                        Answer: {question.answer}\n                      </li>\n                    );\n                  })}\n                </ul>\n              </li>\n            </ul>\n          </div>\n        )}\n      </main>\n    );\n  }\n}\n\nexport default withFirebase(TestPage);\n","import React from \"react\";\nimport { Link } from \"react-router-dom\";\nimport { compose } from \"recompose\";\nimport { withAuthorization } from \"../Session\";\nimport { TestList } from \"../Tests\";\nimport * as ROLES from \"../../constants/roles\";\nimport * as ROUTES from \"../../constants/routes\";\nimport \"../../styles/components/Instructor/InstructorPage.css\";\n\nconst InstructorPage = () => (\n  <main id=\"instructor-page\">\n    <h1>Instructor</h1>\n    <p>The Instructor Page is accessible by every signed in Instructor user.</p>\n    <Link to={ROUTES.CREATE_TEST}>Create Test Bank</Link>\n    <br />\n    <Link to={ROUTES.NEW_QUESTION}>New Question</Link>\n\n    <TestList />\n  </main>\n);\n\nconst condition = authUser =>\n  (authUser && authUser.roles.includes(ROLES.ADMIN)) ||\n  authUser.roles.includes(ROLES.INSTRUCTOR);\n\nexport default compose(withAuthorization(condition))(InstructorPage);\n","import React from \"react\";\nimport { compose } from \"recompose\";\n\nimport { withAuthorization } from \"../Session\";\nimport * as ROLES from \"../../constants/roles\";\n\nconst StudentPage = () => (\n  <div>\n    <h1>Student</h1>\n    <p>The Student Page is accessible by every signed in user.</p>\n    <h3>What you can do</h3>\n    <ol>\n      <li>Take a Quiz</li>\n      <li>See Your Results</li>\n    </ol>\n  </div>\n);\n\nconst condition = authUser =>\n  (authUser && authUser.roles.includes(ROLES.ADMIN)) ||\n  authUser.roles.includes(ROLES.INSTRUCTOR) ||\n  authUser.roles.includes(ROLES.STUDENT);\n\nexport default compose(withAuthorization(condition))(StudentPage);\n","import React from \"react\";\nimport \"../../styles/components/Questions/NewQuestion.css\";\nimport { withFirebase } from \"../Firebase\";\nimport { isNullOrUndefined } from \"util\";\n\nclass NewQuestion extends React.Component {\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      tid: \"\",\n      reference1: \"\",\n      reference2: \"\",\n      question: \"\",\n      questionNum: \"\",\n      op1: \"\",\n      op2: \"\",\n      op3: \"\",\n      op4: \"\",\n      op5: \"\",\n      op6: \"\",\n      op7: \"\",\n      op8: \"\",\n      op9: \"\",\n      op10: \"\",\n      options: [],\n      answer: \"\",\n      user: \"\",\n      image: \"\"\n    };\n  }\n\n  componentDidMount() {\n    this.fetchUser();\n  }\n\n  fetchUser = () => {\n    this.props.firebase.auth.onAuthStateChanged(user => {\n      if (user) {\n        this.setState({ user, error: null });\n      }\n    });\n  };\n\n  handleOnSubmit = e => {\n    e.preventDefault();\n\n    if (this.state.op1) {\n      this.state.options.push(this.state.op1);\n    }\n    if (this.state.op2) {\n      this.state.options.push(this.state.op2);\n    }\n    if (this.state.op3) {\n      this.state.options.push(this.state.op3);\n    }\n    if (this.state.op4) {\n      this.state.options.push(this.state.op4);\n    }\n    if (this.state.op5) {\n      this.state.options.push(this.state.op5);\n    }\n    if (this.state.op6) {\n      this.state.options.push(this.state.op6);\n    }\n    if (this.state.op7) {\n      this.state.options.push(this.state.op7);\n    }\n    if (this.state.op8) {\n      this.state.options.push(this.state.op8);\n    }\n    if (this.state.op9) {\n      this.state.options.push(this.state.op9);\n    }\n    if (this.state.op10) {\n      this.state.options.push(this.state.op10);\n    }\n    if (e.target.upLoadImage === isNullOrUndefined) {\n      const file = e.target.uploadImage.files[0];\n      const fileName = file.name;\n      this.props.firebase\n        .image(this.state.user.uid, fileName)\n        .put(file)\n        .then(snapshot => {\n          console.log(snapshot);\n        });\n    }\n\n    const question = {\n      reference1: this.state.reference1,\n      reference2: this.state.reference2,\n      question: this.state.question,\n      questionNum: this.state.questionNum,\n      options: this.state.options,\n      answer: this.state.answer,\n      image: this.state.image\n    };\n\n    this.props.firebase\n      .user(this.state.user.uid)\n      .child(\"tests\")\n      .child(this.state.tid)\n      .child(\"questions/\")\n      .child(this.state.questionNum)\n      .set(question);\n\n    this.setState({\n      reference1: \"\",\n      reference2: \"\",\n      question: \"\",\n      questionNum: \"\",\n      op1: \"\",\n      op2: \"\",\n      op3: \"\",\n      op4: \"\",\n      op5: \"\",\n      op6: \"\",\n      op7: \"\",\n      op8: \"\",\n      op9: \"\",\n      op10: \"\",\n      answer: \"\",\n      options: [],\n      image: \"\"\n    });\n  };\n\n  handleChange = e => {\n    this.setState({\n      [e.target.name]: e.target.value\n    });\n  };\n\n  render() {\n    return (\n      <main id=\"new-question\">\n        <h2>Create Questions</h2>\n        <form id=\"newQuestion\" onSubmit={this.handleOnSubmit}>\n          <label>Test Bank ID Number</label>\n          <input\n            type=\"number\"\n            value={this.state.testBankId}\n            name=\"tid\"\n            onChange={this.handleChange}\n          />\n          <label>Reference 1</label>\n          <input\n            type=\"text\"\n            value={this.state.reference1}\n            name=\"reference1\"\n            onChange={this.handleChange}\n          />\n          <label>Reference 2</label>\n          <input\n            type=\"text\"\n            value={this.state.reference2}\n            name=\"reference2\"\n            onChange={this.handleChange}\n          />\n          <fieldset form=\"newQuestion\">\n            <legend>Question</legend>\n            <label>Question Number and Content</label>\n            <input\n              type=\"number\"\n              value={this.state.questionNum}\n              name=\"questionNum\"\n              onChange={this.handleChange}\n            />\n            <input\n              type=\"text\"\n              value={this.state.question}\n              name=\"question\"\n              onChange={this.handleChange}\n            />\n            <input\n              accept=\".jpg,.png\"\n              type=\"file\"\n              id=\"uploadImage\"\n              name=\"image\"\n              onChange={this.handleChange}\n            />\n            <fieldset form=\"newQuestion\">\n              <legend>Options</legend>\n              <label>Option 1</label>\n              <input\n                type=\"text\"\n                value={this.state.op1}\n                name=\"op1\"\n                onChange={this.handleChange}\n              />\n              <label>Option 2</label>\n              <input\n                type=\"text\"\n                value={this.state.op2}\n                name=\"op2\"\n                onChange={this.handleChange}\n              />\n              <label>Option 3</label>\n              <input\n                type=\"text\"\n                value={this.state.op3}\n                name=\"op3\"\n                onChange={this.handleChange}\n              />\n              <label>Option 4</label>\n              <input\n                type=\"text\"\n                value={this.state.op4}\n                name=\"op4\"\n                onChange={this.handleChange}\n              />\n              <label>Option 5</label>\n              <input\n                type=\"text\"\n                value={this.state.op5}\n                name=\"op5\"\n                onChange={this.handleChange}\n              />\n              <label>Option 6</label>\n              <input\n                type=\"text\"\n                value={this.state.op6}\n                name=\"op6\"\n                onChange={this.handleChange}\n              />\n              <label>Option 7</label>\n              <input\n                type=\"text\"\n                value={this.state.op7}\n                name=\"op7\"\n                onChange={this.handleChange}\n              />\n              <label>Option 8</label>\n              <input\n                type=\"text\"\n                value={this.state.op8}\n                name=\"op8\"\n                onChange={this.handleChange}\n              />\n              <label>Option 9</label>\n              <input\n                type=\"text\"\n                value={this.state.op9}\n                name=\"op9\"\n                onChange={this.handleChange}\n              />\n              <label>Option 10</label>\n              <input\n                type=\"text\"\n                value={this.state.op10}\n                name=\"op10\"\n                onChange={this.handleChange}\n              />\n            </fieldset>\n            <label>Correct Answer</label>\n            <input\n              type=\"text\"\n              value={this.state.answer}\n              name=\"answer\"\n              onChange={this.handleChange}\n            />\n          </fieldset>\n          <input type=\"submit\" name=\"submit\" value=\"Submit\" />\n        </form>\n      </main>\n    );\n  }\n}\n\nexport default withFirebase(NewQuestion);\n","import React from \"react\";\nimport { BrowserRouter as Router, Route, Switch } from \"react-router-dom\";\n\nimport Navigation from \"../Navigation\";\nimport SignUpPage from \"../SignUp\";\nimport SignInPage from \"../SignIn\";\nimport PasswordForgetPage from \"../PasswordForget\";\nimport HomePage from \"../Home\";\nimport AccountPage from \"../Account\";\nimport AdminPage from \"../Admin\";\nimport InstructorPage from \"../Instructor\";\nimport StudentPage from \"../Student\";\nimport { CreateTestBank, TakeTest, SelectTest, TestPage } from \"../Tests\";\nimport { NewQuestion } from \"../Questions\";\n\nimport * as ROUTES from \"../../constants/routes\";\nimport { withAuthentication } from \"../Session\";\nimport \"../../styles/base/App.css\";\n\nconst App = () => (\n  <Router>\n    <div>\n      <Navigation />\n      <Switch>\n        <Route exact path={ROUTES.HOME} component={HomePage} />\n        <Route path={ROUTES.SIGN_UP} component={SignUpPage} />\n        <Route path={ROUTES.SIGN_IN} component={SignInPage} />\n        <Route path={ROUTES.PASSWORD_FORGET} component={PasswordForgetPage} />\n        <Route path={ROUTES.ACCOUNT} component={AccountPage} />\n        <Route path={ROUTES.ADMIN} component={AdminPage} />\n        <Route path={ROUTES.INSTRUCTOR} component={InstructorPage} />\n        <Route path={ROUTES.STUDENT} component={StudentPage} />\n        <Route path={ROUTES.CREATE_TEST} component={CreateTestBank} />\n        <Route path={ROUTES.NEW_QUESTION} component={NewQuestion} />\n        <Route path={ROUTES.SELECT_TEST} component={SelectTest} />\n        <Route path={ROUTES.TESTS} component={TestPage} />\n        <Route path={ROUTES.TAKE_TEST} component={TakeTest} />\n      </Switch>\n    </div>\n  </Router>\n);\n\nexport default withAuthentication(App);\n","import React from 'react';\nimport ReactDOM from 'react-dom';\n\nimport './styles/base/index.css';\nimport * as serviceWorker from './serviceWorker';\n\nimport App from './components/App';\nimport Firebase, { FirebaseContext } from './components/Firebase';\n\nReactDOM.render(\n  <FirebaseContext.Provider value={new Firebase()}>\n    <App />\n  </FirebaseContext.Provider>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: http://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}