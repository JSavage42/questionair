{"version":3,"sources":["images/logo.svg","serviceWorker.js","components/Session/context.js","components/Firebase/context.js","components/Firebase/firebase.js","components/Firebase/index.js","components/Session/withAuthentication.js","constants/routes.js","components/Session/withAuthorization.js","components/SignOut/index.js","components/Navigation/index.js","constants/roles.js","components/SignUp/index.js","components/PasswordForget/index.js","components/SignIn/index.js","components/Home/index.js","components/PasswordChange/index.js","components/Account/index.js","components/Users/UserList.js","components/Users/UserItem.js","components/Admin/index.js","components/Tests/TestList.js","components/Tests/CreateTestBank.js","components/Tests/TakeTest.js","components/Tests/SelectTest.js","components/Tests/TestPage.js","components/Instructor/index.js","components/Student/index.js","components/Questions/NewQuestion.js","components/App/index.js","index.js"],"names":["module","exports","__webpack_require__","p","Boolean","window","location","hostname","match","AuthUserContext","React","createContext","FirebaseContext","withFirebase","Component","props","react_default","a","createElement","Consumer","firebase","Object","assign","config","apiKey","process","authDomain","databaseURL","projectId","storageBucket","messagingSenderId","Firebase","_this","this","classCallCheck","doCreateUserWithEmailAndPassword","email","password","auth","createUserWithEmailAndPassword","doSignInWithEmailAndPassword","signInWithEmailAndPassword","doSignInWithGoogle","signInWithPopup","googleProvider","doSignInWithFacebook","facebookProvider","doSignInWithTwitter","twitterProvider","doSignOut","signOut","doPasswordReset","sendPasswordResetEmail","doSendEmailVerification","currentUser","sendEmailVerification","url","REACT_APP_CONFIRMATION_EMAIL_REDIRECT","doPasswordUpdate","updatePassword","onAuthUserListener","next","fallback","onAuthStateChanged","authUser","user","uid","once","then","snapshot","dbUser","val","roles","objectSpread","emailVerified","providerData","db","ref","concat","users","test","tid","tests","image","fileName","storage","images","host","hosts","app","initializeApp","serverValue","database","ServerValue","emailAuthProvider","EmailAuthProvider","GoogleAuthProvider","FacebookAuthProvider","TwitterAuthProvider","withAuthentication","WithAuthentication","_React$Component","possibleConstructorReturn","getPrototypeOf","call","state","JSON","parse","localStorage","getItem","inherits","createClass","key","value","_this2","listener","setItem","stringify","setState","removeItem","context","Provider","HOME","withAuthorization","condition","WithAuthorization","apply","arguments","_this$props","history","push","compose","withRouter","_ref","type","onClick","NavigationAuth","src","logo","alt","title","Link","to","ROUTES","includes","SignOut","NavigationNonAuth","Navigation","Navigation_NavigationAuth","Navigation_NavigationNonAuth","INITIAL_STATE","username","passwordOne","passwordTwo","requestAdmin","requestInstructor","error","ERROR_CODE_ACCOUNT_EXISTS","ERROR_MSG_ACCOUNT_EXISTS","SignUpFormBase","onSubmit","event","_this$state","requests","set","catch","code","message","preventDefault","onChange","defineProperty","target","name","onChangeCheckbox","checked","_this$state2","isInvalid","placeholder","disabled","SignUpLink","SignUpForm","SignUpPage","PasswordForgetFormBase","PasswordForgetLink","PasswordForgetPage","PasswordForgetForm","SignInFormBase","SignInGoogleBase","_this2$props","socialAuthUser","displayName","SignInFacebookBase","_this3","_this3$props","additionalUserInfo","profile","SignInTwitterBase","_this4","_this4$props","SignInForm","SignInGoogle","SignInFacebook","SignInTwitter","SignInPage","PasswordForget_PasswordForgetLink","SignUp_SignUpLink","HomePage","on","off","id","PasswordChangeForm","SIGN_IN_METHODS","provider","LoginManagementBase","fetchSignInMethods","fetchSignInMethodsForEmail","activeSignInMethods","onSocialLoginLink","linkWithPopup","onDefaultLoginLink","credential","linkAndRetrieveDataWithCredential","onUnlink","providerId","unlink","map","signInMethod","onlyOneLeft","length","isEnabled","Account_DefaultLoginToggle","onLink","Account_SocialLoginToggle","SocialLoginToggle","DefaultLoginToggle","_this$props2","PermissionRequestsBase","handleRequests","e","child","PermissionRequests","LoginManagement","PasswordChange","UserList","loading","usersObject","usersList","keys","role","pathname","UserItem","onSendPasswordResetEmail","handleRequestApproval","remove","handleRoleRemoval","console","log","params","req","components_Users_UserList","TestList","handleOnChange","handleHostTest","questions","values","userTests","testsObject","testsList","_arr","_i","substring","_this$state3","CreateTestBank","fetchUser","handleOnSubmit","tidPrefix","totalPoints","passingScore","testBankMeta","handleChange","testBankId","TakeTest","handleSubmitAnswer","dataset","question","document","querySelector","classList","toggle","submittedAnswers","currentQuestion","instructorID","className","questionNum","getDownloadURL","options","op","data-key","data-question","components_Tests_TestList","TestPage","componentWillMount","handleToggle","_this$props$location$","answer","InstructorPage","handleEndHostedTests","StudentPage","handleStartTest","NewQuestion","op1","op2","op3","op4","op5","op6","op7","op8","op9","op10","reference1","reference2","upLoadImage","isNullOrUndefined","file","uploadImage","files","put","addQuestion","accept","BrowserRouter","src_components_Navigation","Switch","Route","exact","path","component","AccountPage","AdminPage","SelectTest","ReactDOM","render","Firebase_context","components_App","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.d7fdd31c.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/logo.11ad7f58.svg\";","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read http://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit http://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See http://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\n\nconst AuthUserContext = React.createContext(null);\n\nexport default AuthUserContext;\n","import React from 'react';\n\nconst FirebaseContext = React.createContext(null);\n\nexport const withFirebase = Component => props => (\n  <FirebaseContext.Consumer>{firebase => <Component {...props} firebase={firebase} />}</FirebaseContext.Consumer>\n);\n\nexport default FirebaseContext;\n","import app from 'firebase/app';\nimport 'firebase/auth';\nimport 'firebase/database';\nimport 'firebase/storage';\n\nconst config = {\n  apiKey: process.env.REACT_APP_API_KEY,\n  authDomain: process.env.REACT_APP_AUTH_DOMAIN,\n  databaseURL: process.env.REACT_APP_DATABASE_URL,\n  projectId: process.env.REACT_APP_PROJECT_ID,\n  storageBucket: process.env.REACT_APP_STORAGE_BUCKET,\n  messagingSenderId: process.env.REACT_APP_MESSAGING_SENDER_ID,\n};\n\nclass Firebase {\n  constructor() {\n    app.initializeApp(config);\n\n    /* Helper */\n\n    this.serverValue = app.database.ServerValue;\n    this.emailAuthProvider = app.auth.EmailAuthProvider;\n\n    /* Firebase APIs */\n\n    this.auth = app.auth();\n    this.db = app.database();\n    this.storage = app.storage();\n\n    /* Social Sign In Method Provider */\n\n    this.googleProvider = new app.auth.GoogleAuthProvider();\n    this.facebookProvider = new app.auth.FacebookAuthProvider();\n    this.twitterProvider = new app.auth.TwitterAuthProvider();\n  }\n\n  // *** Auth API ***\n\n  doCreateUserWithEmailAndPassword = (email, password) =>\n    this.auth.createUserWithEmailAndPassword(email, password);\n\n  doSignInWithEmailAndPassword = (email, password) =>\n    this.auth.signInWithEmailAndPassword(email, password);\n\n  doSignInWithGoogle = () => this.auth.signInWithPopup(this.googleProvider);\n\n  doSignInWithFacebook = () => this.auth.signInWithPopup(this.facebookProvider);\n\n  doSignInWithTwitter = () => this.auth.signInWithPopup(this.twitterProvider);\n\n  doSignOut = () => this.auth.signOut();\n\n  doPasswordReset = (email) => this.auth.sendPasswordResetEmail(email);\n\n  doSendEmailVerification = () =>\n    this.auth.currentUser.sendEmailVerification({\n      url: process.env.REACT_APP_CONFIRMATION_EMAIL_REDIRECT,\n    });\n\n  doPasswordUpdate = (password) =>\n    this.auth.currentUser.updatePassword(password);\n\n  // *** Merge Auth and DB User API *** //\n\n  onAuthUserListener = (next, fallback) =>\n    this.auth.onAuthStateChanged((authUser) => {\n      if (authUser) {\n        this.user(authUser.uid)\n          .once('value')\n          .then((snapshot) => {\n            const dbUser = snapshot.val();\n\n            // default empty roles\n            if (!dbUser.roles) {\n              dbUser.roles = [];\n            }\n\n            // merge auth and db user\n            authUser = {\n              uid: authUser.uid,\n              email: authUser.email,\n              emailVerified: authUser.emailVerified,\n              providerData: authUser.providerData,\n              ...dbUser,\n            };\n\n            next(authUser);\n          });\n      } else {\n        fallback();\n      }\n    });\n\n  // *** User API ***\n\n  user = (uid) => this.db.ref(`users/${uid}`);\n\n  users = () => this.db.ref(`users`);\n\n  // *** Tests Banks API ***\n\n  test = (tid) => this.db.ref(`tests/${tid}`);\n\n  tests = () => this.db.ref(`tests`);\n\n  // *** Question Image API ***\n  image = (uid, fileName) => this.storage.ref(`${uid}/images/${fileName}`);\n\n  images = (uid) => this.storage.ref(`${uid}/images`);\n\n  // *** Host API ***\n\n  host = (tid) => this.db.ref(`hosts/${tid}`);\n\n  hosts = () => this.db.ref(`hosts`);\n}\n\nexport default Firebase;\n","import FirebaseContext, { withFirebase } from './context';\nimport Firebase from './firebase';\n\nexport default Firebase;\n\nexport { FirebaseContext, withFirebase };\n","import React from 'react';\n\nimport AuthUserContext from './context';\nimport { withFirebase } from '../Firebase';\n\nconst withAuthentication = (Component) => {\n  class WithAuthentication extends React.Component {\n    constructor(props) {\n      super(props);\n\n      this.state = {\n        authUser: JSON.parse(localStorage.getItem('authUser')),\n      };\n    }\n\n    componentDidMount() {\n      const { firebase } = this.props;\n      this.listener = firebase.onAuthUserListener(\n        (authUser) => {\n          localStorage.setItem('authUser', JSON.stringify(authUser));\n          this.setState({ authUser });\n        },\n        () => {\n          localStorage.removeItem('authUser');\n          this.setState({ authUser: null });\n        },\n      );\n    }\n\n    componentWillUnmount() {\n      this.listener();\n    }\n\n    render() {\n      const { authUser } = this.state;\n      return (\n        <AuthUserContext.Provider value={authUser}>\n          <Component {...this.props} />\n        </AuthUserContext.Provider>\n      );\n    }\n  }\n\n  return withFirebase(WithAuthentication);\n};\n\nexport default withAuthentication;\n","export const HOME = '/';\nexport const SIGN_UP = '/signup';\nexport const SIGN_IN = '/signin';\nexport const ACCOUNT = '/account';\nexport const PASSWORD_FORGET = '/pw-forget';\nexport const ADMIN = '/admin';\nexport const ADMIN_DETAILS = '/admin/:id';\nexport const INSTRUCTOR = '/instructor';\nexport const STUDENT = '/student';\nexport const TESTS = '/tests';\nexport const TEST_VIEW = '/tests/:id';\nexport const CREATE_TEST = '/tests/create';\nexport const NEW_QUESTION = '/tests/new_question';\nexport const SELECT_TEST = '/tests/select';\nexport const TAKE_TEST = '/tests/s/:tid';\nexport const HOST_TEST = '/tests/i/:tid';\n","import React from 'react';\nimport { withRouter } from 'react-router-dom';\nimport { compose } from 'recompose';\n\nimport AuthUserContext from './context';\nimport { withFirebase } from '../Firebase';\nimport * as ROUTES from '../../constants/routes';\n\nconst withAuthorization = (condition) => (Component) => {\n  class WithAuthorization extends React.Component {\n    componentDidMount() {\n      const { firebase, history } = this.props;\n      this.listener = firebase.onAuthUserListener(\n        (authUser) => {\n          if (!condition(authUser)) {\n            history.push(ROUTES.SIGN_IN);\n          }\n        },\n        () => history.push(ROUTES.SIGN_IN),\n      );\n    }\n\n    componentWillUnmount() {\n      this.listener();\n    }\n\n    render() {\n      return (\n        <AuthUserContext.Consumer>\n          {(authUser) =>\n            condition(authUser) ? <Component {...this.props} /> : null\n          }\n        </AuthUserContext.Consumer>\n      );\n    }\n  }\n\n  return compose(\n    withRouter,\n    withFirebase,\n  )(WithAuthorization);\n};\n\nexport default withAuthorization;\n","import React from \"react\";\nimport { withFirebase } from \"../Firebase\";\n\nconst SignOutButton = ({ firebase }) => (\n  <button type=\"button\" onClick={firebase.doSignOut}>\n    Sign Out\n  </button>\n);\n\nexport default withFirebase(SignOutButton);\n","import React from 'react';\nimport { Link } from 'react-router-dom';\n\nimport { AuthUserContext } from '../Session';\nimport SignOutButton from '../SignOut';\nimport * as ROUTES from '../../constants/routes';\nimport * as ROLES from '../../constants/roles';\nimport '../../styles/components/Navigation.css';\nimport logo from '../../images/logo.svg';\n\nconst Navigation = () => (\n  <AuthUserContext.Consumer>\n    {authUser =>\n      authUser ? <NavigationAuth authUser={authUser} /> : <NavigationNonAuth />\n    }\n  </AuthUserContext.Consumer>\n);\n\nconst NavigationAuth = ({ authUser }) => (\n  <header>\n    <img src={logo} alt='Question Air' title='Question Air' />\n    <nav>\n      <ul>\n        <li>\n          <Link to={ROUTES.HOME}>Home</Link>\n        </li>\n        <li>\n          <Link to={ROUTES.ACCOUNT}>Account</Link>\n        </li>\n        <li>\n          <Link to={ROUTES.STUDENT}>Student</Link>\n        </li>\n        {(authUser.roles.includes(ROLES.ADMIN) ||\n          authUser.roles.includes(ROLES.INSTRUCTOR)) && (\n          <li>\n            <Link to={ROUTES.INSTRUCTOR}>Instructor</Link>\n          </li>\n        )}\n        {authUser.roles.includes(ROLES.ADMIN) && (\n          <li>\n            <Link to={ROUTES.ADMIN}>Admin</Link>\n          </li>\n        )}\n      </ul>\n      <SignOutButton />\n    </nav>\n  </header>\n);\n\nconst NavigationNonAuth = () => (\n  <header>\n    <h1>Question Air</h1>\n    <nav>\n      <ul>\n        <li>\n          <Link to={ROUTES.SIGN_IN}>Sign In</Link>\n        </li>\n      </ul>\n    </nav>\n  </header>\n);\n\nexport default Navigation;\n","export const ADMIN = \"ADMIN\";\nexport const INSTRUCTOR = \"INSTRUCTOR\";\nexport const STUDENT = \"STUDENT\";\n","import React, { Component } from 'react';\nimport { Link, withRouter } from 'react-router-dom';\n\nimport { withFirebase } from '../Firebase';\nimport * as ROUTES from '../../constants/routes';\n\nconst SignUpPage = () => (\n  <div>\n    <h1>SignUp</h1>\n    <SignUpForm />\n  </div>\n);\n\nconst INITIAL_STATE = {\n  username: '',\n  email: '',\n  passwordOne: '',\n  passwordTwo: '',\n  requestAdmin: false,\n  requestInstructor: false,\n  error: null,\n};\n\nconst ERROR_CODE_ACCOUNT_EXISTS = 'auth/email-already-in-use';\n\nconst ERROR_MSG_ACCOUNT_EXISTS = `\n  An account with this E-Mail address already exists.\n  Try to login with this account instead. If you think the\n  account is already used from one of the social logins, try\n  to sign in with one of them. Afterward, associate your accounts\n  on your personal account page.\n`;\n\nclass SignUpFormBase extends Component {\n  constructor(props) {\n    super(props);\n\n    this.state = { ...INITIAL_STATE };\n  }\n\n  onSubmit = (event) => {\n    const {\n      username,\n      email,\n      passwordOne,\n      requestAdmin,\n      requestInstructor,\n    } = this.state;\n    const { firebase, history } = this.props;\n    const requests = [];\n    if (requestAdmin) {\n      requests.push('admin');\n    }\n    if (requestInstructor) {\n      requests.push('instructor');\n    }\n\n    firebase\n      .doCreateUserWithEmailAndPassword(email, passwordOne)\n      .then((authUser) => {\n        // Create a user in your Firebase real time database\n        return firebase.user(authUser.user.uid).set({\n          username,\n          email,\n          requests,\n        });\n      })\n      .then(() => {\n        return firebase.doSendEmailVerification();\n      })\n      .then(() => {\n        this.setState({ ...INITIAL_STATE });\n        history.push(ROUTES.HOME);\n      })\n      .catch((error) => {\n        if (error.code === ERROR_CODE_ACCOUNT_EXISTS) {\n          error.message = ERROR_MSG_ACCOUNT_EXISTS;\n        }\n\n        this.setState({ error });\n      });\n\n    event.preventDefault();\n  };\n\n  onChange = (event) => {\n    this.setState({ [event.target.name]: event.target.value });\n  };\n\n  onChangeCheckbox = (event) => {\n    this.setState({ [event.target.name]: event.target.checked });\n  };\n\n  render() {\n    const {\n      username,\n      email,\n      passwordOne,\n      passwordTwo,\n      error,\n      requestInstructor,\n      requestAdmin,\n    } = this.state;\n\n    const isInvalid =\n      passwordOne !== passwordTwo ||\n      passwordOne === '' ||\n      email === '' ||\n      username === '';\n\n    return (\n      <form onSubmit={this.onSubmit}>\n        <input\n          name=\"username\"\n          value={username}\n          onChange={this.onChange}\n          type=\"text\"\n          placeholder=\"Full Name\"\n        />\n        <input\n          name=\"email\"\n          value={email}\n          onChange={this.onChange}\n          type=\"text\"\n          placeholder=\"Email Address\"\n        />\n        <input\n          name=\"passwordOne\"\n          value={passwordOne}\n          onChange={this.onChange}\n          type=\"password\"\n          placeholder=\"Password\"\n        />\n        <input\n          name=\"passwordTwo\"\n          value={passwordTwo}\n          onChange={this.onChange}\n          type=\"password\"\n          placeholder=\"Confirm Password\"\n        />\n        <label>\n          Request Admin:\n          <input\n            name=\"requestAdmin\"\n            type=\"checkbox\"\n            checked={requestAdmin}\n            onChange={this.onChangeCheckbox}\n          />\n        </label>\n        <label>\n          Request Instructor:\n          <input\n            name=\"requestInstructor\"\n            type=\"checkbox\"\n            checked={requestInstructor}\n            onChange={this.onChangeCheckbox}\n          />\n        </label>\n        <button disabled={isInvalid} type=\"submit\">\n          Sign Up\n        </button>\n\n        {error && <p>{error.message}</p>}\n      </form>\n    );\n  }\n}\n\nconst SignUpLink = () => (\n  <p>\n    Don't have an account? <Link to={ROUTES.SIGN_UP}>Sign Up</Link>\n  </p>\n);\n\nconst SignUpForm = withRouter(withFirebase(SignUpFormBase));\n\nexport default SignUpPage;\n\nexport { SignUpForm, SignUpLink };\n","import React, { Component } from 'react';\nimport { Link } from 'react-router-dom';\n\nimport { withFirebase } from '../Firebase';\nimport * as ROUTES from '../../constants/routes';\n\nconst PasswordForgetPage = () => (\n  <div>\n    <h1>PasswordForget</h1>\n    <PasswordForgetForm />\n  </div>\n);\n\nconst INITIAL_STATE = {\n  email: '',\n  error: null,\n};\n\nclass PasswordForgetFormBase extends Component {\n  constructor(props) {\n    super(props);\n\n    this.state = { ...INITIAL_STATE };\n  }\n\n  onSubmit = (event) => {\n    const { email } = this.state;\n    const { firebase } = this.props;\n\n    firebase\n      .doPasswordReset(email)\n      .then(() => {\n        this.setState({ ...INITIAL_STATE });\n      })\n      .catch((error) => {\n        this.setState({ error });\n      });\n\n    event.preventDefault();\n  };\n\n  onChange = (event) => {\n    this.setState({ [event.target.name]: event.target.value });\n  };\n\n  render() {\n    const { email, error } = this.state;\n    const isInvalid = email === '';\n\n    return (\n      <form onSubmit={this.onSubmit}>\n        <input\n          name=\"email\"\n          value={email}\n          onChange={this.onChange}\n          type=\"text\"\n          placeholder=\"Email Address\"\n        />\n        <button disabled={isInvalid} type=\"submit\">\n          Reset My Password\n        </button>\n\n        {error && <p>{error.message}</p>}\n      </form>\n    );\n  }\n}\n\nconst PasswordForgetLink = () => (\n  <p>\n    <Link to={ROUTES.PASSWORD_FORGET}>Forgot Password?</Link>\n  </p>\n);\n\nexport default PasswordForgetPage;\n\nconst PasswordForgetForm = withFirebase(PasswordForgetFormBase);\n\nexport { PasswordForgetForm, PasswordForgetLink };\n","import React, { Component } from 'react';\nimport { withRouter } from 'react-router-dom';\nimport { compose } from 'recompose';\n\nimport { SignUpLink } from '../SignUp';\nimport { PasswordForgetLink } from '../PasswordForget';\nimport { withFirebase } from '../Firebase';\nimport * as ROUTES from '../../constants/routes';\n\nconst SignInPage = () => (\n  <div>\n    <h1>SignIn</h1>\n    <SignInForm />\n    <SignInGoogle />\n    <SignInFacebook />\n    <SignInTwitter />\n    <PasswordForgetLink />\n    <SignUpLink />\n  </div>\n);\n\nconst INITIAL_STATE = {\n  email: '',\n  password: '',\n  error: null,\n};\n\nconst ERROR_CODE_ACCOUNT_EXISTS =\n  'auth/account-exists-with-different-credential';\n\nconst ERROR_MSG_ACCOUNT_EXISTS = `\n  An account with an E-Mail address to\n  this social account already exists. Try to login from\n  this account instead and associate your social accounts on\n  your personal account page.\n`;\n\nclass SignInFormBase extends Component {\n  constructor(props) {\n    super(props);\n\n    this.state = { ...INITIAL_STATE };\n  }\n\n  onSubmit = (event) => {\n    const { email, password } = this.state;\n    const { firebase, history } = this.props;\n\n    firebase\n      .doSignInWithEmailAndPassword(email, password)\n      .then(() => {\n        this.setState({ ...INITIAL_STATE });\n        history.push(ROUTES.HOME);\n      })\n      .catch((error) => {\n        this.setState({ error });\n      });\n\n    event.preventDefault();\n  };\n\n  onChange = (event) => {\n    this.setState({ [event.target.name]: event.target.value });\n  };\n\n  render() {\n    const { email, password, error } = this.state;\n\n    const isInvalid = password === '' || email === '';\n\n    return (\n      <form onSubmit={this.onSubmit}>\n        <input\n          name=\"email\"\n          value={email}\n          onChange={this.onChange}\n          type=\"text\"\n          placeholder=\"Email Address\"\n        />\n        <input\n          name=\"password\"\n          value={password}\n          onChange={this.onChange}\n          type=\"password\"\n          placeholder=\"Password\"\n        />\n        <button disabled={isInvalid} type=\"submit\">\n          Sign In\n        </button>\n\n        {error && <p>{error.message}</p>}\n      </form>\n    );\n  }\n}\n\nclass SignInGoogleBase extends Component {\n  constructor(props) {\n    super(props);\n\n    this.state = { error: null };\n  }\n\n  onSubmit = (event) => {\n    const { firebase, history } = this.props;\n    firebase\n      .doSignInWithGoogle()\n      .then((socialAuthUser) => {\n        // Create a user in your Firebase Realtime Database too\n        return firebase.user(socialAuthUser.user.uid).set({\n          username: socialAuthUser.user.displayName,\n          email: socialAuthUser.user.email,\n          roles: [],\n        });\n      })\n      .then(() => {\n        this.setState({ error: null });\n        history.push(ROUTES.HOME);\n      })\n      .catch((error) => {\n        if (error.code === ERROR_CODE_ACCOUNT_EXISTS) {\n          error.message = ERROR_MSG_ACCOUNT_EXISTS;\n        }\n\n        this.setState({ error });\n      });\n\n    event.preventDefault();\n  };\n\n  render() {\n    const { error } = this.state;\n\n    return (\n      <form onSubmit={this.onSubmit}>\n        <button type=\"submit\">Sign In with Google</button>\n\n        {error && <p>{error.message}</p>}\n      </form>\n    );\n  }\n}\n\nclass SignInFacebookBase extends Component {\n  constructor(props) {\n    super(props);\n\n    this.state = { error: null };\n  }\n\n  onSubmit = (event) => {\n    const { firebase, history } = this.props;\n    firebase\n      .doSignInWithFacebook()\n      .then((socialAuthUser) => {\n        // Create a user in your Firebase Realtime Database too\n        return firebase.user(socialAuthUser.user.uid).set({\n          username: socialAuthUser.additionalUserInfo.profile.name,\n          email: socialAuthUser.additionalUserInfo.profile.email,\n          roles: [],\n        });\n      })\n      .then(() => {\n        this.setState({ error: null });\n        history.push(ROUTES.HOME);\n      })\n      .catch((error) => {\n        if (error.code === ERROR_CODE_ACCOUNT_EXISTS) {\n          error.message = ERROR_MSG_ACCOUNT_EXISTS;\n        }\n\n        this.setState({ error });\n      });\n\n    event.preventDefault();\n  };\n\n  render() {\n    const { error } = this.state;\n\n    return (\n      <form onSubmit={this.onSubmit}>\n        <button type=\"submit\">Sign In with Facebook</button>\n\n        {error && <p>{error.message}</p>}\n      </form>\n    );\n  }\n}\n\nclass SignInTwitterBase extends Component {\n  constructor(props) {\n    super(props);\n\n    this.state = { error: null };\n  }\n\n  onSubmit = (event) => {\n    const { firebase, history } = this.props;\n    firebase\n      .doSignInWithTwitter()\n      .then((socialAuthUser) => {\n        // Create a user in your Firebase Realtime Database too\n        return firebase.user(socialAuthUser.user.uid).set({\n          username: socialAuthUser.additionalUserInfo.profile.name,\n          email: socialAuthUser.additionalUserInfo.profile.email,\n          roles: [],\n        });\n      })\n      .then(() => {\n        this.setState({ error: null });\n        history.push(ROUTES.HOME);\n      })\n      .catch((error) => {\n        if (error.code === ERROR_CODE_ACCOUNT_EXISTS) {\n          error.message = ERROR_MSG_ACCOUNT_EXISTS;\n        }\n\n        this.setState({ error });\n      });\n\n    event.preventDefault();\n  };\n\n  render() {\n    const { error } = this.state;\n\n    return (\n      <form onSubmit={this.onSubmit}>\n        <button type=\"submit\">Sign In with Twitter</button>\n\n        {error && <p>{error.message}</p>}\n      </form>\n    );\n  }\n}\n\nconst SignInForm = compose(\n  withRouter,\n  withFirebase,\n)(SignInFormBase);\n\nconst SignInGoogle = compose(\n  withRouter,\n  withFirebase,\n)(SignInGoogleBase);\n\nconst SignInFacebook = compose(\n  withRouter,\n  withFirebase,\n)(SignInFacebookBase);\n\nconst SignInTwitter = compose(\n  withRouter,\n  withFirebase,\n)(SignInTwitterBase);\n\nexport default SignInPage;\n\nexport { SignInForm, SignInGoogle, SignInFacebook, SignInTwitter };\n","import React, { Component } from 'react';\nimport { compose } from 'recompose';\nimport '../../styles/components/Home/Home.css';\nimport { withAuthorization } from '../Session';\nimport { withFirebase } from '../Firebase';\n\nclass HomePage extends Component {\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      users: null,\n    };\n  }\n\n  componentDidMount() {\n    const { firebase } = this.props;\n    firebase.users().on('value', (snapshot) => {\n      this.setState({\n        users: snapshot.val(),\n      });\n    });\n  }\n\n  componentWillUnmount() {\n    this.props.firebase.users().off();\n  }\n\n  render() {\n    return (\n      <main id=\"home\">\n        <h2>Home Page</h2>\n        <p>Welcome to Question Air.</p>\n      </main>\n    );\n  }\n}\n\nconst condition = (authUser) => !!authUser;\n\nexport default compose(\n  withFirebase,\n  withAuthorization(condition),\n)(HomePage);\n","import React, { Component } from 'react';\n\nimport { withFirebase } from '../Firebase';\n\nconst INITIAL_STATE = {\n  passwordOne: '',\n  passwordTwo: '',\n  error: null,\n};\n\nclass PasswordChangeForm extends Component {\n  constructor(props) {\n    super(props);\n\n    this.state = { ...INITIAL_STATE };\n  }\n\n  onSubmit = (event) => {\n    const { passwordOne } = this.state;\n    const { firebase } = this.state;\n\n    firebase\n      .doPasswordUpdate(passwordOne)\n      .then(() => {\n        this.setState({ ...INITIAL_STATE });\n      })\n      .catch((error) => {\n        this.setState({ error });\n      });\n\n    event.preventDefault();\n  };\n\n  onChange = (event) => {\n    this.setState({ [event.target.name]: event.target.value });\n  };\n\n  render() {\n    const { passwordOne, passwordTwo, error } = this.state;\n\n    const isInvalid = passwordOne !== passwordTwo || passwordOne === '';\n\n    return (\n      <form onSubmit={this.onSubmit}>\n        <input\n          name=\"passwordOne\"\n          value={passwordOne}\n          onChange={this.onChange}\n          type=\"password\"\n          placeholder=\"New Password\"\n        />\n        <input\n          name=\"passwordTwo\"\n          value={passwordTwo}\n          onChange={this.onChange}\n          type=\"password\"\n          placeholder=\"Confirm New Password\"\n        />\n        <button disabled={isInvalid} type=\"submit\">\n          Reset My Password\n        </button>\n\n        {error && <p>{error.message}</p>}\n      </form>\n    );\n  }\n}\n\nexport default withFirebase(PasswordChangeForm);\n","import React, { Component } from 'react';\nimport { compose } from 'recompose';\nimport '../../styles/components/Account/Account.css';\nimport { AuthUserContext, withAuthorization } from '../Session';\nimport { withFirebase } from '../Firebase';\nimport { PasswordForgetForm } from '../PasswordForget';\nimport PasswordChangeForm from '../PasswordChange';\n\nconst SIGN_IN_METHODS = [\n  {\n    id: 'password',\n    provider: null,\n  },\n  {\n    id: 'google.com',\n    provider: 'googleProvider',\n  },\n  {\n    id: 'facebook.com',\n    provider: 'facebookProvider',\n  },\n  {\n    id: 'twitter.com',\n    provider: 'twitterProvider',\n  },\n];\n\nconst AccountPage = () => (\n  <AuthUserContext.Consumer>\n    {(authUser) => (\n      <main id=\"account\">\n        <article>\n          <h2>Account: {authUser.email}</h2>\n          <PasswordForgetForm />\n          <PasswordChangeForm />\n          <LoginManagement authUser={authUser} />\n          <PermissionRequests />\n        </article>\n      </main>\n    )}\n  </AuthUserContext.Consumer>\n);\n\nclass LoginManagementBase extends Component {\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      activeSignInMethods: [],\n      error: null,\n    };\n  }\n\n  componentDidMount() {\n    this.fetchSignInMethods();\n  }\n\n  fetchSignInMethods = () => {\n    const { firebase, authUser } = this.props;\n    firebase.auth\n      .fetchSignInMethodsForEmail(authUser.email)\n      .then((activeSignInMethods) =>\n        this.setState({ activeSignInMethods, error: null }),\n      )\n      .catch((error) => this.setState({ error }));\n  };\n\n  onSocialLoginLink = (provider) => {\n    const { firebase } = this.props;\n    firebase.auth.currentUser\n      .linkWithPopup(firebase[provider])\n      .then(this.fetchSignInMethods)\n      .catch((error) => this.setState({ error }));\n  };\n\n  onDefaultLoginLink = (password) => {\n    const { firebase } = this.props;\n    const credential = firebase.emailAuthProvider.credential(\n      this.props.authUser.email,\n      password,\n    );\n\n    firebase.auth.currentUser\n      .linkAndRetrieveDataWithCredential(credential)\n      .then(this.fetchSignInMethods)\n      .catch((error) => this.setState({ error }));\n  };\n\n  onUnlink = (providerId) => {\n    const { firebase } = this.props;\n    firebase.auth.currentUser\n      .unlink(providerId)\n      .then(this.fetchSignInMethods)\n      .catch((error) => this.setState({ error }));\n  };\n\n  render() {\n    const { activeSignInMethods, error } = this.state;\n\n    return (\n      <article id=\"signin-methods\">\n        <span>Sign In Methods:</span>\n        <ul>\n          {SIGN_IN_METHODS.map((signInMethod) => {\n            const onlyOneLeft = activeSignInMethods.length === 1;\n            const isEnabled = activeSignInMethods.includes(signInMethod.id);\n\n            return (\n              <li key={signInMethod.id}>\n                {signInMethod.id === 'password' ? (\n                  <DefaultLoginToggle\n                    onlyOneLeft={onlyOneLeft}\n                    isEnabled={isEnabled}\n                    signInMethod={signInMethod}\n                    onLink={this.onDefaultLoginLink}\n                    onUnlink={this.onUnlink}\n                  />\n                ) : (\n                  <SocialLoginToggle\n                    onlyOneLeft={onlyOneLeft}\n                    isEnabled={isEnabled}\n                    signInMethod={signInMethod}\n                    onLink={this.onSocialLoginLink}\n                    onUnlink={this.onUnlink}\n                  />\n                )}\n              </li>\n            );\n          })}\n        </ul>\n        {error && error.message}\n      </article>\n    );\n  }\n}\n\nconst SocialLoginToggle = ({\n  onlyOneLeft,\n  isEnabled,\n  signInMethod,\n  onLink,\n  onUnlink,\n}) =>\n  isEnabled ? (\n    <button\n      type=\"button\"\n      onClick={() => onUnlink(signInMethod.id)}\n      disabled={onlyOneLeft}\n    >\n      Deactivate {signInMethod.id}\n    </button>\n  ) : (\n    <button type=\"button\" onClick={() => onLink(signInMethod.provider)}>\n      Link {signInMethod.id}\n    </button>\n  );\n\nclass DefaultLoginToggle extends Component {\n  constructor(props) {\n    super(props);\n\n    this.state = { passwordOne: '', passwordTwo: '' };\n  }\n\n  onSubmit = (event) => {\n    const { passwordOne } = this.state;\n    const { onLink } = this.props;\n    event.preventDefault();\n\n    onLink(passwordOne);\n    this.setState({ passwordOne: '', passwordTwo: '' });\n  };\n\n  onChange = (event) => {\n    this.setState({ [event.target.name]: event.target.value });\n  };\n\n  render() {\n    const { onlyOneLeft, isEnabled, signInMethod, onUnlink } = this.props;\n\n    const { passwordOne, passwordTwo } = this.state;\n\n    const isInvalid = passwordOne !== passwordTwo || passwordOne === '';\n\n    return isEnabled ? (\n      <button\n        type=\"button\"\n        onClick={() => onUnlink(signInMethod.id)}\n        disabled={onlyOneLeft}\n      >\n        Deactivate {signInMethod.id}\n      </button>\n    ) : (\n      <form onSubmit={this.onSubmit}>\n        <input\n          name=\"passwordOne\"\n          value={passwordOne}\n          onChange={this.onChange}\n          type=\"password\"\n          placeholder=\"New Password\"\n        />\n        <input\n          name=\"passwordTwo\"\n          value={passwordTwo}\n          onChange={this.onChange}\n          type=\"password\"\n          placeholder=\"Confirm New Password\"\n        />\n\n        <button disabled={isInvalid} type=\"submit\">\n          Link {signInMethod.id}\n        </button>\n      </form>\n    );\n  }\n}\n\nclass PermissionRequestsBase extends Component {\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      uid: null,\n    };\n  }\n\n  componentDidMount() {\n    const { firebase } = this.props;\n    const uid = firebase.auth.currentUser.uid;\n    this.setState({ uid });\n  }\n\n  handleRequests = (e) => {\n    const { uid } = this.state;\n    const { firebase } = this.props;\n    let key;\n    if (e.target.id === 'ADMIN') {\n      key = 0;\n    } else {\n      key = 1;\n    }\n    firebase\n      .user(uid)\n      .child(`requests`)\n      .child(key)\n      .set(e.target.id);\n  };\n\n  render() {\n    return (\n      <article id=\"permission-request\">\n        <b>Requests: </b>(Click to send request)\n        <button id=\"ADMIN\" type=\"button\" onClick={this.handleRequests}>\n          ADMIN\n        </button>\n        <button id=\"INSTRUCTOR\" type=\"button\" onClick={this.handleRequests}>\n          INSTRUCTOR\n        </button>\n      </article>\n    );\n  }\n}\n\nconst PermissionRequests = withFirebase(PermissionRequestsBase);\n\nconst LoginManagement = withFirebase(LoginManagementBase);\n\nconst condition = (authUser) => !!authUser;\n\nexport default compose(withAuthorization(condition))(AccountPage);\n","import React, { Component } from 'react';\nimport { Link } from 'react-router-dom';\n\nimport { withFirebase } from '../Firebase';\nimport * as ROUTES from '../../constants/routes';\nimport '../../styles/components/Users/UserList.css';\n\nclass UserList extends Component {\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      loading: false,\n      users: [],\n    };\n  }\n\n  componentDidMount() {\n    const { firebase } = this.props;\n    this.setState({ loading: true });\n\n    firebase.users().on('value', (snapshot) => {\n      const usersObject = snapshot.val();\n\n      const usersList = Object.keys(usersObject).map((key) => ({\n        ...usersObject[key],\n        uid: key,\n      }));\n\n      this.setState({\n        users: usersList,\n        loading: false,\n      });\n    });\n  }\n\n  componentWillUnmount() {\n    const { firebase } = this.props;\n    firebase.users().off();\n  }\n\n  render() {\n    const { users, loading } = this.state;\n\n    return (\n      <article id=\"user-list\">\n        <h2>Enrolled Users</h2>\n        {loading && <div>Loading ...</div>}\n        <ul>\n          {users.map((user) => (\n            <li key={user.uid}>\n              <span>\n                <strong>ID:</strong> {user.uid}\n              </span>\n              <span>\n                <strong>E-Mail:</strong> {user.email}\n              </span>\n              <span>\n                <strong>Username:</strong> {user.username}\n              </span>\n              {user.roles && (\n                <span>\n                  <strong>Roles:</strong>\n                  <ul>\n                    {user.roles.map((role) => (\n                      <li key={role}>{role}</li>\n                    ))}\n                  </ul>\n                </span>\n              )}\n              <span>\n                <Link\n                  to={{\n                    pathname: `${ROUTES.ADMIN}/${user.uid}`,\n                    state: { user },\n                  }}\n                >\n                  Details\n                </Link>\n              </span>\n            </li>\n          ))}\n        </ul>\n      </article>\n    );\n  }\n}\n\nexport default withFirebase(UserList);\n","import React, { Component } from 'react';\nimport '../../styles/components/Users/UserItem.css';\nimport { withFirebase } from '../Firebase';\nclass UserItem extends Component {\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      loading: true,\n      user: null,\n      uid: null,\n      ...props.location.state,\n    };\n  }\n\n  componentDidMount() {\n    const { match, firebase } = this.props;\n    firebase.user(match.params.id).on('value', (snapshot) => {\n      this.setState({\n        user: snapshot.val(),\n        uid: match.params.id,\n        loading: false,\n      });\n    });\n  }\n\n  componentWillUnmount() {\n    const { match, firebase } = this.props;\n    firebase.user(match.params.id).off();\n  }\n\n  onSendPasswordResetEmail = () => {\n    const { user } = this.state;\n    const { firebase } = this.props;\n    firebase.doPasswordReset(user.email);\n  };\n\n  handleRequestApproval = (e) => {\n    const { uid } = this.state;\n    const { firebase } = this.props;\n    let key;\n    if (e.target.id === 'ADMIN') {\n      key = 0;\n    } else {\n      key = 1;\n    }\n    firebase\n      .user(uid)\n      .child(`roles`)\n      .child(key)\n      .set(e.target.id);\n    firebase\n      .user(uid)\n      .child(`requests`)\n      .child(key)\n      .remove();\n  };\n\n  handleRoleRemoval = (e) => {\n    const { uid } = this.state;\n    const { firebase } = this.props;\n    let key;\n    if (e.target.id === 'ADMIN') {\n      key = 0;\n    } else {\n      key = 1;\n    }\n    firebase\n      .user(uid)\n      .child('roles')\n      .child(key)\n      .remove();\n\n    console.log(key);\n  };\n\n  render() {\n    const { user, loading, uid } = this.state;\n\n    return (\n      <article id=\"user-item\">\n        <h2>{user.username}</h2>\n        {loading && <div>Loading ...</div>}\n\n        {user && (\n          <div>\n            <span>\n              <b>ID:</b> {uid}\n            </span>\n            <span>\n              <b>E-Mail:</b> {user.email}\n            </span>\n            <span>\n              <b>Username:</b> {user.username}\n            </span>\n            {user.requests && (\n              <span id=\"requests\">\n                <b>Requests: </b>(Click to Approve)\n                <ul>\n                  {user.requests.map((req) => (\n                    <li key={req}>\n                      <button\n                        id={req}\n                        type=\"button\"\n                        onClick={this.handleRequestApproval}\n                      >\n                        {req}\n                      </button>\n                    </li>\n                  ))}\n                </ul>\n              </span>\n            )}\n            {user.roles && (\n              <span>\n                <b>Roles: </b>(Click to Remove)\n                <ul>\n                  {user.roles.map((role) => (\n                    <li key={role}>\n                      <button\n                        id={role}\n                        type=\"button\"\n                        onClick={this.handleRoleRemoval}\n                      >\n                        {role}\n                      </button>\n                    </li>\n                  ))}\n                </ul>\n              </span>\n            )}\n            <span>\n              <button type=\"button\" onClick={this.onSendPasswordResetEmail}>\n                Send Password Reset\n              </button>\n            </span>\n          </div>\n        )}\n      </article>\n    );\n  }\n}\n\nexport default withFirebase(UserItem);\n","import React from 'react';\nimport { compose } from 'recompose';\nimport { withAuthorization } from '../Session';\nimport { UserList } from '../Users';\nimport * as ROLES from '../../constants/roles';\nimport '../../styles/components/Admin/Admin.css';\n\nconst AdminPage = () => (\n  <main id=\"admin-page\">\n    <h2>Admin</h2>\n    <p>The Admin Page is accessible by every signed in admin user.</p>\n\n    <UserList />\n  </main>\n);\n\nconst condition = (authUser) =>\n  authUser && authUser.roles.includes(ROLES.ADMIN);\n\nexport default compose(withAuthorization(condition))(AdminPage);\n","import React, { Component } from 'react';\nimport { Link } from 'react-router-dom';\nimport '../../styles/components/Tests/TestList.css';\nimport { withFirebase } from '../Firebase';\nimport * as ROUTES from '../../constants/routes';\nimport * as ROLES from '../../constants/roles';\n\nclass TestList extends Component {\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      tests: [],\n      authUser: JSON.parse(localStorage.getItem('authUser')),\n      loading: false,\n      tid: '',\n      test: null,\n      questions: [],\n      userTests: [],\n    };\n  }\n\n  componentDidMount() {\n    const { authUser, userTests } = this.state;\n    const { firebase } = this.props;\n    this.setState({ loading: true });\n    firebase.tests(authUser.uid).on('value', (snapshot) => {\n      const testsObject = snapshot.val();\n      if (testsObject === null) {\n        this.setState({ loading: false });\n      } else {\n        const testsList = Object.keys(testsObject).map((key) => ({\n          ...testsObject[key],\n          uid: key,\n        }));\n\n        this.setState({\n          tests: testsList,\n          loading: false,\n        });\n        for (const value of Object.values(testsList)) {\n          if (value.tid.includes(authUser.uid.substring(0, 4))) {\n            userTests.push(value);\n          }\n        }\n      }\n    });\n  }\n\n  componentWillUnmount() {\n    const { firebase } = this.props;\n    firebase.tests().off();\n    firebase.host().off();\n  }\n\n  handleOnChange = (e) => {\n    this.setState({ [e.target.name]: e.target.value });\n  };\n\n  handleHostTest = (e) => {\n    e.preventDefault();\n    const { tid, test } = this.state;\n    const { firebase } = this.props;\n\n    // *** Get Test from test API ***\n    firebase.test(tid).on('value', (snapshot) => {\n      this.setState({\n        test: snapshot.val(),\n        questions: Object.values(snapshot.val().questions),\n      });\n    });\n    // *** Create Hosted Test ***\n    firebase.host(tid).set(test);\n  };\n\n  render() {\n    const { userTests, loading, authUser, tid } = this.state;\n    return (\n      <section id=\"instructor-test-list\">\n        <article id=\"test-list\">\n          <h2>Available Quizzes</h2>\n          {loading && <div>Loading ...</div>}\n          <ul>\n            {userTests &&\n              userTests.map((test) => (\n                <Link\n                  to={{\n                    pathname: `${ROUTES.TESTS}/${test.tid}`,\n                    state: { test, authUser },\n                  }}\n                  key={test.tid}\n                >\n                  <li>Quiz ID Number: {test.tid}</li>\n                </Link>\n              ))}\n          </ul>\n        </article>\n        {(authUser && authUser.roles.includes(ROLES.ADMIN)) ||\n        authUser.roles.includes(ROLES.INSTRUCTOR) ? (\n          <article id=\"tests-host\">\n            <h2>Host A Test</h2>\n            <form onSubmit={this.handleHostTest}>\n              <input\n                type=\"text\"\n                name=\"tid\"\n                value={tid}\n                placeholder=\"Test ID\"\n                onChange={this.handleOnChange}\n              />\n              <input type=\"submit\" name=\"submit\" value=\"Submit\" />\n            </form>\n          </article>\n        ) : (\n          ''\n        )}\n      </section>\n    );\n  }\n}\n\nexport default withFirebase(TestList);\n","import React from 'react';\nimport '../../styles/components/Tests/CreateTestBank.css';\nimport { withFirebase } from '../Firebase';\n\nclass CreateTestBank extends React.Component {\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      authUser: JSON.parse(localStorage.getItem('authUser')),\n      error: '',\n      tid: '',\n      totalPoints: '',\n      passingScore: '',\n      tidPrefix: '',\n    };\n  }\n\n  componentDidMount() {\n    const { authUser } = this.state;\n    this.fetchUser();\n    const tidPrefix = authUser.uid.substring(0, 4);\n    this.setState({ tidPrefix });\n  }\n\n  fetchUser = () => {\n    const { firebase } = this.props;\n    firebase.auth.onAuthStateChanged((user) => {\n      if (user) {\n        this.setState({ user, error: null });\n      }\n    });\n  };\n\n  handleOnSubmit = (e) => {\n    const { tid, tidPrefix, totalPoints, passingScore } = this.state;\n    const { firebase } = this.props;\n    e.preventDefault();\n\n    const testBankMeta = {\n      tid: `${tidPrefix}${tid}`,\n      totalPoints: totalPoints,\n      passingScore: passingScore,\n    };\n\n    firebase.test(`${tidPrefix}${tid}`).set(testBankMeta);\n\n    this.setState({\n      tid: '',\n      totalPoints: '',\n      passingScore: '',\n    });\n  };\n\n  handleChange = (e) => {\n    this.setState({\n      [e.target.name]: e.target.value,\n    });\n  };\n\n  render() {\n    const {\n      authUser,\n      tidPrefix,\n      totalPoints,\n      testBankId,\n      passingScore,\n    } = this.state;\n    return (\n      <main id=\"create-test-bank\">\n        <h2>Create Test Bank</h2>\n        <p>\n          Instructor Name: {authUser.username}\n          <br />\n          Test ID prefix: {tidPrefix}\n        </p>\n        <form id=\"newTestBank\" onSubmit={this.handleOnSubmit}>\n          <label>Test Bank ID Number</label>\n          <input\n            type=\"number\"\n            value={testBankId}\n            name=\"tid\"\n            onChange={this.handleChange}\n            placeholder=\"Test ID\"\n          />\n          <label>Total Points</label>\n          <input\n            type=\"number\"\n            value={totalPoints}\n            name=\"totalPoints\"\n            onChange={this.handleChange}\n            placeholder=\"Total Points\"\n          />\n          <label>Passing Score</label>\n          <input\n            type=\"number\"\n            value={passingScore}\n            name=\"passingScore\"\n            onChange={this.handleChange}\n            placeholder=\"Passing Score\"\n          />\n          <input type=\"submit\" name=\"submit\" value=\"Submit\" />\n          <input type=\"reset\" name=\"reset\" value=\"Reset\" />\n        </form>\n      </main>\n    );\n  }\n}\n\nexport default withFirebase(CreateTestBank);\n","import React from 'react';\nimport '../../styles/components/Tests/TakeTest.css';\nimport { withFirebase } from '../Firebase';\nimport { withAuthentication } from '../Session';\nimport { compose } from 'recompose';\n\nclass TakeTest extends React.Component {\n  constructor(props) {\n    super(props);\n    const { state } = this.props.location;\n    this.state = {\n      uid: state.uid,\n      tid: state.tid,\n      questions: [],\n      test: null,\n      loading: true,\n      submittedAnswers: [],\n      currentQuestion: '',\n    };\n  }\n\n  componentDidMount() {\n    const { tid } = this.state;\n    const { firebase } = this.props;\n    firebase.host(tid).on('value', (snapshot) => {\n      this.setState({\n        test: snapshot.val(),\n        questions: Object.values(snapshot.val().questions),\n        currentQuestion: snapshot.val().currentQuestion,\n        loading: false,\n      });\n    });\n  }\n\n  handleSubmitAnswer = (e) => {\n    e.preventDefault();\n    const { firebase } = this.props;\n    const { tid, uid } = this.state;\n    firebase\n      .host(tid)\n      .child(`answersGiven/`)\n      .child(`${e.target.dataset.question}/`)\n      .child(`${uid}`)\n      .set(e.target.dataset.key);\n\n    const toggle = document.querySelector(`li[data-key=\"${e.target.id}\"]`);\n    toggle.classList.toggle('toggle');\n  };\n\n  render() {\n    const {\n      loading,\n      test,\n      questions,\n      tid,\n      instructorID,\n      url,\n      currentQuestion,\n    } = this.state;\n    const { firebase } = this.props;\n    return (\n      <main id=\"take-test\">\n        {loading && <div>Loading ...</div>}\n        {test && (\n          <section id=\"test\">\n            <h2>Test ID: {tid}</h2>\n            <article className=\"test-question\">\n              <ul id=\"questions\">\n                <li className=\"question\">\n                  {\n                    <p className=\"questionTitle\">\n                      Question #{questions[currentQuestion].questionNum}:{' '}\n                      {questions[currentQuestion].question}\n                    </p>\n                  }\n                </li>\n                {questions[currentQuestion].image &&\n                  firebase\n                    .images(instructorID)\n                    .child(`${questions[currentQuestion].image.substring(12)}`)\n                    .getDownloadURL()\n                    .then((url) => {\n                      this.setState({ url });\n                    })}\n                <br />\n                {questions[currentQuestion].image && (\n                  <img src={url} alt=\"question\" title=\"Image Question\" />\n                )}\n                <ol>\n                  {questions[currentQuestion].options.map((op) => (\n                    <li\n                      key={op}\n                      data-key={op}\n                      data-question={questions[currentQuestion].questionNum}\n                      className=\"option\"\n                      id={op}\n                      value={op}\n                      onClick={this.handleSubmitAnswer}\n                    >\n                      {op}\n                    </li>\n                  ))}\n                </ol>\n              </ul>\n            </article>\n          </section>\n        )}\n      </main>\n    );\n  }\n}\n\nexport default compose(\n  withAuthentication,\n  withFirebase,\n)(TakeTest);\n","import React from \"react\";\nimport TestList from \"./TestList\";\nimport { withFirebase } from \"../Firebase\";\nimport \"../../styles/components/Student/TakeTest.css\";\n\nconst TakeTest = () => (\n  <main id=\"taketest\">\n    <h2>Select A Test</h2>\n    <div className=\"select-test\">\n      <TestList />\n    </div>\n  </main>\n);\n\nexport default withFirebase(TakeTest);\n","import React from 'react';\nimport '../../styles/components/Tests/TestPage.css';\nimport { compose } from 'recompose';\nimport { withFirebase } from '../Firebase';\nimport { withAuthentication } from '../Session';\n\nclass TestPage extends React.Component {\n  constructor(props) {\n    super(props);\n    const { authUser, test } = this.props.location.state;\n    this.state = {\n      authUser: authUser,\n      test: test,\n      tid: test.tid,\n      questions: Object.values(test.questions),\n      loading: true,\n      url: '',\n      toggle: false,\n    };\n  }\n\n  componentWillMount = () => {\n    this.setState({ loading: false });\n  };\n\n  handleToggle = (e) => {\n    const toggle = document.querySelector(`li[data-key=${e.target.id}]`);\n    toggle.classList.toggle('toggle');\n  };\n\n  handleSubmitAnswer = (e) => {\n    const { firebase } = this.props;\n    const { tid, authUser } = this.state;\n    firebase\n      .host(tid)\n      .child(`answersGiven/`)\n      .child(`${e.target.dataset.question}/`)\n      .child(`${authUser.uid}`)\n      .set(e.target.dataset.key);\n\n    const toggle = document.querySelector(`li[data-key=\"${e.target.id}\"]`);\n    toggle.classList.toggle('toggle');\n  };\n\n  render() {\n    const { test, tid, loading, questions, authUser, url } = this.state;\n    const { firebase } = this.props;\n\n    return (\n      <main id=\"test-page\">\n        <h2>Test #{tid}</h2>\n        {loading && <div>Loading ...</div>}\n        {/* Checks if there is a tests object and prints the following JSX */}\n        {test && (\n          <div>\n            <ul>\n              <li>Possible Points: {test.totalPoints}</li>\n              <li>Passing Score: {test.passingScore}</li>\n              <li>Number of Questions: {test.questions.length - 1}</li>\n              <li>\n                Questions:\n                <ul id=\"questions\">\n                  {/* Iterates through the questions array, checks if there is an image associated with it, downloads the image and sets the url to the url state. */}\n                  {questions.map((question) => {\n                    question.image &&\n                      firebase\n                        .images(authUser.uid)\n                        .child(`${question.image.substring(12)}`)\n                        .getDownloadURL()\n                        .then((url) => {\n                          this.setState({ url });\n                        });\n                    /* Returns the question number, text, image (if there is one) and then iterates through the options which are clickable to submit answers. */\n                    return (\n                      <li className=\"question\" key={question.questionNum}>\n                        <p className=\"questionTitle\">\n                          Question #{question.questionNum}: {question.question}\n                        </p>\n                        <br />\n                        {question.image && (\n                          <img\n                            src={url}\n                            alt=\"question\"\n                            title=\"Image Question\"\n                          />\n                        )}\n                        <ol>\n                          {question.options.map((op) => (\n                            <li\n                              key={op}\n                              data-key={op}\n                              data-question={question.questionNum}\n                              className=\"option\"\n                              id={op}\n                              value={op}\n                              onClick={this.handleSubmitAnswer}\n                              // onMouseDown={this.handleToggle}\n                            >\n                              {op}\n                            </li>\n                          ))}\n                        </ol>\n                        Answer: {question.answer}\n                      </li>\n                    );\n                  })}\n                </ul>\n              </li>\n            </ul>\n          </div>\n        )}\n      </main>\n    );\n  }\n}\n\n// Wraps the component with the higher order component \"withFirebase\" to give the component access to the Firebase API.\nexport default compose(\n  withAuthentication,\n  withFirebase,\n)(TestPage);\n","import React from 'react';\nimport { Link } from 'react-router-dom';\nimport { compose } from 'recompose';\nimport { withAuthorization } from '../Session';\nimport { TestList } from '../Tests';\nimport * as ROLES from '../../constants/roles';\nimport * as ROUTES from '../../constants/routes';\nimport '../../styles/components/Instructor/InstructorPage.css';\n\nclass InstructorPage extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      authUser: JSON.parse(localStorage.getItem('authUser')).uid,\n    };\n  }\n\n  handleEndHostedTests = () => {\n    const { authUser } = this.state;\n    const { firebase } = this.props;\n    firebase.hosts(authUser).remove();\n  };\n\n  render() {\n    return (\n      <main id=\"instructor-page\">\n        <h2>Instructor</h2>\n        <p>\n          The Instructor Page is accessible by every signed in Instructor user.\n        </p>\n        <Link to={ROUTES.CREATE_TEST}>Create Test Bank</Link>\n        <br />\n        <Link to={ROUTES.NEW_QUESTION}>New Question</Link>\n\n        <TestList />\n        <input\n          type=\"button\"\n          value=\"End Hosted Tests\"\n          onClick={this.handleEndHostedTests}\n        />\n      </main>\n    );\n  }\n}\n\nconst condition = (authUser) =>\n  (authUser && authUser.roles.includes(ROLES.ADMIN)) ||\n  authUser.roles.includes(ROLES.INSTRUCTOR);\n\nexport default compose(withAuthorization(condition))(InstructorPage);\n","import React from 'react';\nimport { compose } from 'recompose';\nimport '../../styles/components/Student/StudentDashboard.css';\nimport { withAuthorization, withAuthentication } from '../Session';\nimport { withFirebase } from '../Firebase';\nimport * as ROLES from '../../constants/roles';\n\nclass StudentPage extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      tid: '',\n      uid: '',\n      authUser: JSON.parse(localStorage.getItem(`authUser`)),\n    };\n  }\n\n  componentWillMount() {\n    const { authUser } = this.state;\n    this.setState({ uid: authUser.uid });\n  }\n\n  handleStartTest = (e) => {\n    e.preventDefault();\n    const { tid, uid } = this.state;\n    const { history } = this.props;\n    history.push({\n      pathname: `tests/s/${tid}`,\n      state: { tid, uid },\n    });\n  };\n\n  handleOnChange = (e) => {\n    this.setState({ [e.target.name]: e.target.value });\n  };\n\n  render() {\n    const { tid } = this.state;\n    return (\n      <main id=\"student\">\n        <h2>Student</h2>\n        <h3>Take a Test</h3>\n        <form onSubmit={this.handleStartTest}>\n          <label>\n            Enter the given Test ID number\n            <input\n              type=\"text\"\n              name=\"tid\"\n              value={tid}\n              onChange={this.handleOnChange}\n              placeholder=\"Test ID\"\n            />\n          </label>\n          <input type=\"submit\" value=\"Submit\" name=\"submit\" />\n        </form>\n      </main>\n    );\n  }\n}\n\nconst condition = (authUser) =>\n  (authUser && authUser.roles.includes(ROLES.ADMIN)) ||\n  authUser.roles.includes(ROLES.INSTRUCTOR) ||\n  authUser.roles.includes(ROLES.STUDENT);\n\nexport default compose(\n  withAuthorization(condition),\n  withAuthentication,\n  withFirebase,\n)(StudentPage);\n","import React from 'react';\nimport '../../styles/components/Questions/NewQuestion.css';\nimport { withFirebase } from '../Firebase';\nimport { isNullOrUndefined } from 'util';\n\nclass NewQuestion extends React.Component {\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      tid: '',\n      reference1: '',\n      reference2: '',\n      question: '',\n      questionNum: '',\n      op1: '',\n      op2: '',\n      op3: '',\n      op4: '',\n      op5: '',\n      op6: '',\n      op7: '',\n      op8: '',\n      op9: '',\n      op10: '',\n      options: [],\n      answer: '',\n      user: '',\n      image: '',\n    };\n  }\n\n  componentDidMount() {\n    this.fetchUser();\n  }\n\n  fetchUser = () => {\n    const { firebase } = this.props;\n    firebase.auth.onAuthStateChanged((user) => {\n      if (user) {\n        this.setState({ user, error: null });\n      }\n    });\n  };\n\n  handleOnSubmit = (e) => {\n    const { firebase } = this.props;\n    const {\n      op1,\n      op2,\n      op3,\n      op4,\n      op5,\n      op6,\n      op7,\n      op8,\n      op9,\n      op10,\n      options,\n      tid,\n      reference1,\n      reference2,\n      question,\n      questionNum,\n      answer,\n      user,\n      image,\n    } = this.state;\n    e.preventDefault();\n\n    if (op1) {\n      options.push(op1);\n    }\n    if (op2) {\n      options.push(op2);\n    }\n    if (op3) {\n      options.push(op3);\n    }\n    if (op4) {\n      options.push(op4);\n    }\n    if (op5) {\n      options.push(op5);\n    }\n    if (op6) {\n      options.push(op6);\n    }\n    if (op7) {\n      options.push(op7);\n    }\n    if (op8) {\n      options.push(op8);\n    }\n    if (op9) {\n      options.push(op9);\n    }\n    if (op10) {\n      options.push(op10);\n    }\n    if (e.target.upLoadImage === isNullOrUndefined) {\n      const file = e.target.uploadImage.files[0];\n      const fileName = file.name;\n      firebase\n        .image(user.uid, fileName)\n        .put(file)\n        .then((snapshot) => {\n          console.log(snapshot);\n        });\n    }\n\n    const addQuestion = {\n      reference1: reference1,\n      reference2: reference2,\n      question: question,\n      questionNum: questionNum,\n      options: options,\n      answer: answer,\n      image: image,\n    };\n\n    firebase\n      .test(tid)\n      .child('questions/')\n      .child(questionNum)\n      .set(addQuestion);\n\n    this.setState({\n      reference1: '',\n      reference2: '',\n      question: '',\n      questionNum: '',\n      op1: '',\n      op2: '',\n      op3: '',\n      op4: '',\n      op5: '',\n      op6: '',\n      op7: '',\n      op8: '',\n      op9: '',\n      op10: '',\n      answer: '',\n      options: [],\n      image: '',\n    });\n  };\n\n  handleChange = (e) => {\n    this.setState({\n      [e.target.name]: e.target.value,\n    });\n  };\n\n  render() {\n    const {\n      testBankId,\n      reference1,\n      reference2,\n      questionNum,\n      question,\n      op1,\n      op2,\n      op3,\n      op4,\n      op5,\n      op6,\n      op7,\n      op8,\n      op9,\n      op10,\n      answer,\n    } = this.state;\n    return (\n      <main id=\"new-question\">\n        <h2>Create Questions</h2>\n        <form id=\"newQuestion\" onSubmit={this.handleOnSubmit}>\n          <label>Test Bank ID Number</label>\n          <input\n            type=\"text\"\n            value={testBankId}\n            name=\"tid\"\n            onChange={this.handleChange}\n            placeholder=\"Test Bank ID\"\n          />\n          <label>Reference 1</label>\n          <input\n            type=\"text\"\n            value={reference1}\n            name=\"reference1\"\n            onChange={this.handleChange}\n            placeholder=\"Reference 1\"\n          />\n          <label>Reference 2</label>\n          <input\n            type=\"text\"\n            value={reference2}\n            name=\"reference2\"\n            onChange={this.handleChange}\n            placeholder=\"Reference 2\"\n          />\n          <label>Question Number and Content</label>\n          <input\n            type=\"number\"\n            value={questionNum}\n            name=\"questionNum\"\n            onChange={this.handleChange}\n            placeholder=\"Question Number\"\n          />\n          <input\n            type=\"text\"\n            value={question}\n            name=\"question\"\n            onChange={this.handleChange}\n            placeholder=\"Question Text\"\n          />\n          <input\n            accept=\".jpg,.png\"\n            type=\"file\"\n            id=\"uploadImage\"\n            name=\"image\"\n            onChange={this.handleChange}\n          />\n          <label>Option A</label>\n          <input\n            type=\"text\"\n            value={op1}\n            name=\"op1\"\n            onChange={this.handleChange}\n            placeholder=\"Option A\"\n          />\n          <label>Option B</label>\n          <input\n            type=\"text\"\n            value={op2}\n            name=\"op2\"\n            onChange={this.handleChange}\n            placeholder=\"Option B\"\n          />\n          <label>Option C</label>\n          <input\n            type=\"text\"\n            value={op3}\n            name=\"op3\"\n            onChange={this.handleChange}\n            placeholder=\"Option C\"\n          />\n          <label>Option D</label>\n          <input\n            type=\"text\"\n            value={op4}\n            name=\"op4\"\n            onChange={this.handleChange}\n            placeholder=\"Option D\"\n          />\n          <label>Option E</label>\n          <input\n            type=\"text\"\n            value={op5}\n            name=\"op5\"\n            onChange={this.handleChange}\n            placeholder=\"Option E\"\n          />\n          <label>Option F</label>\n          <input\n            type=\"text\"\n            value={op6}\n            name=\"op6\"\n            onChange={this.handleChange}\n            placeholder=\"Option F\"\n          />\n          <label>Option G</label>\n          <input\n            type=\"text\"\n            value={op7}\n            name=\"op7\"\n            onChange={this.handleChange}\n            placeholder=\"Option G\"\n          />\n          <label>Option H</label>\n          <input\n            type=\"text\"\n            value={op8}\n            name=\"op8\"\n            onChange={this.handleChange}\n            placeholder=\"Option H\"\n          />\n          <label>Option I</label>\n          <input\n            type=\"text\"\n            value={op9}\n            name=\"op9\"\n            onChange={this.handleChange}\n            placeholder=\"Option I\"\n          />\n          <label>Option J</label>\n          <input\n            type=\"text\"\n            value={op10}\n            name=\"op10\"\n            onChange={this.handleChange}\n            placeholder=\"Option J\"\n          />\n\n          <label>Correct Answer</label>\n          <input\n            type=\"text\"\n            value={answer}\n            name=\"answer\"\n            onChange={this.handleChange}\n            placeholder=\"Correct Answer\"\n          />\n\n          <input type=\"submit\" name=\"submit\" value=\"Submit\" />\n          <input type=\"reset\" name=\"reset\" value=\"Reset\" />\n        </form>\n      </main>\n    );\n  }\n}\n\nexport default withFirebase(NewQuestion);\n","import React from 'react';\nimport { BrowserRouter as Router, Route, Switch } from 'react-router-dom';\n\nimport Navigation from '../Navigation';\nimport SignUpPage from '../SignUp';\nimport SignInPage from '../SignIn';\nimport PasswordForgetPage from '../PasswordForget';\nimport HomePage from '../Home';\nimport AccountPage from '../Account';\nimport AdminPage from '../Admin';\nimport InstructorPage from '../Instructor';\nimport StudentPage from '../Student';\nimport { CreateTestBank, TakeTest, SelectTest, TestPage } from '../Tests';\nimport { NewQuestion } from '../Questions';\n\nimport * as ROUTES from '../../constants/routes';\nimport { withAuthentication } from '../Session';\nimport '../../styles/base/App.css';\nimport { UserItem } from '../Users';\n\nconst App = () => (\n  <Router>\n    <div>\n      <Navigation />\n      <Switch>\n        <Route exact path={ROUTES.HOME} component={HomePage} />\n        <Route exact path={ROUTES.SIGN_UP} component={SignUpPage} />\n        <Route exact path={ROUTES.SIGN_IN} component={SignInPage} />\n        <Route\n          exact\n          path={ROUTES.PASSWORD_FORGET}\n          component={PasswordForgetPage}\n        />\n        <Route exact path={ROUTES.ACCOUNT} component={AccountPage} />\n        <Route exact path={ROUTES.ADMIN} component={AdminPage} />\n        <Route exact path={ROUTES.ADMIN_DETAILS} component={UserItem} />\n        <Route exact path={ROUTES.INSTRUCTOR} component={InstructorPage} />\n        <Route exact path={ROUTES.STUDENT} component={StudentPage} />\n        <Route exact path={ROUTES.CREATE_TEST} component={CreateTestBank} />\n        <Route exact path={ROUTES.NEW_QUESTION} component={NewQuestion} />\n        <Route exact path={ROUTES.SELECT_TEST} component={SelectTest} />\n        <Route exact path={ROUTES.TEST_VIEW} component={TestPage} />\n        <Route exact path={ROUTES.TAKE_TEST} component={TakeTest} />\n      </Switch>\n    </div>\n  </Router>\n);\n\nexport default withAuthentication(App);\n","import React from 'react';\nimport ReactDOM from 'react-dom';\n\nimport './styles/base/index.css';\nimport './styles/base/settings.css';\nimport * as serviceWorker from './serviceWorker';\n\nimport App from './components/App';\nimport Firebase, { FirebaseContext } from './components/Firebase';\n\nReactDOM.render(\n  <FirebaseContext.Provider value={new Firebase()}>\n    <App />\n  </FirebaseContext.Provider>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: http://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}