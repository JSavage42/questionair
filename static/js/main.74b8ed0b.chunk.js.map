{"version":3,"sources":["images/logo.svg","serviceWorker.js","components/Session/context.js","components/Firebase/context.js","components/Firebase/firebase.js","components/Firebase/index.js","components/Session/withAuthentication.js","constants/routes.js","components/Session/withAuthorization.js","components/SignOut/index.js","components/Navigation/index.js","constants/roles.js","components/SignUp/index.js","components/PasswordForget/index.js","components/SignIn/index.js","components/Home/index.js","components/PasswordChange/index.js","components/Account/index.js","components/Users/UserList.js","components/Users/UserItem.js","components/Admin/index.js","components/Tests/TestList.js","components/Tests/CreateTestBank.js","components/Tests/TakeTest.js","components/Tests/SelectTest.js","components/Tests/TestPage.js","components/Instructor/index.js","components/Student/index.js","components/Questions/NewQuestion.js","components/App/index.js","index.js"],"names":["module","exports","__webpack_require__","p","Boolean","window","location","hostname","match","AuthUserContext","React","createContext","FirebaseContext","withFirebase","Component","props","react_default","a","createElement","Consumer","firebase","Object","assign","config","apiKey","process","authDomain","databaseURL","projectId","storageBucket","messagingSenderId","Firebase","_this","this","classCallCheck","doCreateUserWithEmailAndPassword","email","password","auth","createUserWithEmailAndPassword","doSignInWithEmailAndPassword","signInWithEmailAndPassword","doSignInWithGoogle","signInWithPopup","googleProvider","doSignInWithFacebook","facebookProvider","doSignInWithTwitter","twitterProvider","doSignOut","signOut","doPasswordReset","sendPasswordResetEmail","doSendEmailVerification","currentUser","sendEmailVerification","url","REACT_APP_CONFIRMATION_EMAIL_REDIRECT","doPasswordUpdate","updatePassword","onAuthUserListener","next","fallback","onAuthStateChanged","authUser","user","uid","once","then","snapshot","dbUser","val","roles","objectSpread","emailVerified","providerData","db","ref","concat","users","test","tid","tests","image","fileName","storage","images","host","hosts","app","initializeApp","serverValue","database","ServerValue","emailAuthProvider","EmailAuthProvider","GoogleAuthProvider","FacebookAuthProvider","TwitterAuthProvider","withAuthentication","WithAuthentication","_React$Component","possibleConstructorReturn","getPrototypeOf","call","state","JSON","parse","localStorage","getItem","inherits","createClass","key","value","_this2","listener","setItem","stringify","setState","removeItem","context","Provider","HOME","withAuthorization","condition","WithAuthorization","apply","arguments","history","push","compose","withRouter","_ref","type","onClick","NavigationAuth","src","logo","alt","title","Link","to","ROUTES","includes","SignOut","NavigationNonAuth","Navigation","Navigation_NavigationAuth","Navigation_NavigationNonAuth","INITIAL_STATE","username","passwordOne","passwordTwo","requestAdmin","requestInstructor","error","ERROR_CODE_ACCOUNT_EXISTS","ERROR_MSG_ACCOUNT_EXISTS","SignUpFormBase","onSubmit","event","_this$state","requests","set","catch","code","message","preventDefault","onChange","defineProperty","target","name","onChangeCheckbox","checked","_this$state2","isInvalid","placeholder","disabled","SignUpLink","SignUpForm","SignUpPage","PasswordForgetFormBase","PasswordForgetLink","PasswordForgetPage","PasswordForgetForm","SignInFormBase","SignInGoogleBase","socialAuthUser","displayName","SignInFacebookBase","_this3","additionalUserInfo","profile","SignInTwitterBase","_this4","SignInForm","SignInGoogle","SignInFacebook","SignInTwitter","SignInPage","PasswordForget_PasswordForgetLink","SignUp_SignUpLink","HomePage","on","off","id","PasswordChangeForm","SIGN_IN_METHODS","provider","LoginManagementBase","fetchSignInMethods","fetchSignInMethodsForEmail","activeSignInMethods","onSocialLoginLink","linkWithPopup","onDefaultLoginLink","credential","linkAndRetrieveDataWithCredential","onUnlink","providerId","unlink","map","signInMethod","onlyOneLeft","length","isEnabled","Account_DefaultLoginToggle","onLink","Account_SocialLoginToggle","SocialLoginToggle","DefaultLoginToggle","_this$props","LoginManagement","PasswordChange","UserList","loading","usersObject","usersList","keys","role","pathname","UserItem","onSendPasswordResetEmail","handleRequestApproval","e","child","handleRoleRemoval","remove","console","log","params","req","components_Users_UserList","TestList","handleOnChange","handleHostTest","questions","values","testsObject","testsList","CreateTestBank","fetchUser","handleOnSubmit","testBankMeta","totalPoints","passingScore","handleChange","testBankId","TakeTest","handleSubmitAnswer","instructorID","submittedAnswers","className","question","substring","getDownloadURL","questionNum","options","op","components_Tests_TestList","TestPage","answer","InstructorPage","handleEndHostedTests","StudentPage","handleStartTest","NewQuestion","op1","op2","op3","op4","op5","op6","op7","op8","op9","op10","upLoadImage","isNullOrUndefined","file","uploadImage","files","put","reference1","reference2","accept","BrowserRouter","src_components_Navigation","Switch","Route","exact","path","component","AccountPage","AdminPage","SelectTest","ReactDOM","render","Firebase_context","components_App","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.74b8ed0b.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/logo.11ad7f58.svg\";","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read http://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit http://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See http://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\n\nconst AuthUserContext = React.createContext(null);\n\nexport default AuthUserContext;\n","import React from 'react';\n\nconst FirebaseContext = React.createContext(null);\n\nexport const withFirebase = Component => props => (\n  <FirebaseContext.Consumer>{firebase => <Component {...props} firebase={firebase} />}</FirebaseContext.Consumer>\n);\n\nexport default FirebaseContext;\n","import app from 'firebase/app';\nimport 'firebase/auth';\nimport 'firebase/database';\nimport 'firebase/storage';\n\nconst config = {\n  apiKey: process.env.REACT_APP_API_KEY,\n  authDomain: process.env.REACT_APP_AUTH_DOMAIN,\n  databaseURL: process.env.REACT_APP_DATABASE_URL,\n  projectId: process.env.REACT_APP_PROJECT_ID,\n  storageBucket: process.env.REACT_APP_STORAGE_BUCKET,\n  messagingSenderId: process.env.REACT_APP_MESSAGING_SENDER_ID,\n};\n\nclass Firebase {\n  constructor() {\n    app.initializeApp(config);\n\n    /* Helper */\n\n    this.serverValue = app.database.ServerValue;\n    this.emailAuthProvider = app.auth.EmailAuthProvider;\n\n    /* Firebase APIs */\n\n    this.auth = app.auth();\n    this.db = app.database();\n    this.storage = app.storage();\n\n    /* Social Sign In Method Provider */\n\n    this.googleProvider = new app.auth.GoogleAuthProvider();\n    this.facebookProvider = new app.auth.FacebookAuthProvider();\n    this.twitterProvider = new app.auth.TwitterAuthProvider();\n  }\n\n  // *** Auth API ***\n\n  doCreateUserWithEmailAndPassword = (email, password) =>\n    this.auth.createUserWithEmailAndPassword(email, password);\n\n  doSignInWithEmailAndPassword = (email, password) =>\n    this.auth.signInWithEmailAndPassword(email, password);\n\n  doSignInWithGoogle = () => this.auth.signInWithPopup(this.googleProvider);\n\n  doSignInWithFacebook = () => this.auth.signInWithPopup(this.facebookProvider);\n\n  doSignInWithTwitter = () => this.auth.signInWithPopup(this.twitterProvider);\n\n  doSignOut = () => this.auth.signOut();\n\n  doPasswordReset = (email) => this.auth.sendPasswordResetEmail(email);\n\n  doSendEmailVerification = () =>\n    this.auth.currentUser.sendEmailVerification({\n      url: process.env.REACT_APP_CONFIRMATION_EMAIL_REDIRECT,\n    });\n\n  doPasswordUpdate = (password) =>\n    this.auth.currentUser.updatePassword(password);\n\n  // *** Merge Auth and DB User API *** //\n\n  onAuthUserListener = (next, fallback) =>\n    this.auth.onAuthStateChanged((authUser) => {\n      if (authUser) {\n        this.user(authUser.uid)\n          .once('value')\n          .then((snapshot) => {\n            const dbUser = snapshot.val();\n\n            // default empty roles\n            if (!dbUser.roles) {\n              dbUser.roles = [];\n            }\n\n            // merge auth and db user\n            authUser = {\n              uid: authUser.uid,\n              email: authUser.email,\n              emailVerified: authUser.emailVerified,\n              providerData: authUser.providerData,\n              ...dbUser,\n            };\n\n            next(authUser);\n          });\n      } else {\n        fallback();\n      }\n    });\n\n  // *** User API ***\n\n  user = (uid) => this.db.ref(`users/${uid}`);\n\n  users = () => this.db.ref(`users`);\n\n  // *** Tests Banks API ***\n\n  test = (uid, tid) => this.db.ref(`users/${uid}/tests/${tid}`);\n\n  tests = (uid) => this.db.ref(`users/${uid}/tests`);\n\n  // *** Question Image API ***\n  image = (uid, fileName) => this.storage.ref(`${uid}/images/${fileName}`);\n\n  images = (uid) => this.storage.ref(`${uid}/images`);\n\n  // *** Host API ***\n\n  host = (uid, tid) => this.db.ref(`users/${uid}/host/${tid}`);\n\n  hosts = (uid) => this.db.ref(`users/${uid}/host`);\n}\n\nexport default Firebase;\n","import FirebaseContext, { withFirebase } from './context';\nimport Firebase from './firebase';\n\nexport default Firebase;\n\nexport { FirebaseContext, withFirebase };\n","import React from 'react';\n\nimport AuthUserContext from './context';\nimport { withFirebase } from '../Firebase';\n\nconst withAuthentication = Component => {\n  class WithAuthentication extends React.Component {\n    constructor(props) {\n      super(props);\n\n      this.state = {\n        authUser: JSON.parse(localStorage.getItem('authUser')),\n      };\n    }\n\n    componentDidMount() {\n      this.listener = this.props.firebase.onAuthUserListener(\n        authUser => {\n          localStorage.setItem('authUser', JSON.stringify(authUser));\n          this.setState({ authUser });\n        },\n        () => {\n          localStorage.removeItem('authUser');\n          this.setState({ authUser: null });\n        }\n      );\n    }\n\n    componentWillUnmount() {\n      this.listener();\n    }\n\n    render() {\n      return (\n        <AuthUserContext.Provider value={this.state.authUser}>\n          <Component {...this.props} />\n        </AuthUserContext.Provider>\n      );\n    }\n  }\n\n  return withFirebase(WithAuthentication);\n};\n\nexport default withAuthentication;\n","export const HOME = '/';\nexport const SIGN_UP = '/signup';\nexport const SIGN_IN = '/signin';\nexport const ACCOUNT = '/account';\nexport const PASSWORD_FORGET = '/pw-forget';\nexport const ADMIN = '/admin';\nexport const ADMIN_DETAILS = '/admin/:id';\nexport const INSTRUCTOR = '/instructor';\nexport const STUDENT = '/student';\nexport const TESTS = '/tests';\nexport const CREATE_TEST = '/tests/create';\nexport const NEW_QUESTION = '/tests/new_question';\nexport const SELECT_TEST = '/tests/select';\nexport const TAKE_TEST = '/tests/s/:id/:tid';\nexport const HOST_TEST = '/tests/i/:id/:tid';\n","import React from 'react';\nimport { withRouter } from 'react-router-dom';\nimport { compose } from 'recompose';\n\nimport AuthUserContext from './context';\nimport { withFirebase } from '../Firebase';\nimport * as ROUTES from '../../constants/routes';\n\nconst withAuthorization = condition => Component => {\n  class WithAuthorization extends React.Component {\n    componentDidMount() {\n      this.listener = this.props.firebase.onAuthUserListener(\n        authUser => {\n          if (!condition(authUser)) {\n            this.props.history.push(ROUTES.SIGN_IN);\n          }\n        },\n        () => this.props.history.push(ROUTES.SIGN_IN)\n      );\n    }\n\n    componentWillUnmount() {\n      this.listener();\n    }\n\n    render() {\n      return (\n        <AuthUserContext.Consumer>\n          {authUser => (condition(authUser) ? <Component {...this.props} /> : null)}\n        </AuthUserContext.Consumer>\n      );\n    }\n  }\n\n  return compose(\n    withRouter,\n    withFirebase\n  )(WithAuthorization);\n};\n\nexport default withAuthorization;\n","import React from \"react\";\nimport { withFirebase } from \"../Firebase\";\n\nconst SignOutButton = ({ firebase }) => (\n  <button type=\"button\" onClick={firebase.doSignOut}>\n    Sign Out\n  </button>\n);\n\nexport default withFirebase(SignOutButton);\n","import React from 'react';\nimport { Link } from 'react-router-dom';\n\nimport { AuthUserContext } from '../Session';\nimport SignOutButton from '../SignOut';\nimport * as ROUTES from '../../constants/routes';\nimport * as ROLES from '../../constants/roles';\nimport '../../styles/components/Navigation.css';\nimport logo from '../../images/logo.svg';\n\nconst Navigation = () => (\n  <AuthUserContext.Consumer>\n    {authUser =>\n      authUser ? <NavigationAuth authUser={authUser} /> : <NavigationNonAuth />\n    }\n  </AuthUserContext.Consumer>\n);\n\nconst NavigationAuth = ({ authUser }) => (\n  <header>\n    <img src={logo} alt='Question Air' title='Question Air' />\n    <nav>\n      <ul>\n        <li>\n          <Link to={ROUTES.HOME}>Home</Link>\n        </li>\n        <li>\n          <Link to={ROUTES.ACCOUNT}>Account</Link>\n        </li>\n        <li>\n          <Link to={ROUTES.STUDENT}>Student</Link>\n        </li>\n        {(authUser.roles.includes(ROLES.ADMIN) ||\n          authUser.roles.includes(ROLES.INSTRUCTOR)) && (\n          <li>\n            <Link to={ROUTES.INSTRUCTOR}>Instructor</Link>\n          </li>\n        )}\n        {authUser.roles.includes(ROLES.ADMIN) && (\n          <li>\n            <Link to={ROUTES.ADMIN}>Admin</Link>\n          </li>\n        )}\n      </ul>\n      <SignOutButton />\n    </nav>\n  </header>\n);\n\nconst NavigationNonAuth = () => (\n  <header>\n    <h1>Question Air</h1>\n    <nav>\n      <ul>\n        <li>\n          <Link to={ROUTES.SIGN_IN}>Sign In</Link>\n        </li>\n      </ul>\n    </nav>\n  </header>\n);\n\nexport default Navigation;\n","export const ADMIN = \"ADMIN\";\nexport const INSTRUCTOR = \"INSTRUCTOR\";\nexport const STUDENT = \"STUDENT\";\n","import React, { Component } from 'react';\nimport { Link, withRouter } from 'react-router-dom';\n\nimport { withFirebase } from '../Firebase';\nimport * as ROUTES from '../../constants/routes';\n\nconst SignUpPage = () => (\n  <div>\n    <h1>SignUp</h1>\n    <SignUpForm />\n  </div>\n);\n\nconst INITIAL_STATE = {\n  username: '',\n  email: '',\n  passwordOne: '',\n  passwordTwo: '',\n  requestAdmin: false,\n  requestInstructor: false,\n  error: null,\n};\n\nconst ERROR_CODE_ACCOUNT_EXISTS = 'auth/email-already-in-use';\n\nconst ERROR_MSG_ACCOUNT_EXISTS = `\n  An account with this E-Mail address already exists.\n  Try to login with this account instead. If you think the\n  account is already used from one of the social logins, try\n  to sign in with one of them. Afterward, associate your accounts\n  on your personal account page.\n`;\n\nclass SignUpFormBase extends Component {\n  constructor(props) {\n    super(props);\n\n    this.state = { ...INITIAL_STATE };\n  }\n\n  onSubmit = (event) => {\n    const {\n      username,\n      email,\n      passwordOne,\n      requestAdmin,\n      requestInstructor,\n    } = this.state;\n    const requests = [];\n    if (requestAdmin) {\n      requests.push('admin');\n    }\n    if (requestInstructor) {\n      requests.push('instructor');\n    }\n\n    this.props.firebase\n      .doCreateUserWithEmailAndPassword(email, passwordOne)\n      .then((authUser) => {\n        // Create a user in your Firebase real time database\n        return this.props.firebase.user(authUser.user.uid).set({\n          username,\n          email,\n          requests,\n        });\n      })\n      .then(() => {\n        return this.props.firebase.doSendEmailVerification();\n      })\n      .then(() => {\n        this.setState({ ...INITIAL_STATE });\n        this.props.history.push(ROUTES.HOME);\n      })\n      .catch((error) => {\n        if (error.code === ERROR_CODE_ACCOUNT_EXISTS) {\n          error.message = ERROR_MSG_ACCOUNT_EXISTS;\n        }\n\n        this.setState({ error });\n      });\n\n    event.preventDefault();\n  };\n\n  onChange = (event) => {\n    this.setState({ [event.target.name]: event.target.value });\n  };\n\n  onChangeCheckbox = (event) => {\n    this.setState({ [event.target.name]: event.target.checked });\n  };\n\n  render() {\n    const {\n      username,\n      email,\n      passwordOne,\n      passwordTwo,\n      error,\n      requestInstructor,\n      requestAdmin,\n    } = this.state;\n\n    const isInvalid =\n      passwordOne !== passwordTwo ||\n      passwordOne === '' ||\n      email === '' ||\n      username === '';\n\n    return (\n      <form onSubmit={this.onSubmit}>\n        <input\n          name=\"username\"\n          value={username}\n          onChange={this.onChange}\n          type=\"text\"\n          placeholder=\"Full Name\"\n        />\n        <input\n          name=\"email\"\n          value={email}\n          onChange={this.onChange}\n          type=\"text\"\n          placeholder=\"Email Address\"\n        />\n        <input\n          name=\"passwordOne\"\n          value={passwordOne}\n          onChange={this.onChange}\n          type=\"password\"\n          placeholder=\"Password\"\n        />\n        <input\n          name=\"passwordTwo\"\n          value={passwordTwo}\n          onChange={this.onChange}\n          type=\"password\"\n          placeholder=\"Confirm Password\"\n        />\n        <label>\n          Request Admin:\n          <input\n            name=\"requestAdmin\"\n            type=\"checkbox\"\n            checked={requestAdmin}\n            onChange={this.onChangeCheckbox}\n          />\n        </label>\n        <label>\n          Request Instructor:\n          <input\n            name=\"requestInstructor\"\n            type=\"checkbox\"\n            checked={requestInstructor}\n            onChange={this.onChangeCheckbox}\n          />\n        </label>\n        <button disabled={isInvalid} type=\"submit\">\n          Sign Up\n        </button>\n\n        {error && <p>{error.message}</p>}\n      </form>\n    );\n  }\n}\n\nconst SignUpLink = () => (\n  <p>\n    Don't have an account? <Link to={ROUTES.SIGN_UP}>Sign Up</Link>\n  </p>\n);\n\nconst SignUpForm = withRouter(withFirebase(SignUpFormBase));\n\nexport default SignUpPage;\n\nexport { SignUpForm, SignUpLink };\n","import React, { Component } from 'react';\nimport { Link } from 'react-router-dom';\n\nimport { withFirebase } from '../Firebase';\nimport * as ROUTES from '../../constants/routes';\n\nconst PasswordForgetPage = () => (\n  <div>\n    <h1>PasswordForget</h1>\n    <PasswordForgetForm />\n  </div>\n);\n\nconst INITIAL_STATE = {\n  email: '',\n  error: null,\n};\n\nclass PasswordForgetFormBase extends Component {\n  constructor(props) {\n    super(props);\n\n    this.state = { ...INITIAL_STATE };\n  }\n\n  onSubmit = event => {\n    const { email } = this.state;\n\n    this.props.firebase\n      .doPasswordReset(email)\n      .then(() => {\n        this.setState({ ...INITIAL_STATE });\n      })\n      .catch(error => {\n        this.setState({ error });\n      });\n\n    event.preventDefault();\n  };\n\n  onChange = event => {\n    this.setState({ [event.target.name]: event.target.value });\n  };\n\n  render() {\n    const { email, error } = this.state;\n\n    const isInvalid = email === '';\n\n    return (\n      <form onSubmit={this.onSubmit}>\n        <input name='email' value={this.state.email} onChange={this.onChange} type='text' placeholder='Email Address' />\n        <button disabled={isInvalid} type='submit'>\n          Reset My Password\n        </button>\n\n        {error && <p>{error.message}</p>}\n      </form>\n    );\n  }\n}\n\nconst PasswordForgetLink = () => (\n  <p>\n    <Link to={ROUTES.PASSWORD_FORGET}>Forgot Password?</Link>\n  </p>\n);\n\nexport default PasswordForgetPage;\n\nconst PasswordForgetForm = withFirebase(PasswordForgetFormBase);\n\nexport { PasswordForgetForm, PasswordForgetLink };\n","import React, { Component } from 'react';\nimport { withRouter } from 'react-router-dom';\nimport { compose } from 'recompose';\n\nimport { SignUpLink } from '../SignUp';\nimport { PasswordForgetLink } from '../PasswordForget';\nimport { withFirebase } from '../Firebase';\nimport * as ROUTES from '../../constants/routes';\n\nconst SignInPage = () => (\n  <div>\n    <h1>SignIn</h1>\n    <SignInForm />\n    <SignInGoogle />\n    <SignInFacebook />\n    <SignInTwitter />\n    <PasswordForgetLink />\n    <SignUpLink />\n  </div>\n);\n\nconst INITIAL_STATE = {\n  email: '',\n  password: '',\n  error: null,\n};\n\nconst ERROR_CODE_ACCOUNT_EXISTS = 'auth/account-exists-with-different-credential';\n\nconst ERROR_MSG_ACCOUNT_EXISTS = `\n  An account with an E-Mail address to\n  this social account already exists. Try to login from\n  this account instead and associate your social accounts on\n  your personal account page.\n`;\n\nclass SignInFormBase extends Component {\n  constructor(props) {\n    super(props);\n\n    this.state = { ...INITIAL_STATE };\n  }\n\n  onSubmit = event => {\n    const { email, password } = this.state;\n\n    this.props.firebase\n      .doSignInWithEmailAndPassword(email, password)\n      .then(() => {\n        this.setState({ ...INITIAL_STATE });\n        this.props.history.push(ROUTES.HOME);\n      })\n      .catch(error => {\n        this.setState({ error });\n      });\n\n    event.preventDefault();\n  };\n\n  onChange = event => {\n    this.setState({ [event.target.name]: event.target.value });\n  };\n\n  render() {\n    const { email, password, error } = this.state;\n\n    const isInvalid = password === '' || email === '';\n\n    return (\n      <form onSubmit={this.onSubmit}>\n        <input name='email' value={email} onChange={this.onChange} type='text' placeholder='Email Address' />\n        <input name='password' value={password} onChange={this.onChange} type='password' placeholder='Password' />\n        <button disabled={isInvalid} type='submit'>\n          Sign In\n        </button>\n\n        {error && <p>{error.message}</p>}\n      </form>\n    );\n  }\n}\n\nclass SignInGoogleBase extends Component {\n  constructor(props) {\n    super(props);\n\n    this.state = { error: null };\n  }\n\n  onSubmit = event => {\n    this.props.firebase\n      .doSignInWithGoogle()\n      .then(socialAuthUser => {\n        // Create a user in your Firebase Realtime Database too\n        return this.props.firebase.user(socialAuthUser.user.uid).set({\n          username: socialAuthUser.user.displayName,\n          email: socialAuthUser.user.email,\n          roles: [],\n        });\n      })\n      .then(() => {\n        this.setState({ error: null });\n        this.props.history.push(ROUTES.HOME);\n      })\n      .catch(error => {\n        if (error.code === ERROR_CODE_ACCOUNT_EXISTS) {\n          error.message = ERROR_MSG_ACCOUNT_EXISTS;\n        }\n\n        this.setState({ error });\n      });\n\n    event.preventDefault();\n  };\n\n  render() {\n    const { error } = this.state;\n\n    return (\n      <form onSubmit={this.onSubmit}>\n        <button type='submit'>Sign In with Google</button>\n\n        {error && <p>{error.message}</p>}\n      </form>\n    );\n  }\n}\n\nclass SignInFacebookBase extends Component {\n  constructor(props) {\n    super(props);\n\n    this.state = { error: null };\n  }\n\n  onSubmit = event => {\n    this.props.firebase\n      .doSignInWithFacebook()\n      .then(socialAuthUser => {\n        // Create a user in your Firebase Realtime Database too\n        return this.props.firebase.user(socialAuthUser.user.uid).set({\n          username: socialAuthUser.additionalUserInfo.profile.name,\n          email: socialAuthUser.additionalUserInfo.profile.email,\n          roles: [],\n        });\n      })\n      .then(() => {\n        this.setState({ error: null });\n        this.props.history.push(ROUTES.HOME);\n      })\n      .catch(error => {\n        if (error.code === ERROR_CODE_ACCOUNT_EXISTS) {\n          error.message = ERROR_MSG_ACCOUNT_EXISTS;\n        }\n\n        this.setState({ error });\n      });\n\n    event.preventDefault();\n  };\n\n  render() {\n    const { error } = this.state;\n\n    return (\n      <form onSubmit={this.onSubmit}>\n        <button type='submit'>Sign In with Facebook</button>\n\n        {error && <p>{error.message}</p>}\n      </form>\n    );\n  }\n}\n\nclass SignInTwitterBase extends Component {\n  constructor(props) {\n    super(props);\n\n    this.state = { error: null };\n  }\n\n  onSubmit = event => {\n    this.props.firebase\n      .doSignInWithTwitter()\n      .then(socialAuthUser => {\n        // Create a user in your Firebase Realtime Database too\n        return this.props.firebase.user(socialAuthUser.user.uid).set({\n          username: socialAuthUser.additionalUserInfo.profile.name,\n          email: socialAuthUser.additionalUserInfo.profile.email,\n          roles: [],\n        });\n      })\n      .then(() => {\n        this.setState({ error: null });\n        this.props.history.push(ROUTES.HOME);\n      })\n      .catch(error => {\n        if (error.code === ERROR_CODE_ACCOUNT_EXISTS) {\n          error.message = ERROR_MSG_ACCOUNT_EXISTS;\n        }\n\n        this.setState({ error });\n      });\n\n    event.preventDefault();\n  };\n\n  render() {\n    const { error } = this.state;\n\n    return (\n      <form onSubmit={this.onSubmit}>\n        <button type='submit'>Sign In with Twitter</button>\n\n        {error && <p>{error.message}</p>}\n      </form>\n    );\n  }\n}\n\nconst SignInForm = compose(\n  withRouter,\n  withFirebase\n)(SignInFormBase);\n\nconst SignInGoogle = compose(\n  withRouter,\n  withFirebase\n)(SignInGoogleBase);\n\nconst SignInFacebook = compose(\n  withRouter,\n  withFirebase\n)(SignInFacebookBase);\n\nconst SignInTwitter = compose(\n  withRouter,\n  withFirebase\n)(SignInTwitterBase);\n\nexport default SignInPage;\n\nexport { SignInForm, SignInGoogle, SignInFacebook, SignInTwitter };\n","import React, { Component } from \"react\";\nimport { compose } from \"recompose\";\nimport \"../../styles/components/Home/Home.css\";\nimport { withAuthorization } from \"../Session\";\nimport { withFirebase } from \"../Firebase\";\n\nclass HomePage extends Component {\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      users: null\n    };\n  }\n\n  componentDidMount() {\n    this.props.firebase.users().on(\"value\", snapshot => {\n      this.setState({\n        users: snapshot.val()\n      });\n    });\n  }\n\n  componentWillUnmount() {\n    this.props.firebase.users().off();\n  }\n\n  render() {\n    return (\n      <main id=\"home\">\n        <h2>Home Page</h2>\n        <p>Welcome to Question Air.</p>\n      </main>\n    );\n  }\n}\n\nconst condition = authUser => !!authUser;\n\nexport default compose(\n  withFirebase,\n  withAuthorization(condition)\n)(HomePage);\n","import React, { Component } from 'react';\n\nimport { withFirebase } from '../Firebase';\n\nconst INITIAL_STATE = {\n  passwordOne: '',\n  passwordTwo: '',\n  error: null,\n};\n\nclass PasswordChangeForm extends Component {\n  constructor(props) {\n    super(props);\n\n    this.state = { ...INITIAL_STATE };\n  }\n\n  onSubmit = event => {\n    const { passwordOne } = this.state;\n\n    this.props.firebase\n      .doPasswordUpdate(passwordOne)\n      .then(() => {\n        this.setState({ ...INITIAL_STATE });\n      })\n      .catch(error => {\n        this.setState({ error });\n      });\n\n    event.preventDefault();\n  };\n\n  onChange = event => {\n    this.setState({ [event.target.name]: event.target.value });\n  };\n\n  render() {\n    const { passwordOne, passwordTwo, error } = this.state;\n\n    const isInvalid = passwordOne !== passwordTwo || passwordOne === '';\n\n    return (\n      <form onSubmit={this.onSubmit}>\n        <input\n          name='passwordOne'\n          value={passwordOne}\n          onChange={this.onChange}\n          type='password'\n          placeholder='New Password'\n        />\n        <input\n          name='passwordTwo'\n          value={passwordTwo}\n          onChange={this.onChange}\n          type='password'\n          placeholder='Confirm New Password'\n        />\n        <button disabled={isInvalid} type='submit'>\n          Reset My Password\n        </button>\n\n        {error && <p>{error.message}</p>}\n      </form>\n    );\n  }\n}\n\nexport default withFirebase(PasswordChangeForm);\n","import React, { Component } from \"react\";\nimport { compose } from \"recompose\";\nimport \"../../styles/components/Account/Account.css\";\nimport { AuthUserContext, withAuthorization } from \"../Session\";\nimport { withFirebase } from \"../Firebase\";\nimport { PasswordForgetForm } from \"../PasswordForget\";\nimport PasswordChangeForm from \"../PasswordChange\";\n\nconst SIGN_IN_METHODS = [\n  {\n    id: \"password\",\n    provider: null\n  },\n  {\n    id: \"google.com\",\n    provider: \"googleProvider\"\n  },\n  {\n    id: \"facebook.com\",\n    provider: \"facebookProvider\"\n  },\n  {\n    id: \"twitter.com\",\n    provider: \"twitterProvider\"\n  }\n];\n\nconst AccountPage = () => (\n  <AuthUserContext.Consumer>\n    {authUser => (\n      <main id='account'>\n        <article>\n          <h2>Account: {authUser.email}</h2>\n          <PasswordForgetForm />\n          <PasswordChangeForm />\n          <LoginManagement authUser={authUser} />\n        </article>\n      </main>\n    )}\n  </AuthUserContext.Consumer>\n);\n\nclass LoginManagementBase extends Component {\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      activeSignInMethods: [],\n      error: null\n    };\n  }\n\n  componentDidMount() {\n    this.fetchSignInMethods();\n  }\n\n  fetchSignInMethods = () => {\n    this.props.firebase.auth\n      .fetchSignInMethodsForEmail(this.props.authUser.email)\n      .then(activeSignInMethods =>\n        this.setState({ activeSignInMethods, error: null })\n      )\n      .catch(error => this.setState({ error }));\n  };\n\n  onSocialLoginLink = provider => {\n    this.props.firebase.auth.currentUser\n      .linkWithPopup(this.props.firebase[provider])\n      .then(this.fetchSignInMethods)\n      .catch(error => this.setState({ error }));\n  };\n\n  onDefaultLoginLink = password => {\n    const credential = this.props.firebase.emailAuthProvider.credential(\n      this.props.authUser.email,\n      password\n    );\n\n    this.props.firebase.auth.currentUser\n      .linkAndRetrieveDataWithCredential(credential)\n      .then(this.fetchSignInMethods)\n      .catch(error => this.setState({ error }));\n  };\n\n  onUnlink = providerId => {\n    this.props.firebase.auth.currentUser\n      .unlink(providerId)\n      .then(this.fetchSignInMethods)\n      .catch(error => this.setState({ error }));\n  };\n\n  render() {\n    const { activeSignInMethods, error } = this.state;\n\n    return (\n      <article id='signin-methods'>\n        <span>Sign In Methods:</span>\n        <ul>\n          {SIGN_IN_METHODS.map(signInMethod => {\n            const onlyOneLeft = activeSignInMethods.length === 1;\n            const isEnabled = activeSignInMethods.includes(signInMethod.id);\n\n            return (\n              <li key={signInMethod.id}>\n                {signInMethod.id === \"password\" ? (\n                  <DefaultLoginToggle\n                    onlyOneLeft={onlyOneLeft}\n                    isEnabled={isEnabled}\n                    signInMethod={signInMethod}\n                    onLink={this.onDefaultLoginLink}\n                    onUnlink={this.onUnlink}\n                  />\n                ) : (\n                  <SocialLoginToggle\n                    onlyOneLeft={onlyOneLeft}\n                    isEnabled={isEnabled}\n                    signInMethod={signInMethod}\n                    onLink={this.onSocialLoginLink}\n                    onUnlink={this.onUnlink}\n                  />\n                )}\n              </li>\n            );\n          })}\n        </ul>\n        {error && error.message}\n      </article>\n    );\n  }\n}\n\nconst SocialLoginToggle = ({\n  onlyOneLeft,\n  isEnabled,\n  signInMethod,\n  onLink,\n  onUnlink\n}) =>\n  isEnabled ? (\n    <button\n      type='button'\n      onClick={() => onUnlink(signInMethod.id)}\n      disabled={onlyOneLeft}\n    >\n      Deactivate {signInMethod.id}\n    </button>\n  ) : (\n    <button type='button' onClick={() => onLink(signInMethod.provider)}>\n      Link {signInMethod.id}\n    </button>\n  );\n\nclass DefaultLoginToggle extends Component {\n  constructor(props) {\n    super(props);\n\n    this.state = { passwordOne: \"\", passwordTwo: \"\" };\n  }\n\n  onSubmit = event => {\n    event.preventDefault();\n\n    this.props.onLink(this.state.passwordOne);\n    this.setState({ passwordOne: \"\", passwordTwo: \"\" });\n  };\n\n  onChange = event => {\n    this.setState({ [event.target.name]: event.target.value });\n  };\n\n  render() {\n    const { onlyOneLeft, isEnabled, signInMethod, onUnlink } = this.props;\n\n    const { passwordOne, passwordTwo } = this.state;\n\n    const isInvalid = passwordOne !== passwordTwo || passwordOne === \"\";\n\n    return isEnabled ? (\n      <button\n        type='button'\n        onClick={() => onUnlink(signInMethod.id)}\n        disabled={onlyOneLeft}\n      >\n        Deactivate {signInMethod.id}\n      </button>\n    ) : (\n      <form onSubmit={this.onSubmit}>\n        <input\n          name='passwordOne'\n          value={passwordOne}\n          onChange={this.onChange}\n          type='password'\n          placeholder='New Password'\n        />\n        <input\n          name='passwordTwo'\n          value={passwordTwo}\n          onChange={this.onChange}\n          type='password'\n          placeholder='Confirm New Password'\n        />\n\n        <button disabled={isInvalid} type='submit'>\n          Link {signInMethod.id}\n        </button>\n      </form>\n    );\n  }\n}\n\nconst LoginManagement = withFirebase(LoginManagementBase);\n\nconst condition = authUser => !!authUser;\n\nexport default compose(withAuthorization(condition))(AccountPage);\n","import React, { Component } from 'react';\nimport { Link } from 'react-router-dom';\n\nimport { withFirebase } from '../Firebase';\nimport * as ROUTES from '../../constants/routes';\nimport '../../styles/components/Users/UserList.css';\n\nclass UserList extends Component {\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      loading: false,\n      users: [],\n    };\n  }\n\n  componentDidMount() {\n    this.setState({ loading: true });\n\n    this.props.firebase.users().on('value', (snapshot) => {\n      const usersObject = snapshot.val();\n\n      const usersList = Object.keys(usersObject).map((key) => ({\n        ...usersObject[key],\n        uid: key,\n      }));\n\n      this.setState({\n        users: usersList,\n        loading: false,\n      });\n    });\n  }\n\n  componentWillUnmount() {\n    this.props.firebase.users().off();\n  }\n\n  render() {\n    const { users, loading } = this.state;\n\n    return (\n      <article id=\"user-list\">\n        <h2>Enrolled Users</h2>\n        {loading && <div>Loading ...</div>}\n        <ul>\n          {users.map((user) => (\n            <li key={user.uid}>\n              <span>\n                <strong>ID:</strong> {user.uid}\n              </span>\n              <span>\n                <strong>E-Mail:</strong> {user.email}\n              </span>\n              <span>\n                <strong>Username:</strong> {user.username}\n              </span>\n              {user.roles && (\n                <span>\n                  <strong>Roles:</strong>\n                  <ul>\n                    {user.roles.map((role) => (\n                      <li key={role}>{role}</li>\n                    ))}\n                  </ul>\n                </span>\n              )}\n              <span>\n                <Link\n                  to={{\n                    pathname: `${ROUTES.ADMIN}/${user.uid}`,\n                    state: { user },\n                  }}\n                >\n                  Details\n                </Link>\n              </span>\n            </li>\n          ))}\n        </ul>\n      </article>\n    );\n  }\n}\n\nexport default withFirebase(UserList);\n","import React, { Component } from 'react';\nimport '../../styles/components/Users/UserItem.css';\nimport { withFirebase } from '../Firebase';\nclass UserItem extends Component {\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      loading: true,\n      user: null,\n      uid: null,\n      ...props.location.state,\n    };\n  }\n\n  componentDidMount() {\n    this.props.firebase\n      .user(this.props.match.params.id)\n      .on('value', (snapshot) => {\n        this.setState({\n          user: snapshot.val(),\n          uid: this.props.match.params.id,\n          loading: false,\n        });\n      });\n  }\n\n  componentWillUnmount() {\n    this.props.firebase.user(this.props.match.params.id).off();\n  }\n\n  onSendPasswordResetEmail = () => {\n    this.props.firebase.doPasswordReset(this.state.user.email);\n  };\n\n  handleRequestApproval = (e) => {\n    let key;\n    if (e.target.id === 'ADMIN') {\n      key = 0;\n    } else {\n      key = 1;\n    }\n    this.props.firebase\n      .user(this.state.user.uid)\n      .child(`roles`)\n      .child(key)\n      .set(e.target.id);\n  };\n\n  handleRoleRemoval = (e) => {\n    let key;\n    if (e.target.id === 'ADMIN') {\n      key = 0;\n    } else {\n      key = 1;\n    }\n    this.props.firebase\n      .user(this.state.uid)\n      .child('roles')\n      .child(key)\n      .remove();\n\n    console.log(key);\n  };\n\n  render() {\n    const { user, loading, uid } = this.state;\n    console.log(this.state.uid);\n\n    return (\n      <article id=\"user-item\">\n        <h2>{this.state.user.username}</h2>\n        {loading && <div>Loading ...</div>}\n\n        {user && (\n          <div>\n            <span>\n              <b>ID:</b> {uid}\n            </span>\n            <span>\n              <b>E-Mail:</b> {user.email}\n            </span>\n            <span>\n              <b>Username:</b> {user.username}\n            </span>\n            {user.requests && (\n              <span id=\"requests\">\n                <b>Requests: </b>(Click to Approve)\n                <ul>\n                  {user.requests.map((req) => (\n                    <li key={req}>\n                      <button\n                        id={req}\n                        type=\"button\"\n                        onClick={this.handleRequestApproval}\n                      >\n                        {req}\n                      </button>\n                    </li>\n                  ))}\n                </ul>\n              </span>\n            )}\n            {user.roles && (\n              <span>\n                <b>Roles: </b>(Click to Remove)\n                <ul>\n                  {user.roles.map((role) => (\n                    <li key={role}>\n                      <button\n                        id={role}\n                        type=\"button\"\n                        onClick={this.handleRoleRemoval}\n                      >\n                        {role}\n                      </button>\n                    </li>\n                  ))}\n                </ul>\n              </span>\n            )}\n            <span>\n              <button type=\"button\" onClick={this.onSendPasswordResetEmail}>\n                Send Password Reset\n              </button>\n            </span>\n          </div>\n        )}\n      </article>\n    );\n  }\n}\n\nexport default withFirebase(UserItem);\n","import React from 'react';\nimport { compose } from 'recompose';\nimport { withAuthorization } from '../Session';\nimport { UserList } from '../Users';\nimport * as ROLES from '../../constants/roles';\nimport '../../styles/components/Admin/Admin.css';\n\nconst AdminPage = () => (\n  <main id=\"admin-page\">\n    <h2>Admin</h2>\n    <p>The Admin Page is accessible by every signed in admin user.</p>\n\n    <UserList />\n  </main>\n);\n\nconst condition = (authUser) =>\n  authUser && authUser.roles.includes(ROLES.ADMIN);\n\nexport default compose(withAuthorization(condition))(AdminPage);\n","import React, { Component } from 'react';\nimport { Link } from 'react-router-dom';\nimport '../../styles/components/Tests/TestList.css';\nimport { withFirebase } from '../Firebase';\nimport * as ROUTES from '../../constants/routes';\nimport * as ROLES from '../../constants/roles';\n\nclass TestList extends Component {\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      tests: [],\n      authUser: JSON.parse(localStorage.getItem('authUser')),\n      loading: false,\n      tid: '',\n      test: null,\n      questions: [],\n    };\n  }\n\n  componentDidMount() {\n    this.setState({ loading: true });\n    this.props.firebase\n      .tests(this.state.authUser.uid)\n      .on('value', (snapshot) => {\n        const testsObject = snapshot.val();\n        if (testsObject === null) {\n          this.setState({ loading: false });\n        } else {\n          const testsList = Object.keys(testsObject).map((key) => ({\n            ...testsObject[key],\n            uid: key,\n          }));\n\n          this.setState({\n            tests: testsList,\n            loading: false,\n          });\n        }\n      });\n  }\n\n  componentWillUnmount() {\n    this.props.firebase.tests().off();\n    this.props.firebase.host().off();\n  }\n\n  handleOnChange = (e) => {\n    this.setState({ [e.target.name]: e.target.value });\n  };\n\n  handleHostTest = (e) => {\n    e.preventDefault();\n    const { authUser, tid, test } = this.state;\n\n    // *** Get Test from test API ***\n    this.props.firebase.test(authUser.uid, tid).on('value', (snapshot) => {\n      this.setState({\n        test: snapshot.val(),\n        questions: Object.values(snapshot.val().questions),\n      });\n\n      // *** Create Hosted Test ***\n      this.props.firebase.host(authUser.uid, tid).set({\n        test,\n      });\n    });\n  };\n\n  render() {\n    const { tests, loading } = this.state;\n    return (\n      <section id=\"instrurctor-test-list\">\n        <article id=\"test-list\">\n          <h2>Available Quizzes</h2>\n          {loading && <div>Loading ...</div>}\n          <ul>\n            {tests &&\n              tests.map((test) => (\n                <Link\n                  to={{\n                    pathname: `${ROUTES.TESTS}/${test.tid}`,\n                    state: { test, authUser: this.state.authUser },\n                  }}\n                  key={test.tid}\n                >\n                  <li>Quiz ID Number: {test.tid}</li>\n                </Link>\n              ))}\n          </ul>\n        </article>\n        {(this.state.authUser &&\n          this.state.authUser.roles.includes(ROLES.ADMIN)) ||\n        this.state.authUser.roles.includes(ROLES.INSTRUCTOR) ? (\n          <article id=\"tests-host\">\n            <h2>Host A Test</h2>\n            <form onSubmit={this.handleHostTest}>\n              <input\n                type=\"number\"\n                name=\"tid\"\n                value={this.state.tid}\n                placeholder=\"Test ID\"\n                onChange={this.handleOnChange}\n              />\n              <input type=\"submit\" name=\"submit\" value=\"Submit\" />\n            </form>\n          </article>\n        ) : (\n          ''\n        )}\n      </section>\n    );\n  }\n}\n\nexport default withFirebase(TestList);\n","import React from \"react\";\nimport \"../../styles/components/Tests/CreateTestBank.css\";\nimport { withFirebase } from \"../Firebase\";\n\nclass CreateTestBank extends React.Component {\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      authUser: JSON.parse(localStorage.getItem(\"authUser\")),\n      error: \"\",\n      tid: \"\",\n      totalPoints: \"\",\n      passingScore: \"\"\n    };\n  }\n\n  componentDidMount() {\n    this.fetchUser();\n  }\n\n  fetchUser = () => {\n    this.props.firebase.auth.onAuthStateChanged(user => {\n      if (user) {\n        this.setState({ user, error: null });\n      }\n    });\n  };\n\n  handleOnSubmit = e => {\n    e.preventDefault();\n\n    const testBankMeta = {\n      tid: this.state.tid,\n      totalPoints: this.state.totalPoints,\n      passingScore: this.state.passingScore\n    };\n\n    this.props.firebase\n      .user(this.state.authUser.uid)\n      .child(\"tests\")\n      .child(this.state.tid)\n      .set(testBankMeta);\n\n    this.setState({\n      tid: \"\",\n      totalPoints: \"\",\n      passingScore: \"\"\n    });\n  };\n\n  handleChange = e => {\n    this.setState({\n      [e.target.name]: e.target.value\n    });\n  };\n\n  render() {\n    return (\n      <main id=\"create-test-bank\">\n        <h2>Create Test Bank</h2>\n        <p>Instructor Name: {this.state.authUser.username}</p>\n        <form id=\"newTestBank\" onSubmit={this.handleOnSubmit}>\n          <label>Test Bank ID Number</label>\n          <input\n            type=\"number\"\n            value={this.state.testBankId}\n            name=\"tid\"\n            onChange={this.handleChange}\n            placeholder=\"Test Bank ID Number\"\n          />\n          <label>Total Points</label>\n          <input\n            type=\"number\"\n            value={this.state.totalPoints}\n            name=\"totalPoints\"\n            onChange={this.handleChange}\n            placeholder=\"Total Points\"\n          />\n          <label>Passing Score</label>\n          <input\n            type=\"number\"\n            value={this.state.passingScore}\n            name=\"passingScore\"\n            onChange={this.handleChange}\n            placeholder=\"Passing Score\"\n          />\n          <input type=\"submit\" name=\"submit\" value=\"Submit\" />\n          <input type=\"reset\" name=\"reset\" value=\"Reset\" />\n        </form>\n      </main>\n    );\n  }\n}\n\nexport default withFirebase(CreateTestBank);\n","import React from 'react';\nimport '../../styles/components/Tests/TakeTest.css';\nimport { withFirebase } from '../Firebase';\nimport { withAuthentication } from '../Session';\nimport { compose } from 'recompose';\n\nclass TakeTest extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      authUser: '',\n      instructorID: this.props.location.state.instructorID,\n      tid: this.props.location.state.tid,\n      questions: [],\n      test: null,\n      loading: true,\n      submittedAnswers: [],\n    };\n  }\n\n  componentDidMount() {\n    const { instructorID, tid } = this.state;\n    this.props.firebase.host(instructorID, tid).on('value', (snapshot) => {\n      this.setState({\n        test: snapshot.val().test,\n        questions: Object.values(snapshot.val().test.questions),\n        loading: false,\n      });\n    });\n    console.log(this.props);\n  }\n\n  handleSubmitAnswer = (e) => {\n    e.preventDefault();\n  };\n\n  render() {\n    const { loading, test, questions, tid } = this.state;\n    return (\n      <main id=\"take-test\">\n        {loading && <div>Loading ...</div>}\n        {test && (\n          <section id=\"test\">\n            <h2>Test ID: {tid}</h2>\n            <article className=\"test-question\">\n              <ul id=\"questions\">\n                {/* Iterates through the questions array, checks if there is an image associated with it, downloads the image and sets the url to the url state. */}\n                {questions.map((question) => {\n                  question.image &&\n                    this.props.firebase\n                      .images(this.state.instructorID)\n                      .child(`${question.image.substring(12)}`)\n                      .getDownloadURL()\n                      .then((url) => {\n                        this.setState({ url });\n                      });\n                  /* Returns the question number, text, image (if there is one) and then iterates through the options which are clickable to submit answers. */\n                  return (\n                    <li className=\"question\" key={question.questionNum}>\n                      <p className=\"questionTitle\">\n                        Question #{question.questionNum}: {question.question}\n                      </p>\n                      <br />\n                      {question.image && (\n                        <img\n                          src={this.state.url}\n                          alt=\"question\"\n                          title=\"Image Question\"\n                        />\n                      )}\n                      <ol>\n                        {question.options.map((op) => (\n                          <li\n                            key={op}\n                            className=\"option\"\n                            id={op}\n                            value={question.questionNum}\n                            onClick={this.handleSubmitAnswer}\n                          >\n                            {op}\n                          </li>\n                        ))}\n                      </ol>\n                    </li>\n                  );\n                })}\n              </ul>\n            </article>\n          </section>\n        )}\n      </main>\n    );\n  }\n}\n\nexport default compose(\n  withAuthentication,\n  withFirebase,\n)(TakeTest);\n","import React from \"react\";\nimport TestList from \"./TestList\";\nimport { withFirebase } from \"../Firebase\";\nimport \"../../styles/components/Student/TakeTest.css\";\n\nconst TakeTest = () => (\n  <main id=\"taketest\">\n    <h2>Select A Test</h2>\n    <div className=\"select-test\">\n      <TestList />\n    </div>\n  </main>\n);\n\nexport default withFirebase(TakeTest);\n","import React from 'react';\nimport '../../styles/components/Tests/TestPage.css';\nimport { compose } from 'recompose';\nimport { withFirebase } from '../Firebase';\nimport { withAuthentication } from '../Session';\n\nclass TestPage extends React.Component {\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      // Gets current authUser from local storage\n      authUser: this.props.location.state.authUser,\n      test: this.props.location.state.test,\n      tid: this.props.location.state.test.tid,\n      questions: Object.values(this.props.location.state.test.questions),\n      loading: true,\n      url: '',\n    };\n  }\n\n  handleSubmitAnswer = (e) => {\n    // TODO Create logic for handling a submitted answer.\n    console.log(e.target.id);\n  };\n\n  render() {\n    const { test, tid, loading } = this.state;\n\n    return (\n      <main id=\"test-page\">\n        <h2>Test #{tid}</h2>\n        {loading && <div>Loading ...</div>}\n        {/* Checks if there is a tests object and prints the following JSX */}\n        {test && (\n          <div>\n            <ul>\n              <li>Possible Points: {this.state.test.totalPoints}</li>\n              <li>Passing Score: {this.state.test.passingScore}</li>\n              <li>Number of Questions: {this.state.test.questions.length}</li>\n              <li>\n                Questions:\n                <ul id=\"questions\">\n                  {/* Iterates through the questions array, checks if there is an image associated with it, downloads the image and sets the url to the url state. */}\n                  {this.state.questions.map((question) => {\n                    question.image &&\n                      this.props.firebase\n                        .images(this.state.authUser.uid)\n                        .child(`${question.image.substring(12)}`)\n                        .getDownloadURL()\n                        .then((url) => {\n                          this.setState({ url });\n                        });\n                    /* Returns the question number, text, image (if there is one) and then iterates through the options which are clickable to submit answers. */\n                    return (\n                      <li className=\"question\" key={question.questionNum}>\n                        <p className=\"questionTitle\">\n                          Question #{question.questionNum}: {question.question}\n                        </p>\n                        <br />\n                        {question.image && (\n                          <img\n                            src={this.state.url}\n                            alt=\"question\"\n                            title=\"Image Question\"\n                          />\n                        )}\n                        <ol>\n                          {question.options.map((op) => (\n                            <li\n                              key={op}\n                              className=\"option\"\n                              id={op}\n                              value={op}\n                              onClick={this.handleSubmitAnswer}\n                            >\n                              {op}\n                            </li>\n                          ))}\n                        </ol>\n                        Answer: {question.answer}\n                      </li>\n                    );\n                  })}\n                </ul>\n              </li>\n            </ul>\n          </div>\n        )}\n      </main>\n    );\n  }\n}\n\n// Wraps the component with the higher order component \"withFirebase\" to give the component access to the Firebase API.\nexport default compose(\n  withAuthentication,\n  withFirebase,\n)(TestPage);\n","import React from 'react';\nimport { Link } from 'react-router-dom';\nimport { compose } from 'recompose';\nimport { withAuthorization } from '../Session';\nimport { TestList } from '../Tests';\nimport * as ROLES from '../../constants/roles';\nimport * as ROUTES from '../../constants/routes';\nimport '../../styles/components/Instructor/InstructorPage.css';\n\nclass InstructorPage extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      authUser: JSON.parse(localStorage.getItem('authUser')).uid,\n    };\n  }\n  handleEndHostedTests = () => {\n    const { authUser } = this.state;\n    this.props.firebase.hosts(authUser).remove();\n  };\n\n  render() {\n    return (\n      <main id=\"instructor-page\">\n        <h2>Instructor</h2>\n        <p>\n          The Instructor Page is accessible by every signed in Instructor user.\n        </p>\n        <Link to={ROUTES.CREATE_TEST}>Create Test Bank</Link>\n        <br />\n        <Link to={ROUTES.NEW_QUESTION}>New Question</Link>\n\n        <TestList />\n        <input\n          type=\"button\"\n          value=\"End Hosted Tests\"\n          onClick={this.handleEndHostedTests}\n        />\n      </main>\n    );\n  }\n}\n\nconst condition = (authUser) =>\n  (authUser && authUser.roles.includes(ROLES.ADMIN)) ||\n  authUser.roles.includes(ROLES.INSTRUCTOR);\n\nexport default compose(withAuthorization(condition))(InstructorPage);\n","import React from 'react';\nimport { compose } from 'recompose';\nimport '../../styles/components/Student/StudentDashboard.css';\nimport { withAuthorization, withAuthentication } from '../Session';\nimport * as ROLES from '../../constants/roles';\n\nclass StudentPage extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      instructorID: '',\n      tid: '',\n    };\n  }\n\n  handleStartTest = (e) => {\n    e.preventDefault();\n    const { instructorID, tid } = this.state;\n    console.log(this.props);\n    this.props.history.push({\n      pathname: `tests/s/${instructorID}/${tid}`,\n      state: { instructorID, tid },\n    });\n  };\n\n  handleOnChange = (e) => {\n    this.setState({ [e.target.name]: e.target.value });\n  };\n\n  render() {\n    return (\n      <main id=\"student\">\n        <h2>Student</h2>\n        <h3>Take a Test</h3>\n        <form onSubmit={this.handleStartTest}>\n          <label>\n            Enter your Instructor's ID number\n            <input\n              type=\"text\"\n              name=\"instructorID\"\n              value={this.state.instructorID}\n              onChange={this.handleOnChange}\n              placeholder=\"Instructor ID\"\n            />\n          </label>\n          <label>\n            Enter the given Test ID number\n            <input\n              type=\"number\"\n              name=\"tid\"\n              value={this.state.tid}\n              onChange={this.handleOnChange}\n              placeholder=\"Test ID\"\n            />\n          </label>\n          <input type=\"submit\" value=\"Submit\" name=\"submit\" />\n        </form>\n      </main>\n    );\n  }\n}\n\nconst condition = (authUser) =>\n  (authUser && authUser.roles.includes(ROLES.ADMIN)) ||\n  authUser.roles.includes(ROLES.INSTRUCTOR) ||\n  authUser.roles.includes(ROLES.STUDENT);\n\nexport default compose(\n  withAuthorization(condition),\n  withAuthentication,\n)(StudentPage);\n","import React from \"react\";\nimport \"../../styles/components/Questions/NewQuestion.css\";\nimport { withFirebase } from \"../Firebase\";\nimport { isNullOrUndefined } from \"util\";\n\nclass NewQuestion extends React.Component {\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      tid: \"\",\n      reference1: \"\",\n      reference2: \"\",\n      question: \"\",\n      questionNum: \"\",\n      op1: \"\",\n      op2: \"\",\n      op3: \"\",\n      op4: \"\",\n      op5: \"\",\n      op6: \"\",\n      op7: \"\",\n      op8: \"\",\n      op9: \"\",\n      op10: \"\",\n      options: [],\n      answer: \"\",\n      user: \"\",\n      image: \"\"\n    };\n  }\n\n  componentDidMount() {\n    this.fetchUser();\n  }\n\n  fetchUser = () => {\n    this.props.firebase.auth.onAuthStateChanged(user => {\n      if (user) {\n        this.setState({ user, error: null });\n      }\n    });\n  };\n\n  handleOnSubmit = e => {\n    e.preventDefault();\n\n    if (this.state.op1) {\n      this.state.options.push(this.state.op1);\n    }\n    if (this.state.op2) {\n      this.state.options.push(this.state.op2);\n    }\n    if (this.state.op3) {\n      this.state.options.push(this.state.op3);\n    }\n    if (this.state.op4) {\n      this.state.options.push(this.state.op4);\n    }\n    if (this.state.op5) {\n      this.state.options.push(this.state.op5);\n    }\n    if (this.state.op6) {\n      this.state.options.push(this.state.op6);\n    }\n    if (this.state.op7) {\n      this.state.options.push(this.state.op7);\n    }\n    if (this.state.op8) {\n      this.state.options.push(this.state.op8);\n    }\n    if (this.state.op9) {\n      this.state.options.push(this.state.op9);\n    }\n    if (this.state.op10) {\n      this.state.options.push(this.state.op10);\n    }\n    if (e.target.upLoadImage === isNullOrUndefined) {\n      const file = e.target.uploadImage.files[0];\n      const fileName = file.name;\n      this.props.firebase\n        .image(this.state.user.uid, fileName)\n        .put(file)\n        .then(snapshot => {\n          console.log(snapshot);\n        });\n    }\n\n    const question = {\n      reference1: this.state.reference1,\n      reference2: this.state.reference2,\n      question: this.state.question,\n      questionNum: this.state.questionNum,\n      options: this.state.options,\n      answer: this.state.answer,\n      image: this.state.image\n    };\n\n    this.props.firebase\n      .user(this.state.user.uid)\n      .child(\"tests\")\n      .child(this.state.tid)\n      .child(\"questions/\")\n      .child(this.state.questionNum)\n      .set(question);\n\n    this.setState({\n      reference1: \"\",\n      reference2: \"\",\n      question: \"\",\n      questionNum: \"\",\n      op1: \"\",\n      op2: \"\",\n      op3: \"\",\n      op4: \"\",\n      op5: \"\",\n      op6: \"\",\n      op7: \"\",\n      op8: \"\",\n      op9: \"\",\n      op10: \"\",\n      answer: \"\",\n      options: [],\n      image: \"\"\n    });\n  };\n\n  handleChange = e => {\n    this.setState({\n      [e.target.name]: e.target.value\n    });\n  };\n\n  render() {\n    return (\n      <main id='new-question'>\n        <h2>Create Questions</h2>\n        <form id='newQuestion' onSubmit={this.handleOnSubmit}>\n          <label>Test Bank ID Number</label>\n          <input\n            type='number'\n            value={this.state.testBankId}\n            name='tid'\n            onChange={this.handleChange}\n            placeholder='Test Bank ID'\n          />\n          <label>Reference 1</label>\n          <input\n            type='text'\n            value={this.state.reference1}\n            name='reference1'\n            onChange={this.handleChange}\n            placeholder='Reference 1'\n          />\n          <label>Reference 2</label>\n          <input\n            type='text'\n            value={this.state.reference2}\n            name='reference2'\n            onChange={this.handleChange}\n            placeholder='Reference 2'\n          />\n          <label>Question Number and Content</label>\n          <input\n            type='number'\n            value={this.state.questionNum}\n            name='questionNum'\n            onChange={this.handleChange}\n            placeholder='Question Number'\n          />\n          <input\n            type='text'\n            value={this.state.question}\n            name='question'\n            onChange={this.handleChange}\n            placeholder='Question Text'\n          />\n          <input\n            accept='.jpg,.png'\n            type='file'\n            id='uploadImage'\n            name='image'\n            onChange={this.handleChange}\n          />\n          <label>Option A</label>\n          <input\n            type='text'\n            value={this.state.op1}\n            name='op1'\n            onChange={this.handleChange}\n            placeholder='Option A'\n          />\n          <label>Option B</label>\n          <input\n            type='text'\n            value={this.state.op2}\n            name='op2'\n            onChange={this.handleChange}\n            placeholder='Option B'\n          />\n          <label>Option C</label>\n          <input\n            type='text'\n            value={this.state.op3}\n            name='op3'\n            onChange={this.handleChange}\n            placeholder='Option C'\n          />\n          <label>Option D</label>\n          <input\n            type='text'\n            value={this.state.op4}\n            name='op4'\n            onChange={this.handleChange}\n            placeholder='Option D'\n          />\n          <label>Option E</label>\n          <input\n            type='text'\n            value={this.state.op5}\n            name='op5'\n            onChange={this.handleChange}\n            placeholder='Option E'\n          />\n          <label>Option F</label>\n          <input\n            type='text'\n            value={this.state.op6}\n            name='op6'\n            onChange={this.handleChange}\n            placeholder='Option F'\n          />\n          <label>Option G</label>\n          <input\n            type='text'\n            value={this.state.op7}\n            name='op7'\n            onChange={this.handleChange}\n            placeholder='Option G'\n          />\n          <label>Option H</label>\n          <input\n            type='text'\n            value={this.state.op8}\n            name='op8'\n            onChange={this.handleChange}\n            placeholder='Option H'\n          />\n          <label>Option I</label>\n          <input\n            type='text'\n            value={this.state.op9}\n            name='op9'\n            onChange={this.handleChange}\n            placeholder='Option I'\n          />\n          <label>Option J</label>\n          <input\n            type='text'\n            value={this.state.op10}\n            name='op10'\n            onChange={this.handleChange}\n            placeholder='Option J'\n          />\n\n          <label>Correct Answer</label>\n          <input\n            type='text'\n            value={this.state.answer}\n            name='answer'\n            onChange={this.handleChange}\n            placeholder='Correct Answer'\n          />\n\n          <input type='submit' name='submit' value='Submit' />\n          <input type='reset' name='reset' value='Reset' />\n        </form>\n      </main>\n    );\n  }\n}\n\nexport default withFirebase(NewQuestion);\n","import React from 'react';\nimport { BrowserRouter as Router, Route, Switch } from 'react-router-dom';\n\nimport Navigation from '../Navigation';\nimport SignUpPage from '../SignUp';\nimport SignInPage from '../SignIn';\nimport PasswordForgetPage from '../PasswordForget';\nimport HomePage from '../Home';\nimport AccountPage from '../Account';\nimport AdminPage from '../Admin';\nimport InstructorPage from '../Instructor';\nimport StudentPage from '../Student';\nimport { CreateTestBank, TakeTest, SelectTest, TestPage } from '../Tests';\nimport { NewQuestion } from '../Questions';\n\nimport * as ROUTES from '../../constants/routes';\nimport { withAuthentication } from '../Session';\nimport '../../styles/base/App.css';\nimport { UserItem } from '../Users';\n\nconst App = () => (\n  <Router>\n    <div>\n      <Navigation />\n      <Switch>\n        <Route exact path={ROUTES.HOME} component={HomePage} />\n        <Route exact path={ROUTES.SIGN_UP} component={SignUpPage} />\n        <Route exact path={ROUTES.SIGN_IN} component={SignInPage} />\n        <Route\n          exact\n          path={ROUTES.PASSWORD_FORGET}\n          component={PasswordForgetPage}\n        />\n        <Route exact path={ROUTES.ACCOUNT} component={AccountPage} />\n        <Route exact path={ROUTES.ADMIN} component={AdminPage} />\n        <Route exact path={ROUTES.ADMIN_DETAILS} component={UserItem} />\n        <Route exact path={ROUTES.INSTRUCTOR} component={InstructorPage} />\n        <Route exact path={ROUTES.STUDENT} component={StudentPage} />\n        <Route exact path={ROUTES.CREATE_TEST} component={CreateTestBank} />\n        <Route exact path={ROUTES.NEW_QUESTION} component={NewQuestion} />\n        <Route exact path={ROUTES.SELECT_TEST} component={SelectTest} />\n        <Route exact path={ROUTES.TESTS} component={TestPage} />\n        <Route exact path={ROUTES.TAKE_TEST} component={TakeTest} />\n      </Switch>\n    </div>\n  </Router>\n);\n\nexport default withAuthentication(App);\n","import React from 'react';\nimport ReactDOM from 'react-dom';\n\nimport './styles/base/index.css';\nimport './styles/base/settings.css';\nimport * as serviceWorker from './serviceWorker';\n\nimport App from './components/App';\nimport Firebase, { FirebaseContext } from './components/Firebase';\n\nReactDOM.render(\n  <FirebaseContext.Provider value={new Firebase()}>\n    <App />\n  </FirebaseContext.Provider>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: http://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}