{"version":3,"sources":["serviceWorker.js","components/Session/context.js","components/Firebase/context.js","components/Firebase/firebase.js","components/Firebase/index.js","components/Session/withAuthentication.js","constants/routes.js","components/Session/withAuthorization.js","components/SignOut/index.js","components/Navigation/index.js","constants/roles.js","components/SignUp/index.js","components/PasswordForget/index.js","components/SignIn/index.js","components/Home/index.js","components/PasswordChange/index.js","components/Account/index.js","components/Users/UserList.js","components/Users/UserItem.js","components/Admin/index.js","components/Tests/TestList.js","components/Tests/CreateTestBank.js","components/Tests/TakeTest.js","components/Tests/SelectTest.js","components/Tests/TestPage.js","components/Instructor/index.js","components/Student/index.js","components/Questions/NewQuestion.js","components/App/index.js","index.js"],"names":["Boolean","window","location","hostname","match","AuthUserContext","React","createContext","FirebaseContext","withFirebase","Component","props","react_default","a","createElement","Consumer","firebase","Object","assign","config","apiKey","process","authDomain","databaseURL","projectId","storageBucket","messagingSenderId","Firebase","_this","this","classCallCheck","doCreateUserWithEmailAndPassword","email","password","auth","createUserWithEmailAndPassword","doSignInWithEmailAndPassword","signInWithEmailAndPassword","doSignInWithGoogle","signInWithPopup","googleProvider","doSignInWithFacebook","facebookProvider","doSignInWithTwitter","twitterProvider","doSignOut","signOut","doPasswordReset","sendPasswordResetEmail","doSendEmailVerification","currentUser","sendEmailVerification","url","REACT_APP_CONFIRMATION_EMAIL_REDIRECT","doPasswordUpdate","updatePassword","onAuthUserListener","next","fallback","onAuthStateChanged","authUser","user","uid","once","then","snapshot","dbUser","val","roles","objectSpread","emailVerified","providerData","db","ref","concat","users","message","messages","test","tid","tests","image","fileName","storage","images","app","initializeApp","serverValue","database","ServerValue","emailAuthProvider","EmailAuthProvider","GoogleAuthProvider","FacebookAuthProvider","TwitterAuthProvider","withAuthentication","WithAuthentication","_React$Component","possibleConstructorReturn","getPrototypeOf","call","state","JSON","parse","localStorage","getItem","inherits","createClass","key","value","_this2","listener","setItem","stringify","setState","removeItem","context","Provider","HOME","withAuthorization","condition","WithAuthorization","apply","arguments","history","push","compose","withRouter","_ref","type","onClick","NavigationAuth","Link","to","ROUTES","includes","SignOut","NavigationNonAuth","Navigation","Navigation_NavigationAuth","Navigation_NavigationNonAuth","INITIAL_STATE","username","passwordOne","passwordTwo","requestAdmin","requestInstructor","error","ERROR_CODE_ACCOUNT_EXISTS","ERROR_MSG_ACCOUNT_EXISTS","SignUpFormBase","onSubmit","event","_this$state","requests","set","catch","code","preventDefault","onChange","defineProperty","target","name","onChangeCheckbox","checked","_this$state2","isInvalid","placeholder","disabled","SignUpLink","SignUpForm","SignUpPage","PasswordForgetFormBase","PasswordForgetLink","PasswordForgetPage","PasswordForgetForm","SignInFormBase","SignInGoogleBase","socialAuthUser","displayName","SignInFacebookBase","_this3","additionalUserInfo","profile","SignInTwitterBase","_this4","SignInForm","SignInGoogle","SignInFacebook","SignInTwitter","SignInPage","PasswordForget_PasswordForgetLink","SignUp_SignUpLink","HomePage","on","off","PasswordChangeForm","SIGN_IN_METHODS","id","provider","LoginManagementBase","fetchSignInMethods","fetchSignInMethodsForEmail","activeSignInMethods","onSocialLoginLink","linkWithPopup","onDefaultLoginLink","credential","linkAndRetrieveDataWithCredential","onUnlink","providerId","unlink","map","signInMethod","onlyOneLeft","length","isEnabled","Account_DefaultLoginToggle","onLink","Account_SocialLoginToggle","SocialLoginToggle","DefaultLoginToggle","_this$props","LoginManagement","PasswordChange","UserList","loading","usersObject","usersList","keys","pathname","UserItem","onSendPasswordResetEmail","params","Switch","Route","exact","path","component","TestList","testsObject","testsList","CreateTestBank","fetchUser","handleOnSubmit","e","testBankMeta","totalPoints","passingScore","child","handleChange","testBankId","TakeTest","className","Tests_TestList","TestPage","handleSubmitAnswer","console","log","questions","values","question","substring","getDownloadURL","questionNum","src","alt","title","options","op","answer","NewQuestion","op1","op2","op3","op4","op5","op6","op7","op8","op9","op10","upLoadImage","isNullOrUndefined","file","uploadImage","files","put","reference1","reference2","form","accept","BrowserRouter","src_components_Navigation","AccountPage","AdminPage","InstructorPage","StudentPage","SelectTest","ReactDOM","render","Firebase_context","components_App","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"uVAYoBA,QACW,cAA7BC,OAAOC,SAASC,UAEe,UAA7BF,OAAOC,SAASC,UAEhBF,OAAOC,SAASC,SAASC,MACvB,+FCdSC,EAFSC,IAAMC,cAAc,yCCAtCC,EAAkBF,IAAMC,cAAc,MAE/BE,EAAe,SAAAC,GAAS,OAAI,SAAAC,GAAK,OAC5CC,EAAAC,EAAAC,cAACN,EAAgBO,SAAjB,KAA2B,SAAAC,GAAQ,OAAIJ,EAAAC,EAAAC,cAACJ,EAADO,OAAAC,OAAA,GAAeP,EAAf,CAAsBK,SAAUA,SAG1DR,4BCHTW,qBAAS,CACbC,OAAQC,0CACRC,WAAYD,oCACZE,YAAaF,2CACbG,UAAWH,oBACXI,cAAeJ,gCACfK,kBAAmBL,sCCRNM,EDYb,SAAAA,IAAc,IAAAC,EAAAC,KAAAZ,OAAAa,EAAA,EAAAb,CAAAY,KAAAF,GAAAE,KAuBdE,iCAAmC,SAACC,EAAOC,GAAR,OACjCL,EAAKM,KAAKC,+BAA+BH,EAAOC,IAxBpCJ,KA0BdO,6BAA+B,SAACJ,EAAOC,GAAR,OAC7BL,EAAKM,KAAKG,2BAA2BL,EAAOC,IA3BhCJ,KA6BdS,mBAAqB,kBAAMV,EAAKM,KAAKK,gBAAgBX,EAAKY,iBA7B5CX,KA+BdY,qBAAuB,kBAAMb,EAAKM,KAAKK,gBAAgBX,EAAKc,mBA/B9Cb,KAiCdc,oBAAsB,kBAAMf,EAAKM,KAAKK,gBAAgBX,EAAKgB,kBAjC7Cf,KAmCdgB,UAAY,kBAAMjB,EAAKM,KAAKY,WAnCdjB,KAqCdkB,gBAAkB,SAAAf,GAAK,OAAIJ,EAAKM,KAAKc,uBAAuBhB,IArC9CH,KAuCdoB,wBAA0B,kBACxBrB,EAAKM,KAAKgB,YAAYC,sBAAsB,CAC1CC,IAAK/B,sZAAYgC,yCAzCPxB,KA4CdyB,iBAAmB,SAAArB,GAAQ,OAAIL,EAAKM,KAAKgB,YAAYK,eAAetB,IA5CtDJ,KAgDd2B,mBAAqB,SAACC,EAAMC,GAAP,OACnB9B,EAAKM,KAAKyB,mBAAmB,SAAAC,GACvBA,EACFhC,EAAKiC,KAAKD,EAASE,KAChBC,KAAK,SACLC,KAAK,SAAAC,GACJ,IAAMC,EAASD,EAASE,MAGnBD,EAAOE,QACVF,EAAOE,MAAQ,IAIjBR,EAAQ3C,OAAAoD,EAAA,EAAApD,CAAA,CACN6C,IAAKF,EAASE,IACd9B,MAAO4B,EAAS5B,MAChBsC,cAAeV,EAASU,cACxBC,aAAcX,EAASW,cACpBL,GAGLT,EAAKG,KAGTF,OAzEQ7B,KA+EdgC,KAAO,SAAAC,GAAG,OAAIlC,EAAK4C,GAAGC,IAAR,SAAAC,OAAqBZ,KA/ErBjC,KAiFd8C,MAAQ,kBAAM/C,EAAK4C,GAAGC,IAAI,UAjFZ5C,KAqFd+C,QAAU,SAAAd,GAAG,OAAIlC,EAAK4C,GAAGC,IAAR,YAAAC,OAAwBZ,KArF3BjC,KAuFdgD,SAAW,kBAAMjD,EAAK4C,GAAGC,IAAI,aAvFf5C,KA2FdiD,KAAO,SAAChB,EAAKiB,GAAN,OAAcnD,EAAK4C,GAAGC,IAAR,SAAAC,OAAqBZ,EAArB,WAAAY,OAAkCK,KA3FzClD,KA6FdmD,MAAQ,SAAAlB,GAAG,OAAIlC,EAAK4C,GAAGC,IAAR,SAAAC,OAAqBZ,EAArB,YA7FDjC,KAgGdoD,MAAQ,SAACnB,EAAKoB,GAAN,OAAmBtD,EAAKuD,QAAQV,IAAb,GAAAC,OAAoBZ,EAApB,YAAAY,OAAkCQ,KAhG/CrD,KAkGduD,OAAS,SAAAtB,GAAG,OAAIlC,EAAKuD,QAAQV,IAAb,GAAAC,OAAoBZ,EAApB,aAjGduB,IAAIC,cAAcnE,GAIlBU,KAAK0D,YAAcF,IAAIG,SAASC,YAChC5D,KAAK6D,kBAAoBL,IAAInD,KAAKyD,kBAIlC9D,KAAKK,KAAOmD,IAAInD,OAChBL,KAAK2C,GAAKa,IAAIG,WACd3D,KAAKsD,QAAUE,IAAIF,UAInBtD,KAAKW,eAAiB,IAAI6C,IAAInD,KAAK0D,mBACnC/D,KAAKa,iBAAmB,IAAI2C,IAAInD,KAAK2D,qBACrChE,KAAKe,gBAAkB,IAAIyC,IAAInD,KAAK4D,qBEWzBC,EAvCY,SAAArF,GAAa,IAChCsF,EADgC,SAAAC,GAEpC,SAAAD,EAAYrF,GAAO,IAAAiB,EAAA,OAAAX,OAAAa,EAAA,EAAAb,CAAAY,KAAAmE,IACjBpE,EAAAX,OAAAiF,EAAA,EAAAjF,CAAAY,KAAAZ,OAAAkF,EAAA,EAAAlF,CAAA+E,GAAAI,KAAAvE,KAAMlB,KAED0F,MAAQ,CACXzC,SAAU0C,KAAKC,MAAMC,aAAaC,QAAQ,cAJ3B7E,EAFiB,OAAAX,OAAAyF,EAAA,EAAAzF,CAAA+E,EAAAC,GAAAhF,OAAA0F,EAAA,EAAA1F,CAAA+E,EAAA,EAAAY,IAAA,oBAAAC,MAAA,WAUhB,IAAAC,EAAAjF,KAClBA,KAAKkF,SAAWlF,KAAKlB,MAAMK,SAASwC,mBAClC,SAAAI,GACE4C,aAAaQ,QAAQ,WAAYV,KAAKW,UAAUrD,IAChDkD,EAAKI,SAAS,CAAEtD,cAElB,WACE4C,aAAaW,WAAW,YACxBL,EAAKI,SAAS,CAAEtD,SAAU,WAlBI,CAAAgD,IAAA,uBAAAC,MAAA,WAwBlChF,KAAKkF,aAxB6B,CAAAH,IAAA,SAAAC,MAAA,WA4BlC,OACEjG,EAAAC,EAAAC,cAACsG,EAAgBC,SAAjB,CAA0BR,MAAOhF,KAAKwE,MAAMzC,UAC1ChD,EAAAC,EAAAC,cAACJ,EAAcmB,KAAKlB,YA9BUqF,EAAA,CACL1F,IAAMI,WAmCvC,OAAOD,EAAauF,oBCzCTsB,EAAO,ICwCLC,EAhCW,SAAAC,GAAS,OAAI,SAAA9G,GAAa,IAC5C+G,EAD4C,SAAAxB,GAAA,SAAAwB,IAAA,OAAAxG,OAAAa,EAAA,EAAAb,CAAAY,KAAA4F,GAAAxG,OAAAiF,EAAA,EAAAjF,CAAAY,KAAAZ,OAAAkF,EAAA,EAAAlF,CAAAwG,GAAAC,MAAA7F,KAAA8F,YAAA,OAAA1G,OAAAyF,EAAA,EAAAzF,CAAAwG,EAAAxB,GAAAhF,OAAA0F,EAAA,EAAA1F,CAAAwG,EAAA,EAAAb,IAAA,oBAAAC,MAAA,WAE5B,IAAAjF,EAAAC,KAClBA,KAAKkF,SAAWlF,KAAKlB,MAAMK,SAASwC,mBAClC,SAAAI,GACO4D,EAAU5D,IACbhC,EAAKjB,MAAMiH,QAAQC,KDZR,YCef,kBAAMjG,EAAKjB,MAAMiH,QAAQC,KDfV,eCM6B,CAAAjB,IAAA,uBAAAC,MAAA,WAc9ChF,KAAKkF,aAdyC,CAAAH,IAAA,SAAAC,MAAA,WAiBvC,IAAAC,EAAAjF,KACP,OACEjB,EAAAC,EAAAC,cAACsG,EAAgBrG,SAAjB,KACG,SAAA6C,GAAQ,OAAK4D,EAAU5D,GAAYhD,EAAAC,EAAAC,cAACJ,EAAcoG,EAAKnG,OAAY,WApB1B8G,EAAA,CAClBnH,IAAMI,WAyBtC,OAAOoH,YACLC,IACAtH,EAFKqH,CAGLL,KC5BWhH,IANO,SAAAuH,GAAA,IAAGhH,EAAHgH,EAAGhH,SAAH,OACpBJ,EAAAC,EAAAC,cAAA,UAAQmH,KAAK,SAASC,QAASlH,EAAS6B,WAAxC,cCaIsF,SAAiB,SAAAH,GAAA,IAAGpE,EAAHoE,EAAGpE,SAAH,OACrBhD,EAAAC,EAAAC,cAAA,cACEF,EAAAC,EAAAC,cAAA,0BACAF,EAAAC,EAAAC,cAAA,WACEF,EAAAC,EAAAC,cAAA,UACEF,EAAAC,EAAAC,cAAA,UACEF,EAAAC,EAAAC,cAACsH,EAAA,EAAD,CAAMC,GAAIC,GAAV,SAEF1H,EAAAC,EAAAC,cAAA,UACEF,EAAAC,EAAAC,cAACsH,EAAA,EAAD,CAAMC,GHvBO,YGuBb,YAEFzH,EAAAC,EAAAC,cAAA,UACEF,EAAAC,EAAAC,cAACsH,EAAA,EAAD,CAAMC,GHrBO,YGqBb,aAEAzE,EAASQ,MAAMmE,SC/BJ,UDgCX3E,EAASQ,MAAMmE,SC/BC,gBDgChB3H,EAAAC,EAAAC,cAAA,UACEF,EAAAC,EAAAC,cAACsH,EAAA,EAAD,CAAMC,GH3BQ,eG2Bd,eAGHzE,EAASQ,MAAMmE,SCrCH,UDsCX3H,EAAAC,EAAAC,cAAA,UACEF,EAAAC,EAAAC,cAACsH,EAAA,EAAD,CAAMC,GHlCG,UGkCT,UAGJzH,EAAAC,EAAAC,cAAA,UACEF,EAAAC,EAAAC,cAAC0H,EAAD,YAOJC,EAAoB,kBACxB7H,EAAAC,EAAAC,cAAA,cACEF,EAAAC,EAAAC,cAAA,0BACAF,EAAAC,EAAAC,cAAA,WACEF,EAAAC,EAAAC,cAAA,UACEF,EAAAC,EAAAC,cAAA,UACEF,EAAAC,EAAAC,cAACsH,EAAA,EAAD,CAAMC,GHtDO,WGsDb,gBAOKK,EAtDI,kBACjB9H,EAAAC,EAAAC,cAACsG,EAAgBrG,SAAjB,KACG,SAAA6C,GAAQ,OACPA,EAAWhD,EAAAC,EAAAC,cAAC6H,EAAD,CAAgB/E,SAAUA,IAAehD,EAAAC,EAAAC,cAAC8H,EAAD,iBECpDC,EAAgB,CACpBC,SAAU,GACV9G,MAAO,GACP+G,YAAa,GACbC,YAAa,GACbC,cAAc,EACdC,mBAAmB,EACnBC,MAAO,MAGHC,EAA4B,4BAE5BC,EAAwB,2RAQxBC,cACJ,SAAAA,EAAY3I,GAAO,IAAAiB,EAAA,OAAAX,OAAAa,EAAA,EAAAb,CAAAY,KAAAyH,IACjB1H,EAAAX,OAAAiF,EAAA,EAAAjF,CAAAY,KAAAZ,OAAAkF,EAAA,EAAAlF,CAAAqI,GAAAlD,KAAAvE,KAAMlB,KAKR4I,SAAW,SAAAC,GAAS,IAAAC,EAOd7H,EAAKyE,MALPyC,EAFgBW,EAEhBX,SACA9G,EAHgByH,EAGhBzH,MACA+G,EAJgBU,EAIhBV,YACAE,EALgBQ,EAKhBR,aACAC,EANgBO,EAMhBP,kBAEIQ,EAAW,GACbT,GACFS,EAAS7B,KAAK,SAEZqB,GACFQ,EAAS7B,KAAK,cAGhBjG,EAAKjB,MAAMK,SACRe,iCAAiCC,EAAO+G,GACxC/E,KAAK,SAAAJ,GAEJ,OAAOhC,EAAKjB,MAAMK,SAAS6C,KAAKD,EAASC,KAAKC,KAAK6F,IAAI,CACrDb,WACA9G,QACA0H,eAGH1F,KAAK,WACJ,OAAOpC,EAAKjB,MAAMK,SAASiC,4BAE5Be,KAAK,WACJpC,EAAKsF,SAALjG,OAAAoD,EAAA,EAAApD,CAAA,GAAmB4H,IACnBjH,EAAKjB,MAAMiH,QAAQC,KAAKS,KAEzBsB,MAAM,SAAAT,GACDA,EAAMU,OAAST,IACjBD,EAAMvE,QAAUyE,GAGlBzH,EAAKsF,SAAS,CAAEiC,YAGpBK,EAAMM,kBA/CWlI,EAkDnBmI,SAAW,SAAAP,GACT5H,EAAKsF,SAALjG,OAAA+I,EAAA,EAAA/I,CAAA,GAAiBuI,EAAMS,OAAOC,KAAOV,EAAMS,OAAOpD,SAnDjCjF,EAsDnBuI,iBAAmB,SAAAX,GACjB5H,EAAKsF,SAALjG,OAAA+I,EAAA,EAAA/I,CAAA,GAAiBuI,EAAMS,OAAOC,KAAOV,EAAMS,OAAOG,WApDlDxI,EAAKyE,MAALpF,OAAAoD,EAAA,EAAApD,CAAA,GAAkB4H,GAHDjH,wEA0DV,IAAAyI,EASHxI,KAAKwE,MAPPyC,EAFKuB,EAELvB,SACA9G,EAHKqI,EAGLrI,MACA+G,EAJKsB,EAILtB,YACAC,EALKqB,EAKLrB,YACAG,EANKkB,EAMLlB,MACAD,EAPKmB,EAOLnB,kBACAD,EARKoB,EAQLpB,aAGIqB,EACJvB,IAAgBC,GACA,KAAhBD,GACU,KAAV/G,GACa,KAAb8G,EAEF,OACElI,EAAAC,EAAAC,cAAA,QAAMyI,SAAU1H,KAAK0H,UACnB3I,EAAAC,EAAAC,cAAA,SACEoJ,KAAK,WACLrD,MAAOiC,EACPiB,SAAUlI,KAAKkI,SACf9B,KAAK,OACLsC,YAAY,cAEd3J,EAAAC,EAAAC,cAAA,SACEoJ,KAAK,QACLrD,MAAO7E,EACP+H,SAAUlI,KAAKkI,SACf9B,KAAK,OACLsC,YAAY,kBAEd3J,EAAAC,EAAAC,cAAA,SACEoJ,KAAK,cACLrD,MAAOkC,EACPgB,SAAUlI,KAAKkI,SACf9B,KAAK,WACLsC,YAAY,aAEd3J,EAAAC,EAAAC,cAAA,SACEoJ,KAAK,cACLrD,MAAOmC,EACPe,SAAUlI,KAAKkI,SACf9B,KAAK,WACLsC,YAAY,qBAEd3J,EAAAC,EAAAC,cAAA,8BAEEF,EAAAC,EAAAC,cAAA,SACEoJ,KAAK,eACLjC,KAAK,WACLmC,QAASnB,EACTc,SAAUlI,KAAKsI,oBAGnBvJ,EAAAC,EAAAC,cAAA,mCAEEF,EAAAC,EAAAC,cAAA,SACEoJ,KAAK,oBACLjC,KAAK,WACLmC,QAASlB,EACTa,SAAUlI,KAAKsI,oBAGnBvJ,EAAAC,EAAAC,cAAA,UAAQ0J,SAAUF,EAAWrC,KAAK,UAAlC,WAICkB,GAASvI,EAAAC,EAAAC,cAAA,SAAIqI,EAAMvE,iBAhIClE,aAsIvB+J,EAAa,kBACjB7J,EAAAC,EAAAC,cAAA,mCACyBF,EAAAC,EAAAC,cAACsH,EAAA,EAAD,CAAMC,GLxKV,WKwKI,aAIrBqC,EAAa3C,YAAWtH,EAAa6I,IAE5BqB,EAzKI,kBACjB/J,EAAAC,EAAAC,cAAA,WACEF,EAAAC,EAAAC,cAAA,oBACAF,EAAAC,EAAAC,cAAC4J,EAAD,QCIE7B,EAAgB,CACpB7G,MAAO,GACPmH,MAAO,MAGHyB,cACJ,SAAAA,EAAYjK,GAAO,IAAAiB,EAAA,OAAAX,OAAAa,EAAA,EAAAb,CAAAY,KAAA+I,IACjBhJ,EAAAX,OAAAiF,EAAA,EAAAjF,CAAAY,KAAAZ,OAAAkF,EAAA,EAAAlF,CAAA2J,GAAAxE,KAAAvE,KAAMlB,KAKR4I,SAAW,SAAAC,GAAS,IACVxH,EAAUJ,EAAKyE,MAAfrE,MAERJ,EAAKjB,MAAMK,SACR+B,gBAAgBf,GAChBgC,KAAK,WACJpC,EAAKsF,SAALjG,OAAAoD,EAAA,EAAApD,CAAA,GAAmB4H,MAEpBe,MAAM,SAAAT,GACLvH,EAAKsF,SAAS,CAAEiC,YAGpBK,EAAMM,kBAlBWlI,EAqBnBmI,SAAW,SAAAP,GACT5H,EAAKsF,SAALjG,OAAA+I,EAAA,EAAA/I,CAAA,GAAiBuI,EAAMS,OAAOC,KAAOV,EAAMS,OAAOpD,SAnBlDjF,EAAKyE,MAALpF,OAAAoD,EAAA,EAAApD,CAAA,GAAkB4H,GAHDjH,wEAyBV,IAAA6H,EACkB5H,KAAKwE,MAAtBrE,EADDyH,EACCzH,MAAOmH,EADRM,EACQN,MAETmB,EAAsB,KAAVtI,EAElB,OACEpB,EAAAC,EAAAC,cAAA,QAAMyI,SAAU1H,KAAK0H,UACnB3I,EAAAC,EAAAC,cAAA,SAAOoJ,KAAK,QAAQrD,MAAOhF,KAAKwE,MAAMrE,MAAO+H,SAAUlI,KAAKkI,SAAU9B,KAAK,OAAOsC,YAAY,kBAC9F3J,EAAAC,EAAAC,cAAA,UAAQ0J,SAAUF,EAAWrC,KAAK,UAAlC,qBAICkB,GAASvI,EAAAC,EAAAC,cAAA,SAAIqI,EAAMvE,iBAtCSlE,aA4C/BmK,EAAqB,kBACzBjK,EAAAC,EAAAC,cAAA,SACEF,EAAAC,EAAAC,cAACsH,EAAA,EAAD,CAAMC,GN5DqB,cM4D3B,sBAIWyC,EA9DY,kBACzBlK,EAAAC,EAAAC,cAAA,WACEF,EAAAC,EAAAC,cAAA,4BACAF,EAAAC,EAAAC,cAACiK,EAAD,QA6DEA,EAAqBtK,EAAamK,GCjDlC/B,EAAgB,CACpB7G,MAAO,GACPC,SAAU,GACVkH,MAAO,MAGHC,EAA4B,gDAE5BC,EAAwB,mMAOxB2B,cACJ,SAAAA,EAAYrK,GAAO,IAAAiB,EAAA,OAAAX,OAAAa,EAAA,EAAAb,CAAAY,KAAAmJ,IACjBpJ,EAAAX,OAAAiF,EAAA,EAAAjF,CAAAY,KAAAZ,OAAAkF,EAAA,EAAAlF,CAAA+J,GAAA5E,KAAAvE,KAAMlB,KAKR4I,SAAW,SAAAC,GAAS,IAAAC,EACU7H,EAAKyE,MAAzBrE,EADUyH,EACVzH,MAAOC,EADGwH,EACHxH,SAEfL,EAAKjB,MAAMK,SACRoB,6BAA6BJ,EAAOC,GACpC+B,KAAK,WACJpC,EAAKsF,SAALjG,OAAAoD,EAAA,EAAApD,CAAA,GAAmB4H,IACnBjH,EAAKjB,MAAMiH,QAAQC,KAAKS,KAEzBsB,MAAM,SAAAT,GACLvH,EAAKsF,SAAS,CAAEiC,YAGpBK,EAAMM,kBAnBWlI,EAsBnBmI,SAAW,SAAAP,GACT5H,EAAKsF,SAALjG,OAAA+I,EAAA,EAAA/I,CAAA,GAAiBuI,EAAMS,OAAOC,KAAOV,EAAMS,OAAOpD,SApBlDjF,EAAKyE,MAALpF,OAAAoD,EAAA,EAAApD,CAAA,GAAkB4H,GAHDjH,wEA0BV,IAAAyI,EAC4BxI,KAAKwE,MAAhCrE,EADDqI,EACCrI,MAAOC,EADRoI,EACQpI,SAAUkH,EADlBkB,EACkBlB,MAEnBmB,EAAyB,KAAbrI,GAA6B,KAAVD,EAErC,OACEpB,EAAAC,EAAAC,cAAA,QAAMyI,SAAU1H,KAAK0H,UACnB3I,EAAAC,EAAAC,cAAA,SAAOoJ,KAAK,QAAQrD,MAAO7E,EAAO+H,SAAUlI,KAAKkI,SAAU9B,KAAK,OAAOsC,YAAY,kBACnF3J,EAAAC,EAAAC,cAAA,SAAOoJ,KAAK,WAAWrD,MAAO5E,EAAU8H,SAAUlI,KAAKkI,SAAU9B,KAAK,WAAWsC,YAAY,aAC7F3J,EAAAC,EAAAC,cAAA,UAAQ0J,SAAUF,EAAWrC,KAAK,UAAlC,WAICkB,GAASvI,EAAAC,EAAAC,cAAA,SAAIqI,EAAMvE,iBAxCClE,aA8CvBuK,cACJ,SAAAA,EAAYtK,GAAO,IAAAmG,EAAA,OAAA7F,OAAAa,EAAA,EAAAb,CAAAY,KAAAoJ,IACjBnE,EAAA7F,OAAAiF,EAAA,EAAAjF,CAAAY,KAAAZ,OAAAkF,EAAA,EAAAlF,CAAAgK,GAAA7E,KAAAvE,KAAMlB,KAKR4I,SAAW,SAAAC,GACT1C,EAAKnG,MAAMK,SACRsB,qBACA0B,KAAK,SAAAkH,GAEJ,OAAOpE,EAAKnG,MAAMK,SAAS6C,KAAKqH,EAAerH,KAAKC,KAAK6F,IAAI,CAC3Db,SAAUoC,EAAerH,KAAKsH,YAC9BnJ,MAAOkJ,EAAerH,KAAK7B,MAC3BoC,MAAO,OAGVJ,KAAK,WACJ8C,EAAKI,SAAS,CAAEiC,MAAO,OACvBrC,EAAKnG,MAAMiH,QAAQC,KAAKS,KAEzBsB,MAAM,SAAAT,GACDA,EAAMU,OAAST,IACjBD,EAAMvE,QAAUyE,GAGlBvC,EAAKI,SAAS,CAAEiC,YAGpBK,EAAMM,kBA1BNhD,EAAKT,MAAQ,CAAE8C,MAAO,MAHLrC,wEAgCV,IACCqC,EAAUtH,KAAKwE,MAAf8C,MAER,OACEvI,EAAAC,EAAAC,cAAA,QAAMyI,SAAU1H,KAAK0H,UACnB3I,EAAAC,EAAAC,cAAA,UAAQmH,KAAK,UAAb,uBAECkB,GAASvI,EAAAC,EAAAC,cAAA,SAAIqI,EAAMvE,iBAxCGlE,aA8CzB0K,cACJ,SAAAA,EAAYzK,GAAO,IAAA0K,EAAA,OAAApK,OAAAa,EAAA,EAAAb,CAAAY,KAAAuJ,IACjBC,EAAApK,OAAAiF,EAAA,EAAAjF,CAAAY,KAAAZ,OAAAkF,EAAA,EAAAlF,CAAAmK,GAAAhF,KAAAvE,KAAMlB,KAKR4I,SAAW,SAAAC,GACT6B,EAAK1K,MAAMK,SACRyB,uBACAuB,KAAK,SAAAkH,GAEJ,OAAOG,EAAK1K,MAAMK,SAAS6C,KAAKqH,EAAerH,KAAKC,KAAK6F,IAAI,CAC3Db,SAAUoC,EAAeI,mBAAmBC,QAAQrB,KACpDlI,MAAOkJ,EAAeI,mBAAmBC,QAAQvJ,MACjDoC,MAAO,OAGVJ,KAAK,WACJqH,EAAKnE,SAAS,CAAEiC,MAAO,OACvBkC,EAAK1K,MAAMiH,QAAQC,KAAKS,KAEzBsB,MAAM,SAAAT,GACDA,EAAMU,OAAST,IACjBD,EAAMvE,QAAUyE,GAGlBgC,EAAKnE,SAAS,CAAEiC,YAGpBK,EAAMM,kBA1BNuB,EAAKhF,MAAQ,CAAE8C,MAAO,MAHLkC,wEAgCV,IACClC,EAAUtH,KAAKwE,MAAf8C,MAER,OACEvI,EAAAC,EAAAC,cAAA,QAAMyI,SAAU1H,KAAK0H,UACnB3I,EAAAC,EAAAC,cAAA,UAAQmH,KAAK,UAAb,yBAECkB,GAASvI,EAAAC,EAAAC,cAAA,SAAIqI,EAAMvE,iBAxCKlE,aA8C3B8K,cACJ,SAAAA,EAAY7K,GAAO,IAAA8K,EAAA,OAAAxK,OAAAa,EAAA,EAAAb,CAAAY,KAAA2J,IACjBC,EAAAxK,OAAAiF,EAAA,EAAAjF,CAAAY,KAAAZ,OAAAkF,EAAA,EAAAlF,CAAAuK,GAAApF,KAAAvE,KAAMlB,KAKR4I,SAAW,SAAAC,GACTiC,EAAK9K,MAAMK,SACR2B,sBACAqB,KAAK,SAAAkH,GAEJ,OAAOO,EAAK9K,MAAMK,SAAS6C,KAAKqH,EAAerH,KAAKC,KAAK6F,IAAI,CAC3Db,SAAUoC,EAAeI,mBAAmBC,QAAQrB,KACpDlI,MAAOkJ,EAAeI,mBAAmBC,QAAQvJ,MACjDoC,MAAO,OAGVJ,KAAK,WACJyH,EAAKvE,SAAS,CAAEiC,MAAO,OACvBsC,EAAK9K,MAAMiH,QAAQC,KAAKS,KAEzBsB,MAAM,SAAAT,GACDA,EAAMU,OAAST,IACjBD,EAAMvE,QAAUyE,GAGlBoC,EAAKvE,SAAS,CAAEiC,YAGpBK,EAAMM,kBA1BN2B,EAAKpF,MAAQ,CAAE8C,MAAO,MAHLsC,wEAgCV,IACCtC,EAAUtH,KAAKwE,MAAf8C,MAER,OACEvI,EAAAC,EAAAC,cAAA,QAAMyI,SAAU1H,KAAK0H,UACnB3I,EAAAC,EAAAC,cAAA,UAAQmH,KAAK,UAAb,wBAECkB,GAASvI,EAAAC,EAAAC,cAAA,SAAIqI,EAAMvE,iBAxCIlE,aA8C1BgL,GAAa5D,YACjBC,IACAtH,EAFiBqH,CAGjBkD,GAEIW,GAAe7D,YACnBC,IACAtH,EAFmBqH,CAGnBmD,GAEIW,GAAiB9D,YACrBC,IACAtH,EAFqBqH,CAGrBsD,GAEIS,GAAgB/D,YACpBC,IACAtH,EAFoBqH,CAGpB0D,GAEaM,GAvOI,kBACjBlL,EAAAC,EAAAC,cAAA,WACEF,EAAAC,EAAAC,cAAA,oBACAF,EAAAC,EAAAC,cAAC4K,GAAD,MACA9K,EAAAC,EAAAC,cAAC6K,GAAD,MACA/K,EAAAC,EAAAC,cAAC8K,GAAD,MACAhL,EAAAC,EAAAC,cAAC+K,GAAD,MACAjL,EAAAC,EAAAC,cAACiL,EAAD,MACAnL,EAAAC,EAAAC,cAACkL,EAAD,QCXEC,eACJ,SAAAA,EAAYtL,GAAO,IAAAiB,EAAA,OAAAX,OAAAa,EAAA,EAAAb,CAAAY,KAAAoK,IACjBrK,EAAAX,OAAAiF,EAAA,EAAAjF,CAAAY,KAAAZ,OAAAkF,EAAA,EAAAlF,CAAAgL,GAAA7F,KAAAvE,KAAMlB,KAED0F,MAAQ,CACX1B,MAAO,MAJQ/C,mFAQC,IAAAkF,EAAAjF,KAClBA,KAAKlB,MAAMK,SAAS2D,QAAQuH,GAAG,QAAS,SAAAjI,GACtC6C,EAAKI,SAAS,CACZvC,MAAOV,EAASE,yDAMpBtC,KAAKlB,MAAMK,SAAS2D,QAAQwH,uCAI5B,OACEvL,EAAAC,EAAAC,cAAA,WACEF,EAAAC,EAAAC,cAAA,uBACAF,EAAAC,EAAAC,cAAA,yEAzBeJ,aAiCRoH,eACbrH,EACA8G,EAJgB,SAAA3D,GAAQ,QAAMA,IAEjBkE,CAGbmE,ICtCIpD,GAAgB,CACpBE,YAAa,GACbC,YAAa,GACbG,MAAO,MAGHiD,eACJ,SAAAA,EAAYzL,GAAO,IAAAiB,EAAA,OAAAX,OAAAa,EAAA,EAAAb,CAAAY,KAAAuK,IACjBxK,EAAAX,OAAAiF,EAAA,EAAAjF,CAAAY,KAAAZ,OAAAkF,EAAA,EAAAlF,CAAAmL,GAAAhG,KAAAvE,KAAMlB,KAKR4I,SAAW,SAAAC,GAAS,IACVT,EAAgBnH,EAAKyE,MAArB0C,YAERnH,EAAKjB,MAAMK,SACRsC,iBAAiByF,GACjB/E,KAAK,WACJpC,EAAKsF,SAALjG,OAAAoD,EAAA,EAAApD,CAAA,GAAmB4H,OAEpBe,MAAM,SAAAT,GACLvH,EAAKsF,SAAS,CAAEiC,YAGpBK,EAAMM,kBAlBWlI,EAqBnBmI,SAAW,SAAAP,GACT5H,EAAKsF,SAALjG,OAAA+I,EAAA,EAAA/I,CAAA,GAAiBuI,EAAMS,OAAOC,KAAOV,EAAMS,OAAOpD,SAnBlDjF,EAAKyE,MAALpF,OAAAoD,EAAA,EAAApD,CAAA,GAAkB4H,IAHDjH,wEAyBV,IAAA6H,EACqC5H,KAAKwE,MAAzC0C,EADDU,EACCV,YAAaC,EADdS,EACcT,YAAaG,EAD3BM,EAC2BN,MAE5BmB,EAAYvB,IAAgBC,GAA+B,KAAhBD,EAEjD,OACEnI,EAAAC,EAAAC,cAAA,QAAMyI,SAAU1H,KAAK0H,UACnB3I,EAAAC,EAAAC,cAAA,SACEoJ,KAAK,cACLrD,MAAOkC,EACPgB,SAAUlI,KAAKkI,SACf9B,KAAK,WACLsC,YAAY,iBAEd3J,EAAAC,EAAAC,cAAA,SACEoJ,KAAK,cACLrD,MAAOmC,EACPe,SAAUlI,KAAKkI,SACf9B,KAAK,WACLsC,YAAY,yBAEd3J,EAAAC,EAAAC,cAAA,UAAQ0J,SAAUF,EAAWrC,KAAK,UAAlC,qBAICkB,GAASvI,EAAAC,EAAAC,cAAA,SAAIqI,EAAMvE,iBAnDKlE,aAyDlBD,KAAa2L,IC3DtBC,GAAkB,CACtB,CACEC,GAAI,WACJC,SAAU,MAEZ,CACED,GAAI,aACJC,SAAU,kBAEZ,CACED,GAAI,eACJC,SAAU,oBAEZ,CACED,GAAI,cACJC,SAAU,oBAiBRC,eACJ,SAAAA,EAAY7L,GAAO,IAAAiB,EAAA,OAAAX,OAAAa,EAAA,EAAAb,CAAAY,KAAA2K,IACjB5K,EAAAX,OAAAiF,EAAA,EAAAjF,CAAAY,KAAAZ,OAAAkF,EAAA,EAAAlF,CAAAuL,GAAApG,KAAAvE,KAAMlB,KAYR8L,mBAAqB,WACnB7K,EAAKjB,MAAMK,SAASkB,KACjBwK,2BAA2B9K,EAAKjB,MAAMiD,SAAS5B,OAC/CgC,KAAK,SAAA2I,GAAmB,OAAI/K,EAAKsF,SAAS,CAAEyF,sBAAqBxD,MAAO,SACxES,MAAM,SAAAT,GAAK,OAAIvH,EAAKsF,SAAS,CAAEiC,aAjBjBvH,EAoBnBgL,kBAAoB,SAAAL,GAClB3K,EAAKjB,MAAMK,SAASkB,KAAKgB,YACtB2J,cAAcjL,EAAKjB,MAAMK,SAASuL,IAClCvI,KAAKpC,EAAK6K,oBACV7C,MAAM,SAAAT,GAAK,OAAIvH,EAAKsF,SAAS,CAAEiC,aAxBjBvH,EA2BnBkL,mBAAqB,SAAA7K,GACnB,IAAM8K,EAAanL,EAAKjB,MAAMK,SAAS0E,kBAAkBqH,WAAWnL,EAAKjB,MAAMiD,SAAS5B,MAAOC,GAE/FL,EAAKjB,MAAMK,SAASkB,KAAKgB,YACtB8J,kCAAkCD,GAClC/I,KAAKpC,EAAK6K,oBACV7C,MAAM,SAAAT,GAAK,OAAIvH,EAAKsF,SAAS,CAAEiC,aAjCjBvH,EAoCnBqL,SAAW,SAAAC,GACTtL,EAAKjB,MAAMK,SAASkB,KAAKgB,YACtBiK,OAAOD,GACPlJ,KAAKpC,EAAK6K,oBACV7C,MAAM,SAAAT,GAAK,OAAIvH,EAAKsF,SAAS,CAAEiC,aArClCvH,EAAKyE,MAAQ,CACXsG,oBAAqB,GACrBxD,MAAO,MALQvH,mFAUjBC,KAAK4K,sDAiCE,IAAA3F,EAAAjF,KAAA4H,EACgC5H,KAAKwE,MAApCsG,EADDlD,EACCkD,oBAAqBxD,EADtBM,EACsBN,MAE7B,OACEvI,EAAAC,EAAAC,cAAA,8BAEEF,EAAAC,EAAAC,cAAA,UACGuL,GAAgBe,IAAI,SAAAC,GACnB,IAAMC,EAA6C,IAA/BX,EAAoBY,OAClCC,EAAYb,EAAoBpE,SAAS8E,EAAaf,IAE5D,OACE1L,EAAAC,EAAAC,cAAA,MAAI8F,IAAKyG,EAAaf,IACC,aAApBe,EAAaf,GACZ1L,EAAAC,EAAAC,cAAC2M,GAAD,CACEH,YAAaA,EACbE,UAAWA,EACXH,aAAcA,EACdK,OAAQ5G,EAAKgG,mBACbG,SAAUnG,EAAKmG,WAGjBrM,EAAAC,EAAAC,cAAC6M,GAAD,CACEL,YAAaA,EACbE,UAAWA,EACXH,aAAcA,EACdK,OAAQ5G,EAAK8F,kBACbK,SAAUnG,EAAKmG,eAO1B9D,GAASA,EAAMvE,gBA9EUlE,aAoF5BkN,GAAoB,SAAA5F,GAAA,IAAGsF,EAAHtF,EAAGsF,YAAaE,EAAhBxF,EAAgBwF,UAAWH,EAA3BrF,EAA2BqF,aAAcK,EAAzC1F,EAAyC0F,OAAQT,EAAjDjF,EAAiDiF,SAAjD,OACxBO,EACE5M,EAAAC,EAAAC,cAAA,UAAQmH,KAAK,SAASC,QAAS,kBAAM+E,EAASI,EAAaf,KAAK9B,SAAU8C,GAA1E,cACcD,EAAaf,IAG3B1L,EAAAC,EAAAC,cAAA,UAAQmH,KAAK,SAASC,QAAS,kBAAMwF,EAAOL,EAAad,YAAzD,QACQc,EAAaf,KAInBuB,eACJ,SAAAA,EAAYlN,GAAO,IAAA0K,EAAA,OAAApK,OAAAa,EAAA,EAAAb,CAAAY,KAAAgM,IACjBxC,EAAApK,OAAAiF,EAAA,EAAAjF,CAAAY,KAAAZ,OAAAkF,EAAA,EAAAlF,CAAA4M,GAAAzH,KAAAvE,KAAMlB,KAKR4I,SAAW,SAAAC,GACTA,EAAMM,iBAENuB,EAAK1K,MAAM+M,OAAOrC,EAAKhF,MAAM0C,aAC7BsC,EAAKnE,SAAS,CAAE6B,YAAa,GAAIC,YAAa,MAV7BqC,EAanBtB,SAAW,SAAAP,GACT6B,EAAKnE,SAALjG,OAAA+I,EAAA,EAAA/I,CAAA,GAAiBuI,EAAMS,OAAOC,KAAOV,EAAMS,OAAOpD,SAXlDwE,EAAKhF,MAAQ,CAAE0C,YAAa,GAAIC,YAAa,IAH5BqC,wEAiBV,IAAAyC,EACoDjM,KAAKlB,MAAxD2M,EADDQ,EACCR,YAAaE,EADdM,EACcN,UAAWH,EADzBS,EACyBT,aAAcJ,EADvCa,EACuCb,SADvC5C,EAG8BxI,KAAKwE,MAAlC0C,EAHDsB,EAGCtB,YAAaC,EAHdqB,EAGcrB,YAEfsB,EAAYvB,IAAgBC,GAA+B,KAAhBD,EAEjD,OAAOyE,EACL5M,EAAAC,EAAAC,cAAA,UAAQmH,KAAK,SAASC,QAAS,kBAAM+E,EAASI,EAAaf,KAAK9B,SAAU8C,GAA1E,cACcD,EAAaf,IAG3B1L,EAAAC,EAAAC,cAAA,QAAMyI,SAAU1H,KAAK0H,UACnB3I,EAAAC,EAAAC,cAAA,SACEoJ,KAAK,cACLrD,MAAOkC,EACPgB,SAAUlI,KAAKkI,SACf9B,KAAK,WACLsC,YAAY,iBAEd3J,EAAAC,EAAAC,cAAA,SACEoJ,KAAK,cACLrD,MAAOmC,EACPe,SAAUlI,KAAKkI,SACf9B,KAAK,WACLsC,YAAY,yBAGd3J,EAAAC,EAAAC,cAAA,UAAQ0J,SAAUF,EAAWrC,KAAK,UAAlC,QACQoF,EAAaf,YA/CI5L,aAsD3BqN,GAAkBtN,EAAa+L,IAItB1E,eAAQP,EAFL,SAAA3D,GAAQ,QAAMA,IAEjBkE,CAtKK,kBAClBlH,EAAAC,EAAAC,cAACsG,EAAgBrG,SAAjB,KACG,SAAA6C,GAAQ,OACPhD,EAAAC,EAAAC,cAAA,WACEF,EAAAC,EAAAC,cAAA,sBAAc8C,EAAS5B,OACvBpB,EAAAC,EAAAC,cAACiK,EAAD,MACAnK,EAAAC,EAAAC,cAACkN,GAAD,MACApN,EAAAC,EAAAC,cAACiN,GAAD,CAAiBnK,SAAUA,SC5B7BqK,eACJ,SAAAA,EAAYtN,GAAO,IAAAiB,EAAA,OAAAX,OAAAa,EAAA,EAAAb,CAAAY,KAAAoM,IACjBrM,EAAAX,OAAAiF,EAAA,EAAAjF,CAAAY,KAAAZ,OAAAkF,EAAA,EAAAlF,CAAAgN,GAAA7H,KAAAvE,KAAMlB,KAED0F,MAAQ,CACX6H,SAAS,EACTvJ,MAAO,IALQ/C,mFASC,IAAAkF,EAAAjF,KAClBA,KAAKqF,SAAS,CAAEgH,SAAS,IAEzBrM,KAAKlB,MAAMK,SAAS2D,QAAQuH,GAAG,QAAS,SAAAjI,GACtC,IAAMkK,EAAclK,EAASE,MAEvBiK,EAAYnN,OAAOoN,KAAKF,GAAaf,IAAI,SAAAxG,GAAG,OAAA3F,OAAAoD,EAAA,EAAApD,CAAA,GAC7CkN,EAAYvH,GADiC,CAEhD9C,IAAK8C,MAGPE,EAAKI,SAAS,CACZvC,MAAOyJ,EACPF,SAAS,qDAMbrM,KAAKlB,MAAMK,SAAS2D,QAAQwH,uCAGrB,IAAA1C,EACoB5H,KAAKwE,MAAxB1B,EADD8E,EACC9E,MAAOuJ,EADRzE,EACQyE,QAEf,OACEtN,EAAAC,EAAAC,cAAA,WACEF,EAAAC,EAAAC,cAAA,4BACCoN,GAAWtN,EAAAC,EAAAC,cAAA,0BACZF,EAAAC,EAAAC,cAAA,UACG6D,EAAMyI,IAAI,SAAAvJ,GAAI,OACbjD,EAAAC,EAAAC,cAAA,MAAI8F,IAAK/C,EAAKC,KACZlD,EAAAC,EAAAC,cAAA,YACEF,EAAAC,EAAAC,cAAA,qBADF,IACwB+C,EAAKC,KAE7BlD,EAAAC,EAAAC,cAAA,YACEF,EAAAC,EAAAC,cAAA,yBADF,IAC4B+C,EAAK7B,OAEjCpB,EAAAC,EAAAC,cAAA,YACEF,EAAAC,EAAAC,cAAA,2BADF,IAC8B+C,EAAKiF,UAEnClI,EAAAC,EAAAC,cAAA,YACEF,EAAAC,EAAAC,cAACsH,EAAA,EAAD,CACEC,GAAI,CACFiG,SAAQ,GAAA5J,OXvDP,SWuDO,KAAAA,OAAqBb,EAAKC,KAClCuC,MAAO,CAAExC,UAHb,wBApDOnD,aAqERD,KAAawN,ICvEtBM,eACJ,SAAAA,EAAY5N,GAAO,IAAAiB,EAAA,OAAAX,OAAAa,EAAA,EAAAb,CAAAY,KAAA0M,IACjB3M,EAAAX,OAAAiF,EAAA,EAAAjF,CAAAY,KAAAZ,OAAAkF,EAAA,EAAAlF,CAAAsN,GAAAnI,KAAAvE,KAAMlB,KA8BR6N,yBAA2B,WACzB5M,EAAKjB,MAAMK,SAAS+B,gBAAgBnB,EAAKyE,MAAMxC,KAAK7B,QA7BpDJ,EAAKyE,MAALpF,OAAAoD,EAAA,EAAApD,CAAA,CACEiN,SAAS,EACTrK,KAAM,MACHlD,EAAMT,SAASmG,OANHzE,mFAUC,IAAAkF,EAAAjF,KACdA,KAAKwE,MAAMxC,OAIfhC,KAAKqF,SAAS,CAAEgH,SAAS,IAEzBrM,KAAKlB,MAAMK,SACR6C,KAAKhC,KAAKlB,MAAMP,MAAMqO,OAAOnC,IAC7BJ,GAAG,QAAS,SAAAjI,GACX6C,EAAKI,SAAS,CACZrD,KAAMI,EAASE,MACf+J,SAAS,sDAMfrM,KAAKlB,MAAMK,SAAS6C,KAAKhC,KAAKlB,MAAMP,MAAMqO,OAAOnC,IAAIH,uCAO9C,IAAA1C,EACmB5H,KAAKwE,MAAvBxC,EADD4F,EACC5F,KAAMqK,EADPzE,EACOyE,QAEd,OACEtN,EAAAC,EAAAC,cAAA,WACEF,EAAAC,EAAAC,cAAA,mBAAWe,KAAKlB,MAAMP,MAAMqO,OAAOnC,GAAnC,KACC4B,GAAWtN,EAAAC,EAAAC,cAAA,0BAEX+C,GACCjD,EAAAC,EAAAC,cAAA,WACEF,EAAAC,EAAAC,cAAA,YACEF,EAAAC,EAAAC,cAAA,qBADF,IACwB+C,EAAKC,KAE7BlD,EAAAC,EAAAC,cAAA,YACEF,EAAAC,EAAAC,cAAA,yBADF,IAC4B+C,EAAK7B,OAEjCpB,EAAAC,EAAAC,cAAA,YACEF,EAAAC,EAAAC,cAAA,2BADF,IAC8B+C,EAAKiF,UAEnClI,EAAAC,EAAAC,cAAA,YACEF,EAAAC,EAAAC,cAAA,UAAQmH,KAAK,SAASC,QAASrG,KAAK2M,0BAApC,iCAxDS9N,aAmERD,KAAa8N,ICjDbzG,eAAQP,EAFL,SAAA3D,GAAQ,OAAIA,GAAYA,EAASQ,MAAMmE,STpBpC,WSsBNT,CAdG,kBAChBlH,EAAAC,EAAAC,cAAA,WACEF,EAAAC,EAAAC,cAAA,mBACAF,EAAAC,EAAAC,cAAA,wEAEAF,EAAAC,EAAAC,cAAC4N,EAAA,EAAD,KACE9N,EAAAC,EAAAC,cAAC6N,EAAA,EAAD,CAAOC,OAAK,EAACC,KbRU,aaQkBC,UAAWP,KACpD3N,EAAAC,EAAAC,cAAC6N,EAAA,EAAD,CAAOC,OAAK,EAACC,KbVE,SaUkBC,UAAWb,SCT5Cc,eACJ,SAAAA,EAAYpO,GAAO,IAAAiB,EAAA,OAAAX,OAAAa,EAAA,EAAAb,CAAAY,KAAAkN,IACjBnN,EAAAX,OAAAiF,EAAA,EAAAjF,CAAAY,KAAAZ,OAAAkF,EAAA,EAAAlF,CAAA8N,GAAA3I,KAAAvE,KAAMlB,KAED0F,MAAQ,CACXrB,MAAO,GACPpB,SAAU0C,KAAKC,MAAMC,aAAaC,QAAQ,aAC1CyH,SAAS,GANMtM,mFAUC,IAAAkF,EAAAjF,KAClBA,KAAKqF,SAAS,CAAEgH,SAAS,IAEzBrM,KAAKlB,MAAMK,SAASgE,MAAMnD,KAAKwE,MAAMzC,SAASE,KAAKoI,GAAG,QAAS,SAAAjI,GAC7D,IAAM+K,EAAc/K,EAASE,MAEvB8K,EAAYhO,OAAOoN,KAAKW,GAAa5B,IAAI,SAAAxG,GAAG,OAAA3F,OAAAoD,EAAA,EAAApD,CAAA,GAC7C+N,EAAYpI,GADiC,CAEhD9C,IAAK8C,MAGPE,EAAKI,SAAS,CACZlC,MAAOiK,EACPf,SAAS,qDAMbrM,KAAKlB,MAAMK,SAASgE,QAAQmH,uCAGrB,IAAA1C,EACoB5H,KAAKwE,MAAxBrB,EADDyE,EACCzE,MAAOkJ,EADRzE,EACQyE,QACf,OACEtN,EAAAC,EAAAC,cAAA,WACEF,EAAAC,EAAAC,cAAA,6BACCoN,GAAWtN,EAAAC,EAAAC,cAAA,0BACZF,EAAAC,EAAAC,cAAA,UACGkE,EAAMoI,IAAI,SAAAtI,GAAI,OACblE,EAAAC,EAAAC,cAAA,MAAI8F,IAAK9B,EAAKC,KACZnE,EAAAC,EAAAC,cAAA,uCACAF,EAAAC,EAAAC,cAACsH,EAAA,EAAD,CACEC,GAAI,CACFiG,SAAQ,GAAA5J,Od1CL,Sc0CK,KAAAA,OAAqBI,EAAKC,KAClCsB,MAAO,CAAEvB,UAGVA,EAAKC,iBAjDCrE,aA2DRD,KAAasO,IC7DtBG,sBACJ,SAAAA,EAAYvO,GAAO,IAAAiB,EAAA,OAAAX,OAAAa,EAAA,EAAAb,CAAAY,KAAAqN,IACjBtN,EAAAX,OAAAiF,EAAA,EAAAjF,CAAAY,KAAAZ,OAAAkF,EAAA,EAAAlF,CAAAiO,GAAA9I,KAAAvE,KAAMlB,KAeRwO,UAAY,WACVvN,EAAKjB,MAAMK,SAASkB,KAAKyB,mBAAmB,SAAAE,GACtCA,GACFjC,EAAKsF,SAAS,CAAErD,OAAMsF,MAAO,UAnBhBvH,EAwBnBwN,eAAiB,SAAAC,GACfA,EAAEvF,iBAEF,IAAMwF,EAAe,CACnBvK,IAAKnD,EAAKyE,MAAMtB,IAChBwK,YAAa3N,EAAKyE,MAAMkJ,YACxBC,aAAc5N,EAAKyE,MAAMmJ,cAG3B5N,EAAKjB,MAAMK,SACR6C,KAAKjC,EAAKyE,MAAMzC,SAASE,KACzB2L,MAAM,SACNA,MAAM7N,EAAKyE,MAAMtB,KACjB4E,IAAI2F,GAEP1N,EAAKsF,SAAS,CACZnC,IAAK,GACLwK,YAAa,GACbC,aAAc,MA1CC5N,EA8CnB8N,aAAe,SAAAL,GACbzN,EAAKsF,SAALjG,OAAA+I,EAAA,EAAA/I,CAAA,GACGoO,EAAEpF,OAAOC,KAAOmF,EAAEpF,OAAOpD,SA7C5BjF,EAAKyE,MAAQ,CACXzC,SAAU0C,KAAKC,MAAMC,aAAaC,QAAQ,aAC1C0C,MAAO,GACPpE,IAAK,GACLwK,YAAa,GACbC,aAAc,IARC5N,mFAajBC,KAAKsN,6CAwCL,OACEvO,EAAAC,EAAAC,cAAA,QAAMwL,GAAG,oBACP1L,EAAAC,EAAAC,cAAA,8BACAF,EAAAC,EAAAC,cAAA,6BAAqBe,KAAKwE,MAAMzC,SAASkF,UACzClI,EAAAC,EAAAC,cAAA,QAAMwL,GAAG,cAAc/C,SAAU1H,KAAKuN,gBACpCxO,EAAAC,EAAAC,cAAA,oCACAF,EAAAC,EAAAC,cAAA,SACEmH,KAAK,SACLpB,MAAOhF,KAAKwE,MAAMsJ,WAClBzF,KAAK,MACLH,SAAUlI,KAAK6N,eAEjB9O,EAAAC,EAAAC,cAAA,6BACAF,EAAAC,EAAAC,cAAA,SACEmH,KAAK,SACLpB,MAAOhF,KAAKwE,MAAMkJ,YAClBrF,KAAK,cACLH,SAAUlI,KAAK6N,eAEjB9O,EAAAC,EAAAC,cAAA,8BACAF,EAAAC,EAAAC,cAAA,SACEmH,KAAK,SACLpB,MAAOhF,KAAKwE,MAAMmJ,aAClBtF,KAAK,eACLH,SAAUlI,KAAK6N,eAEjB9O,EAAAC,EAAAC,cAAA,SAAOmH,KAAK,SAASiC,KAAK,SAASrD,MAAM,WACzCjG,EAAAC,EAAAC,cAAA,SAAOmH,KAAK,QAAQiC,KAAK,QAAQrD,MAAM,mBAjFpBvG,IAAMI,YAwFpBD,KAAayO,ICzFtBU,eACJ,SAAAA,EAAYjP,GAAO,IAAAiB,EAAA,OAAAX,OAAAa,EAAA,EAAAb,CAAAY,KAAA+N,IACjBhO,EAAAX,OAAAiF,EAAA,EAAAjF,CAAAY,KAAAZ,OAAAkF,EAAA,EAAAlF,CAAA2O,GAAAxJ,KAAAvE,KAAMlB,KACD0F,MAAQ,CACXzC,SAAU0C,KAAKC,MAAMC,aAAaC,QAAQ,cAH3B7E,qHAUjB,OAAOhB,EAAAC,EAAAC,cAAA,kCAXYR,IAAMI,WAedD,KAAamP,ICJbnP,YATE,kBACfG,EAAAC,EAAAC,cAAA,QAAMwL,GAAG,YACP1L,EAAAC,EAAAC,cAAA,2BACAF,EAAAC,EAAAC,cAAA,OAAK+O,UAAU,eACbjP,EAAAC,EAAAC,cAACgP,GAAD,WCLAC,sBACJ,SAAAA,EAAYpP,GAAO,IAAAiB,EAAA,OAAAX,OAAAa,EAAA,EAAAb,CAAAY,KAAAkO,IACjBnO,EAAAX,OAAAiF,EAAA,EAAAjF,CAAAY,KAAAZ,OAAAkF,EAAA,EAAAlF,CAAA8O,GAAA3J,KAAAvE,KAAMlB,KAkCRqP,mBAAqB,SAAAX,GACnBY,QAAQC,IAAIb,EAAEpF,OAAOqC,KAjCrB1K,EAAKyE,MAAQ,CACXzC,SAAU0C,KAAKC,MAAMC,aAAaC,QAAQ,aAC1C3B,KAAM,KACNC,IAAK,GACLoL,UAAW,GACXjC,SAAS,EACT9K,IAAK,IATUxB,mFAaC,IAAAkF,EAAAjF,KACV+B,EAAa/B,KAAKwE,MAAlBzC,SACR,GAAIA,EAASoB,MAAO,CAClB,IAAMD,EAAMlD,KAAKlB,MAAMiH,QAAQ1H,SAASmG,MAAMvB,KAAKC,IACnDlD,KAAKqF,SAAS,CAAEnC,IAAKA,IACrBlD,KAAKlB,MAAMK,SACR8D,KAAKlB,EAASE,IAAKjC,KAAKlB,MAAMiH,QAAQ1H,SAASmG,MAAMvB,KAAKC,KAC1DmH,GAAG,QAAS,SAAAjI,GACX6C,EAAKI,SAAS,CACZpC,KAAMb,EAASE,MACfgM,UAAWlP,OAAOmP,OAAOnM,EAASE,MAAMgM,WACxCjC,SAAS,sDAMI,IAAAzE,EACK5H,KAAKwE,MAAvBzC,EADa6F,EACb7F,SAAUmB,EADG0E,EACH1E,IAClBlD,KAAKlB,MAAMK,SAAS8D,KAAKlB,EAASE,IAAKiB,GAAKoH,uCAOrC,IAAAd,EAAAxJ,KAAAwI,EACwBxI,KAAKwE,MAA5BvB,EADDuF,EACCvF,KAAMC,EADPsF,EACOtF,IAAKmJ,EADZ7D,EACY6D,QAEnB,OACEtN,EAAAC,EAAAC,cAAA,QAAMwL,GAAG,aACP1L,EAAAC,EAAAC,cAAA,mBAAWiE,GACVmJ,GAAWtN,EAAAC,EAAAC,cAAA,0BAEXgE,GACClE,EAAAC,EAAAC,cAAA,WACEF,EAAAC,EAAAC,cAAA,UACEF,EAAAC,EAAAC,cAAA,8BAAsBe,KAAKwE,MAAMvB,KAAKyK,aACtC3O,EAAAC,EAAAC,cAAA,4BAAoBe,KAAKwE,MAAMvB,KAAK0K,cACpC5O,EAAAC,EAAAC,cAAA,kCAA0Be,KAAKwE,MAAMvB,KAAKqL,UAAU5C,QACpD3M,EAAAC,EAAAC,cAAA,uBAEEF,EAAAC,EAAAC,cAAA,MAAIwL,GAAG,aACJzK,KAAKwE,MAAM8J,UAAU/C,IAAI,SAAAiD,GASxB,OARAA,EAASpL,OACPoG,EAAK1K,MAAMK,SACRoE,OAAOiG,EAAKhF,MAAMzC,SAASE,KAC3B2L,MAFH,GAAA/K,OAEY2L,EAASpL,MAAMqL,UAAU,MAClCC,iBACAvM,KAAK,SAAAZ,GACJiI,EAAKnE,SAAS,CAAE9D,UAGpBxC,EAAAC,EAAAC,cAAA,MAAI+O,UAAU,WAAWjJ,IAAKyJ,EAASG,aACrC5P,EAAAC,EAAAC,cAAA,KAAG+O,UAAU,iBAAb,aACaQ,EAASG,YADtB,KACqCH,EAASA,UAE9CzP,EAAAC,EAAAC,cAAA,WACCuP,EAASpL,OACRrE,EAAAC,EAAAC,cAAA,OACE2P,IAAKpF,EAAKhF,MAAMjD,IAChBsN,IAAI,WACJC,MAAM,mBAGV/P,EAAAC,EAAAC,cAAA,UACGuP,EAASO,QAAQxD,IAAI,SAAAyD,GAAE,OACtBjQ,EAAAC,EAAAC,cAAA,MACE8F,IAAKiK,EACLhB,UAAU,SACVvD,GAAIuE,EACJhK,MAAOgK,EACP3I,QAASmD,EAAK2E,oBAEba,MArBT,WAyBWR,EAASS,sBA5FnBxQ,IAAMI,YA0GdD,KAAasP,ICrFbjI,sBAAQP,EAJL,SAAA3D,GAAQ,OACvBA,GAAYA,EAASQ,MAAMmE,SftBT,UeuBnB3E,EAASQ,MAAMmE,SftBS,gBewBXT,CAhBQ,kBACrBlH,EAAAC,EAAAC,cAAA,QAAMwL,GAAG,mBACP1L,EAAAC,EAAAC,cAAA,wBACAF,EAAAC,EAAAC,cAAA,kFACAF,EAAAC,EAAAC,cAACsH,EAAA,EAAD,CAAMC,GnBHiB,iBmBGvB,oBACAzH,EAAAC,EAAAC,cAAA,WACAF,EAAAC,EAAAC,cAACsH,EAAA,EAAD,CAAMC,GnBJkB,uBmBIxB,gBAEAzH,EAAAC,EAAAC,cAACgP,GAAD,UCMWhI,eAAQP,EALL,SAAA3D,GAAQ,OACvBA,GAAYA,EAASQ,MAAMmE,ShBnBT,UgBoBnB3E,EAASQ,MAAMmE,ShBnBS,egBoBxB3E,EAASQ,MAAMmE,ShBnBM,agBqBRT,CAjBK,kBAClBlH,EAAAC,EAAAC,cAAA,WACEF,EAAAC,EAAAC,cAAA,qBACAF,EAAAC,EAAAC,cAAA,oEACAF,EAAAC,EAAAC,cAAA,6BACAF,EAAAC,EAAAC,cAAA,UACEF,EAAAC,EAAAC,cAAA,yBACAF,EAAAC,EAAAC,cAAA,mDCRAiQ,eACJ,SAAAA,EAAYpQ,GAAO,IAAAiB,EAAA,OAAAX,OAAAa,EAAA,EAAAb,CAAAY,KAAAkP,IACjBnP,EAAAX,OAAAiF,EAAA,EAAAjF,CAAAY,KAAAZ,OAAAkF,EAAA,EAAAlF,CAAA8P,GAAA3K,KAAAvE,KAAMlB,KA6BRwO,UAAY,WACVvN,EAAKjB,MAAMK,SAASkB,KAAKyB,mBAAmB,SAAAE,GACtCA,GACFjC,EAAKsF,SAAS,CAAErD,OAAMsF,MAAO,UAjChBvH,EAsCnBwN,eAAiB,SAAAC,GAiCf,GAhCAA,EAAEvF,iBAEElI,EAAKyE,MAAM2K,KACbpP,EAAKyE,MAAMuK,QAAQ/I,KAAKjG,EAAKyE,MAAM2K,KAEjCpP,EAAKyE,MAAM4K,KACbrP,EAAKyE,MAAMuK,QAAQ/I,KAAKjG,EAAKyE,MAAM4K,KAEjCrP,EAAKyE,MAAM6K,KACbtP,EAAKyE,MAAMuK,QAAQ/I,KAAKjG,EAAKyE,MAAM6K,KAEjCtP,EAAKyE,MAAM8K,KACbvP,EAAKyE,MAAMuK,QAAQ/I,KAAKjG,EAAKyE,MAAM8K,KAEjCvP,EAAKyE,MAAM+K,KACbxP,EAAKyE,MAAMuK,QAAQ/I,KAAKjG,EAAKyE,MAAM+K,KAEjCxP,EAAKyE,MAAMgL,KACbzP,EAAKyE,MAAMuK,QAAQ/I,KAAKjG,EAAKyE,MAAMgL,KAEjCzP,EAAKyE,MAAMiL,KACb1P,EAAKyE,MAAMuK,QAAQ/I,KAAKjG,EAAKyE,MAAMiL,KAEjC1P,EAAKyE,MAAMkL,KACb3P,EAAKyE,MAAMuK,QAAQ/I,KAAKjG,EAAKyE,MAAMkL,KAEjC3P,EAAKyE,MAAMmL,KACb5P,EAAKyE,MAAMuK,QAAQ/I,KAAKjG,EAAKyE,MAAMmL,KAEjC5P,EAAKyE,MAAMoL,MACb7P,EAAKyE,MAAMuK,QAAQ/I,KAAKjG,EAAKyE,MAAMoL,MAEjCpC,EAAEpF,OAAOyH,cAAgBC,qBAAmB,CAC9C,IAAMC,EAAOvC,EAAEpF,OAAO4H,YAAYC,MAAM,GAClC5M,EAAW0M,EAAK1H,KACtBtI,EAAKjB,MAAMK,SACRiE,MAAMrD,EAAKyE,MAAMxC,KAAKC,IAAKoB,GAC3B6M,IAAIH,GACJ5N,KAAK,SAAAC,GACJgM,QAAQC,IAAIjM,KAIlB,IAAMoM,EAAW,CACf2B,WAAYpQ,EAAKyE,MAAM2L,WACvBC,WAAYrQ,EAAKyE,MAAM4L,WACvB5B,SAAUzO,EAAKyE,MAAMgK,SACrBG,YAAa5O,EAAKyE,MAAMmK,YACxBI,QAAShP,EAAKyE,MAAMuK,QACpBE,OAAQlP,EAAKyE,MAAMyK,OACnB7L,MAAOrD,EAAKyE,MAAMpB,OAGpBrD,EAAKjB,MAAMK,SACR6C,KAAKjC,EAAKyE,MAAMxC,KAAKC,KACrB2L,MAAM,SACNA,MAAM7N,EAAKyE,MAAMtB,KACjB0K,MAAM,cACNA,MAAM7N,EAAKyE,MAAMmK,aACjB7G,IAAI0G,GAEPzO,EAAKsF,SAAS,CACZ8K,WAAY,GACZC,WAAY,GACZ5B,SAAU,GACVG,YAAa,GACbQ,IAAK,GACLC,IAAK,GACLC,IAAK,GACLC,IAAK,GACLC,IAAK,GACLC,IAAK,GACLC,IAAK,GACLC,IAAK,GACLC,IAAK,GACLC,KAAM,GACNX,OAAQ,GACRF,QAAS,GACT3L,MAAO,MArHQrD,EAyHnB8N,aAAe,SAAAL,GACbzN,EAAKsF,SAALjG,OAAA+I,EAAA,EAAA/I,CAAA,GACGoO,EAAEpF,OAAOC,KAAOmF,EAAEpF,OAAOpD,SAxH5BjF,EAAKyE,MAAQ,CACXtB,IAAK,GACLiN,WAAY,GACZC,WAAY,GACZ5B,SAAU,GACVG,YAAa,GACbQ,IAAK,GACLC,IAAK,GACLC,IAAK,GACLC,IAAK,GACLC,IAAK,GACLC,IAAK,GACLC,IAAK,GACLC,IAAK,GACLC,IAAK,GACLC,KAAM,GACNb,QAAS,GACTE,OAAQ,GACRjN,KAAM,GACNoB,MAAO,IAtBQrD,mFA2BjBC,KAAKsN,6CAqGL,OACEvO,EAAAC,EAAAC,cAAA,QAAMwL,GAAG,gBACP1L,EAAAC,EAAAC,cAAA,8BACAF,EAAAC,EAAAC,cAAA,QAAMwL,GAAG,cAAc/C,SAAU1H,KAAKuN,gBACpCxO,EAAAC,EAAAC,cAAA,oCACAF,EAAAC,EAAAC,cAAA,SACEmH,KAAK,SACLpB,MAAOhF,KAAKwE,MAAMsJ,WAClBzF,KAAK,MACLH,SAAUlI,KAAK6N,eAEjB9O,EAAAC,EAAAC,cAAA,4BACAF,EAAAC,EAAAC,cAAA,SACEmH,KAAK,OACLpB,MAAOhF,KAAKwE,MAAM2L,WAClB9H,KAAK,aACLH,SAAUlI,KAAK6N,eAEjB9O,EAAAC,EAAAC,cAAA,4BACAF,EAAAC,EAAAC,cAAA,SACEmH,KAAK,OACLpB,MAAOhF,KAAKwE,MAAM4L,WAClB/H,KAAK,aACLH,SAAUlI,KAAK6N,eAEjB9O,EAAAC,EAAAC,cAAA,YAAUoR,KAAK,eACbtR,EAAAC,EAAAC,cAAA,0BACAF,EAAAC,EAAAC,cAAA,4CACAF,EAAAC,EAAAC,cAAA,SACEmH,KAAK,SACLpB,MAAOhF,KAAKwE,MAAMmK,YAClBtG,KAAK,cACLH,SAAUlI,KAAK6N,eAEjB9O,EAAAC,EAAAC,cAAA,SACEmH,KAAK,OACLpB,MAAOhF,KAAKwE,MAAMgK,SAClBnG,KAAK,WACLH,SAAUlI,KAAK6N,eAEjB9O,EAAAC,EAAAC,cAAA,SACEqR,OAAO,YACPlK,KAAK,OACLqE,GAAG,cACHpC,KAAK,QACLH,SAAUlI,KAAK6N,eAEjB9O,EAAAC,EAAAC,cAAA,YAAUoR,KAAK,eACbtR,EAAAC,EAAAC,cAAA,yBACAF,EAAAC,EAAAC,cAAA,yBACAF,EAAAC,EAAAC,cAAA,SACEmH,KAAK,OACLpB,MAAOhF,KAAKwE,MAAM2K,IAClB9G,KAAK,MACLH,SAAUlI,KAAK6N,eAEjB9O,EAAAC,EAAAC,cAAA,yBACAF,EAAAC,EAAAC,cAAA,SACEmH,KAAK,OACLpB,MAAOhF,KAAKwE,MAAM4K,IAClB/G,KAAK,MACLH,SAAUlI,KAAK6N,eAEjB9O,EAAAC,EAAAC,cAAA,yBACAF,EAAAC,EAAAC,cAAA,SACEmH,KAAK,OACLpB,MAAOhF,KAAKwE,MAAM6K,IAClBhH,KAAK,MACLH,SAAUlI,KAAK6N,eAEjB9O,EAAAC,EAAAC,cAAA,yBACAF,EAAAC,EAAAC,cAAA,SACEmH,KAAK,OACLpB,MAAOhF,KAAKwE,MAAM8K,IAClBjH,KAAK,MACLH,SAAUlI,KAAK6N,eAEjB9O,EAAAC,EAAAC,cAAA,yBACAF,EAAAC,EAAAC,cAAA,SACEmH,KAAK,OACLpB,MAAOhF,KAAKwE,MAAM+K,IAClBlH,KAAK,MACLH,SAAUlI,KAAK6N,eAEjB9O,EAAAC,EAAAC,cAAA,yBACAF,EAAAC,EAAAC,cAAA,SACEmH,KAAK,OACLpB,MAAOhF,KAAKwE,MAAMgL,IAClBnH,KAAK,MACLH,SAAUlI,KAAK6N,eAEjB9O,EAAAC,EAAAC,cAAA,yBACAF,EAAAC,EAAAC,cAAA,SACEmH,KAAK,OACLpB,MAAOhF,KAAKwE,MAAMiL,IAClBpH,KAAK,MACLH,SAAUlI,KAAK6N,eAEjB9O,EAAAC,EAAAC,cAAA,yBACAF,EAAAC,EAAAC,cAAA,SACEmH,KAAK,OACLpB,MAAOhF,KAAKwE,MAAMkL,IAClBrH,KAAK,MACLH,SAAUlI,KAAK6N,eAEjB9O,EAAAC,EAAAC,cAAA,yBACAF,EAAAC,EAAAC,cAAA,SACEmH,KAAK,OACLpB,MAAOhF,KAAKwE,MAAMmL,IAClBtH,KAAK,MACLH,SAAUlI,KAAK6N,eAEjB9O,EAAAC,EAAAC,cAAA,0BACAF,EAAAC,EAAAC,cAAA,SACEmH,KAAK,OACLpB,MAAOhF,KAAKwE,MAAMoL,KAClBvH,KAAK,OACLH,SAAUlI,KAAK6N,gBAGnB9O,EAAAC,EAAAC,cAAA,+BACAF,EAAAC,EAAAC,cAAA,SACEmH,KAAK,OACLpB,MAAOhF,KAAKwE,MAAMyK,OAClB5G,KAAK,SACLH,SAAUlI,KAAK6N,gBAGnB9O,EAAAC,EAAAC,cAAA,SAAOmH,KAAK,SAASiC,KAAK,SAASrD,MAAM,oBAjQzBvG,IAAMI,WAwQjBD,KAAasQ,ICnObhL,YAvBH,kBACVnF,EAAAC,EAAAC,cAACsR,EAAA,EAAD,KACExR,EAAAC,EAAAC,cAAA,WACEF,EAAAC,EAAAC,cAACuR,EAAD,MACAzR,EAAAC,EAAAC,cAAC4N,EAAA,EAAD,KACE9N,EAAAC,EAAAC,cAAC6N,EAAA,EAAD,CAAOC,OAAK,EAACC,KAAMvG,EAAawG,UAAW7C,KAC3CrL,EAAAC,EAAAC,cAAC6N,EAAA,EAAD,CAAOE,KtBxBQ,UsBwBcC,UAAWnE,IACxC/J,EAAAC,EAAAC,cAAC6N,EAAA,EAAD,CAAOE,KtBxBQ,UsBwBcC,UAAWhD,KACxClL,EAAAC,EAAAC,cAAC6N,EAAA,EAAD,CAAOE,KtBvBgB,asBuBcC,UAAWhE,IAChDlK,EAAAC,EAAAC,cAAC6N,EAAA,EAAD,CAAOE,KtBzBQ,WsByBcC,UAAWwD,KACxC1R,EAAAC,EAAAC,cAAC6N,EAAA,EAAD,CAAOE,KtBxBM,SsBwBcC,UAAWyD,KACtC3R,EAAAC,EAAAC,cAAC6N,EAAA,EAAD,CAAOE,KtBvBW,csBuBcC,UAAW0D,KAC3C5R,EAAAC,EAAAC,cAAC6N,EAAA,EAAD,CAAOE,KtBvBQ,WsBuBcC,UAAW2D,KACxC7R,EAAAC,EAAAC,cAAC6N,EAAA,EAAD,CAAOE,KtBtBY,gBsBsBcC,UAAWI,KAC5CtO,EAAAC,EAAAC,cAAC6N,EAAA,EAAD,CAAOE,KtBtBa,sBsBsBcC,UAAWiC,KAC7CnQ,EAAAC,EAAAC,cAAC6N,EAAA,EAAD,CAAOE,KtBtBY,iBsBsBcC,UAAW4D,KAC5C9R,EAAAC,EAAAC,cAAC6N,EAAA,EAAD,CAAOE,KtB1BM,SsB0BcC,UAAWiB,KACtCnP,EAAAC,EAAAC,cAAC6N,EAAA,EAAD,CAAOE,KtBvBU,kBsBuBcC,UAAWc,WC3BlD+C,IAASC,OACPhS,EAAAC,EAAAC,cAAC+R,EAAgBxL,SAAjB,CAA0BR,MAAO,IAAIlF,GACnCf,EAAAC,EAAAC,cAACgS,GAAD,OAEFC,SAASC,eAAe,S7BoHpB,kBAAmBC,WACrBA,UAAUC,cAAcC,MAAMnP,KAAK,SAAAoP,GACjCA,EAAaC","file":"static/js/main.17cd182f.chunk.js","sourcesContent":["// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read http://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit http://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See http://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\n\nconst AuthUserContext = React.createContext(null);\n\nexport default AuthUserContext;\n","import React from 'react';\n\nconst FirebaseContext = React.createContext(null);\n\nexport const withFirebase = Component => props => (\n  <FirebaseContext.Consumer>{firebase => <Component {...props} firebase={firebase} />}</FirebaseContext.Consumer>\n);\n\nexport default FirebaseContext;\n","import app from \"firebase/app\";\nimport \"firebase/auth\";\nimport \"firebase/database\";\nimport \"firebase/storage\";\n\nconst config = {\n  apiKey: process.env.REACT_APP_API_KEY,\n  authDomain: process.env.REACT_APP_AUTH_DOMAIN,\n  databaseURL: process.env.REACT_APP_DATABASE_URL,\n  projectId: process.env.REACT_APP_PROJECT_ID,\n  storageBucket: process.env.REACT_APP_STORAGE_BUCKET,\n  messagingSenderId: process.env.REACT_APP_MESSAGING_SENDER_ID\n};\n\nclass Firebase {\n  constructor() {\n    app.initializeApp(config);\n\n    /* Helper */\n\n    this.serverValue = app.database.ServerValue;\n    this.emailAuthProvider = app.auth.EmailAuthProvider;\n\n    /* Firebase APIs */\n\n    this.auth = app.auth();\n    this.db = app.database();\n    this.storage = app.storage();\n\n    /* Social Sign In Method Provider */\n\n    this.googleProvider = new app.auth.GoogleAuthProvider();\n    this.facebookProvider = new app.auth.FacebookAuthProvider();\n    this.twitterProvider = new app.auth.TwitterAuthProvider();\n  }\n\n  // *** Auth API ***\n\n  doCreateUserWithEmailAndPassword = (email, password) =>\n    this.auth.createUserWithEmailAndPassword(email, password);\n\n  doSignInWithEmailAndPassword = (email, password) =>\n    this.auth.signInWithEmailAndPassword(email, password);\n\n  doSignInWithGoogle = () => this.auth.signInWithPopup(this.googleProvider);\n\n  doSignInWithFacebook = () => this.auth.signInWithPopup(this.facebookProvider);\n\n  doSignInWithTwitter = () => this.auth.signInWithPopup(this.twitterProvider);\n\n  doSignOut = () => this.auth.signOut();\n\n  doPasswordReset = email => this.auth.sendPasswordResetEmail(email);\n\n  doSendEmailVerification = () =>\n    this.auth.currentUser.sendEmailVerification({\n      url: process.env.REACT_APP_CONFIRMATION_EMAIL_REDIRECT\n    });\n\n  doPasswordUpdate = password => this.auth.currentUser.updatePassword(password);\n\n  // *** Merge Auth and DB User API *** //\n\n  onAuthUserListener = (next, fallback) =>\n    this.auth.onAuthStateChanged(authUser => {\n      if (authUser) {\n        this.user(authUser.uid)\n          .once(\"value\")\n          .then(snapshot => {\n            const dbUser = snapshot.val();\n\n            // default empty roles\n            if (!dbUser.roles) {\n              dbUser.roles = [];\n            }\n\n            // merge auth and db user\n            authUser = {\n              uid: authUser.uid,\n              email: authUser.email,\n              emailVerified: authUser.emailVerified,\n              providerData: authUser.providerData,\n              ...dbUser\n            };\n\n            next(authUser);\n          });\n      } else {\n        fallback();\n      }\n    });\n\n  // *** User API ***\n\n  user = uid => this.db.ref(`users/${uid}`);\n\n  users = () => this.db.ref(\"users\");\n\n  // *** Message API ***\n\n  message = uid => this.db.ref(`messages/${uid}`);\n\n  messages = () => this.db.ref(\"messages\");\n\n  // *** Tests Banks API ***\n\n  test = (uid, tid) => this.db.ref(`users/${uid}/tests/${tid}`);\n\n  tests = uid => this.db.ref(`users/${uid}/tests`);\n\n  // *** Question Image API ***\n  image = (uid, fileName) => this.storage.ref(`${uid}/images/${fileName}`);\n\n  images = uid => this.storage.ref(`${uid}/images`);\n}\n\nexport default Firebase;\n","import FirebaseContext, { withFirebase } from './context';\nimport Firebase from './firebase';\n\nexport default Firebase;\n\nexport { FirebaseContext, withFirebase };\n","import React from 'react';\n\nimport AuthUserContext from './context';\nimport { withFirebase } from '../Firebase';\n\nconst withAuthentication = Component => {\n  class WithAuthentication extends React.Component {\n    constructor(props) {\n      super(props);\n\n      this.state = {\n        authUser: JSON.parse(localStorage.getItem('authUser')),\n      };\n    }\n\n    componentDidMount() {\n      this.listener = this.props.firebase.onAuthUserListener(\n        authUser => {\n          localStorage.setItem('authUser', JSON.stringify(authUser));\n          this.setState({ authUser });\n        },\n        () => {\n          localStorage.removeItem('authUser');\n          this.setState({ authUser: null });\n        }\n      );\n    }\n\n    componentWillUnmount() {\n      this.listener();\n    }\n\n    render() {\n      return (\n        <AuthUserContext.Provider value={this.state.authUser}>\n          <Component {...this.props} />\n        </AuthUserContext.Provider>\n      );\n    }\n  }\n\n  return withFirebase(WithAuthentication);\n};\n\nexport default withAuthentication;\n","export const HOME = \"/\";\nexport const SIGN_UP = \"/signup\";\nexport const SIGN_IN = \"/signin\";\nexport const ACCOUNT = \"/account\";\nexport const PASSWORD_FORGET = \"/pw-forget\";\nexport const ADMIN = \"/admin\";\nexport const ADMIN_DETAILS = \"/admin/:id\";\nexport const INSTRUCTOR = \"/instructor\";\nexport const STUDENT = \"/student\";\nexport const TESTS = \"/tests\";\nexport const CREATE_TEST = \"/tests/create\";\nexport const NEW_QUESTION = \"/tests/new_question\";\nexport const SELECT_TEST = \"/tests/select/\";\nexport const TAKE_TEST = \"/tests/take/:id\";\n","import React from 'react';\nimport { withRouter } from 'react-router-dom';\nimport { compose } from 'recompose';\n\nimport AuthUserContext from './context';\nimport { withFirebase } from '../Firebase';\nimport * as ROUTES from '../../constants/routes';\n\nconst withAuthorization = condition => Component => {\n  class WithAuthorization extends React.Component {\n    componentDidMount() {\n      this.listener = this.props.firebase.onAuthUserListener(\n        authUser => {\n          if (!condition(authUser)) {\n            this.props.history.push(ROUTES.SIGN_IN);\n          }\n        },\n        () => this.props.history.push(ROUTES.SIGN_IN)\n      );\n    }\n\n    componentWillUnmount() {\n      this.listener();\n    }\n\n    render() {\n      return (\n        <AuthUserContext.Consumer>\n          {authUser => (condition(authUser) ? <Component {...this.props} /> : null)}\n        </AuthUserContext.Consumer>\n      );\n    }\n  }\n\n  return compose(\n    withRouter,\n    withFirebase\n  )(WithAuthorization);\n};\n\nexport default withAuthorization;\n","import React from \"react\";\nimport { withFirebase } from \"../Firebase\";\n\nconst SignOutButton = ({ firebase }) => (\n  <button type=\"button\" onClick={firebase.doSignOut}>\n    Sign Out\n  </button>\n);\n\nexport default withFirebase(SignOutButton);\n","import React from \"react\";\nimport { Link } from \"react-router-dom\";\n\nimport { AuthUserContext } from \"../Session\";\nimport SignOutButton from \"../SignOut\";\nimport * as ROUTES from \"../../constants/routes\";\nimport * as ROLES from \"../../constants/roles\";\nimport \"../../styles/components/Navigation.css\";\n\nconst Navigation = () => (\n  <AuthUserContext.Consumer>\n    {authUser =>\n      authUser ? <NavigationAuth authUser={authUser} /> : <NavigationNonAuth />\n    }\n  </AuthUserContext.Consumer>\n);\n\nconst NavigationAuth = ({ authUser }) => (\n  <header>\n    <h1>Question Air</h1>\n    <nav>\n      <ul>\n        <li>\n          <Link to={ROUTES.HOME}>Home</Link>\n        </li>\n        <li>\n          <Link to={ROUTES.ACCOUNT}>Account</Link>\n        </li>\n        <li>\n          <Link to={ROUTES.STUDENT}>Student</Link>\n        </li>\n        {(authUser.roles.includes(ROLES.ADMIN) ||\n          authUser.roles.includes(ROLES.INSTRUCTOR)) && (\n          <li>\n            <Link to={ROUTES.INSTRUCTOR}>Instructor</Link>\n          </li>\n        )}\n        {authUser.roles.includes(ROLES.ADMIN) && (\n          <li>\n            <Link to={ROUTES.ADMIN}>Admin</Link>\n          </li>\n        )}\n        <li>\n          <SignOutButton />\n        </li>\n      </ul>\n    </nav>\n  </header>\n);\n\nconst NavigationNonAuth = () => (\n  <header>\n    <h1>Question Air</h1>\n    <nav>\n      <ul>\n        <li>\n          <Link to={ROUTES.SIGN_IN}>Sign In</Link>\n        </li>\n      </ul>\n    </nav>\n  </header>\n);\n\nexport default Navigation;\n","export const ADMIN = 'ADMIN';\nexport const INSTRUCTOR = 'INSTRUCTOR';\nexport const STUDENT = 'STUDENT';\n","import React, { Component } from \"react\";\nimport { Link, withRouter } from \"react-router-dom\";\n\nimport { withFirebase } from \"../Firebase\";\nimport * as ROUTES from \"../../constants/routes\";\n\nconst SignUpPage = () => (\n  <div>\n    <h1>SignUp</h1>\n    <SignUpForm />\n  </div>\n);\n\nconst INITIAL_STATE = {\n  username: \"\",\n  email: \"\",\n  passwordOne: \"\",\n  passwordTwo: \"\",\n  requestAdmin: false,\n  requestInstructor: false,\n  error: null\n};\n\nconst ERROR_CODE_ACCOUNT_EXISTS = \"auth/email-already-in-use\";\n\nconst ERROR_MSG_ACCOUNT_EXISTS = `\n  An account with this E-Mail address already exists.\n  Try to login with this account instead. If you think the\n  account is already used from one of the social logins, try\n  to sign in with one of them. Afterward, associate your accounts\n  on your personal account page.\n`;\n\nclass SignUpFormBase extends Component {\n  constructor(props) {\n    super(props);\n\n    this.state = { ...INITIAL_STATE };\n  }\n\n  onSubmit = event => {\n    const {\n      username,\n      email,\n      passwordOne,\n      requestAdmin,\n      requestInstructor\n    } = this.state;\n    const requests = [];\n    if (requestAdmin) {\n      requests.push(\"admin\");\n    }\n    if (requestInstructor) {\n      requests.push(\"instructor\");\n    }\n\n    this.props.firebase\n      .doCreateUserWithEmailAndPassword(email, passwordOne)\n      .then(authUser => {\n        // Create a user in your Firebase realtime database\n        return this.props.firebase.user(authUser.user.uid).set({\n          username,\n          email,\n          requests\n        });\n      })\n      .then(() => {\n        return this.props.firebase.doSendEmailVerification();\n      })\n      .then(() => {\n        this.setState({ ...INITIAL_STATE });\n        this.props.history.push(ROUTES.HOME);\n      })\n      .catch(error => {\n        if (error.code === ERROR_CODE_ACCOUNT_EXISTS) {\n          error.message = ERROR_MSG_ACCOUNT_EXISTS;\n        }\n\n        this.setState({ error });\n      });\n\n    event.preventDefault();\n  };\n\n  onChange = event => {\n    this.setState({ [event.target.name]: event.target.value });\n  };\n\n  onChangeCheckbox = event => {\n    this.setState({ [event.target.name]: event.target.checked });\n  };\n\n  render() {\n    const {\n      username,\n      email,\n      passwordOne,\n      passwordTwo,\n      error,\n      requestInstructor,\n      requestAdmin\n    } = this.state;\n\n    const isInvalid =\n      passwordOne !== passwordTwo ||\n      passwordOne === \"\" ||\n      email === \"\" ||\n      username === \"\";\n\n    return (\n      <form onSubmit={this.onSubmit}>\n        <input\n          name=\"username\"\n          value={username}\n          onChange={this.onChange}\n          type=\"text\"\n          placeholder=\"Full Name\"\n        />\n        <input\n          name=\"email\"\n          value={email}\n          onChange={this.onChange}\n          type=\"text\"\n          placeholder=\"Email Address\"\n        />\n        <input\n          name=\"passwordOne\"\n          value={passwordOne}\n          onChange={this.onChange}\n          type=\"password\"\n          placeholder=\"Password\"\n        />\n        <input\n          name=\"passwordTwo\"\n          value={passwordTwo}\n          onChange={this.onChange}\n          type=\"password\"\n          placeholder=\"Confirm Password\"\n        />\n        <label>\n          Request Admin:\n          <input\n            name=\"requestAdmin\"\n            type=\"checkbox\"\n            checked={requestAdmin}\n            onChange={this.onChangeCheckbox}\n          />\n        </label>\n        <label>\n          Request Instructor:\n          <input\n            name=\"requestInstructor\"\n            type=\"checkbox\"\n            checked={requestInstructor}\n            onChange={this.onChangeCheckbox}\n          />\n        </label>\n        <button disabled={isInvalid} type=\"submit\">\n          Sign Up\n        </button>\n\n        {error && <p>{error.message}</p>}\n      </form>\n    );\n  }\n}\n\nconst SignUpLink = () => (\n  <p>\n    Don't have an account? <Link to={ROUTES.SIGN_UP}>Sign Up</Link>\n  </p>\n);\n\nconst SignUpForm = withRouter(withFirebase(SignUpFormBase));\n\nexport default SignUpPage;\n\nexport { SignUpForm, SignUpLink };\n","import React, { Component } from 'react';\nimport { Link } from 'react-router-dom';\n\nimport { withFirebase } from '../Firebase';\nimport * as ROUTES from '../../constants/routes';\n\nconst PasswordForgetPage = () => (\n  <div>\n    <h1>PasswordForget</h1>\n    <PasswordForgetForm />\n  </div>\n);\n\nconst INITIAL_STATE = {\n  email: '',\n  error: null,\n};\n\nclass PasswordForgetFormBase extends Component {\n  constructor(props) {\n    super(props);\n\n    this.state = { ...INITIAL_STATE };\n  }\n\n  onSubmit = event => {\n    const { email } = this.state;\n\n    this.props.firebase\n      .doPasswordReset(email)\n      .then(() => {\n        this.setState({ ...INITIAL_STATE });\n      })\n      .catch(error => {\n        this.setState({ error });\n      });\n\n    event.preventDefault();\n  };\n\n  onChange = event => {\n    this.setState({ [event.target.name]: event.target.value });\n  };\n\n  render() {\n    const { email, error } = this.state;\n\n    const isInvalid = email === '';\n\n    return (\n      <form onSubmit={this.onSubmit}>\n        <input name='email' value={this.state.email} onChange={this.onChange} type='text' placeholder='Email Address' />\n        <button disabled={isInvalid} type='submit'>\n          Reset My Password\n        </button>\n\n        {error && <p>{error.message}</p>}\n      </form>\n    );\n  }\n}\n\nconst PasswordForgetLink = () => (\n  <p>\n    <Link to={ROUTES.PASSWORD_FORGET}>Forgot Password?</Link>\n  </p>\n);\n\nexport default PasswordForgetPage;\n\nconst PasswordForgetForm = withFirebase(PasswordForgetFormBase);\n\nexport { PasswordForgetForm, PasswordForgetLink };\n","import React, { Component } from 'react';\nimport { withRouter } from 'react-router-dom';\nimport { compose } from 'recompose';\n\nimport { SignUpLink } from '../SignUp';\nimport { PasswordForgetLink } from '../PasswordForget';\nimport { withFirebase } from '../Firebase';\nimport * as ROUTES from '../../constants/routes';\n\nconst SignInPage = () => (\n  <div>\n    <h1>SignIn</h1>\n    <SignInForm />\n    <SignInGoogle />\n    <SignInFacebook />\n    <SignInTwitter />\n    <PasswordForgetLink />\n    <SignUpLink />\n  </div>\n);\n\nconst INITIAL_STATE = {\n  email: '',\n  password: '',\n  error: null,\n};\n\nconst ERROR_CODE_ACCOUNT_EXISTS = 'auth/account-exists-with-different-credential';\n\nconst ERROR_MSG_ACCOUNT_EXISTS = `\n  An account with an E-Mail address to\n  this social account already exists. Try to login from\n  this account instead and associate your social accounts on\n  your personal account page.\n`;\n\nclass SignInFormBase extends Component {\n  constructor(props) {\n    super(props);\n\n    this.state = { ...INITIAL_STATE };\n  }\n\n  onSubmit = event => {\n    const { email, password } = this.state;\n\n    this.props.firebase\n      .doSignInWithEmailAndPassword(email, password)\n      .then(() => {\n        this.setState({ ...INITIAL_STATE });\n        this.props.history.push(ROUTES.HOME);\n      })\n      .catch(error => {\n        this.setState({ error });\n      });\n\n    event.preventDefault();\n  };\n\n  onChange = event => {\n    this.setState({ [event.target.name]: event.target.value });\n  };\n\n  render() {\n    const { email, password, error } = this.state;\n\n    const isInvalid = password === '' || email === '';\n\n    return (\n      <form onSubmit={this.onSubmit}>\n        <input name='email' value={email} onChange={this.onChange} type='text' placeholder='Email Address' />\n        <input name='password' value={password} onChange={this.onChange} type='password' placeholder='Password' />\n        <button disabled={isInvalid} type='submit'>\n          Sign In\n        </button>\n\n        {error && <p>{error.message}</p>}\n      </form>\n    );\n  }\n}\n\nclass SignInGoogleBase extends Component {\n  constructor(props) {\n    super(props);\n\n    this.state = { error: null };\n  }\n\n  onSubmit = event => {\n    this.props.firebase\n      .doSignInWithGoogle()\n      .then(socialAuthUser => {\n        // Create a user in your Firebase Realtime Database too\n        return this.props.firebase.user(socialAuthUser.user.uid).set({\n          username: socialAuthUser.user.displayName,\n          email: socialAuthUser.user.email,\n          roles: [],\n        });\n      })\n      .then(() => {\n        this.setState({ error: null });\n        this.props.history.push(ROUTES.HOME);\n      })\n      .catch(error => {\n        if (error.code === ERROR_CODE_ACCOUNT_EXISTS) {\n          error.message = ERROR_MSG_ACCOUNT_EXISTS;\n        }\n\n        this.setState({ error });\n      });\n\n    event.preventDefault();\n  };\n\n  render() {\n    const { error } = this.state;\n\n    return (\n      <form onSubmit={this.onSubmit}>\n        <button type='submit'>Sign In with Google</button>\n\n        {error && <p>{error.message}</p>}\n      </form>\n    );\n  }\n}\n\nclass SignInFacebookBase extends Component {\n  constructor(props) {\n    super(props);\n\n    this.state = { error: null };\n  }\n\n  onSubmit = event => {\n    this.props.firebase\n      .doSignInWithFacebook()\n      .then(socialAuthUser => {\n        // Create a user in your Firebase Realtime Database too\n        return this.props.firebase.user(socialAuthUser.user.uid).set({\n          username: socialAuthUser.additionalUserInfo.profile.name,\n          email: socialAuthUser.additionalUserInfo.profile.email,\n          roles: [],\n        });\n      })\n      .then(() => {\n        this.setState({ error: null });\n        this.props.history.push(ROUTES.HOME);\n      })\n      .catch(error => {\n        if (error.code === ERROR_CODE_ACCOUNT_EXISTS) {\n          error.message = ERROR_MSG_ACCOUNT_EXISTS;\n        }\n\n        this.setState({ error });\n      });\n\n    event.preventDefault();\n  };\n\n  render() {\n    const { error } = this.state;\n\n    return (\n      <form onSubmit={this.onSubmit}>\n        <button type='submit'>Sign In with Facebook</button>\n\n        {error && <p>{error.message}</p>}\n      </form>\n    );\n  }\n}\n\nclass SignInTwitterBase extends Component {\n  constructor(props) {\n    super(props);\n\n    this.state = { error: null };\n  }\n\n  onSubmit = event => {\n    this.props.firebase\n      .doSignInWithTwitter()\n      .then(socialAuthUser => {\n        // Create a user in your Firebase Realtime Database too\n        return this.props.firebase.user(socialAuthUser.user.uid).set({\n          username: socialAuthUser.additionalUserInfo.profile.name,\n          email: socialAuthUser.additionalUserInfo.profile.email,\n          roles: [],\n        });\n      })\n      .then(() => {\n        this.setState({ error: null });\n        this.props.history.push(ROUTES.HOME);\n      })\n      .catch(error => {\n        if (error.code === ERROR_CODE_ACCOUNT_EXISTS) {\n          error.message = ERROR_MSG_ACCOUNT_EXISTS;\n        }\n\n        this.setState({ error });\n      });\n\n    event.preventDefault();\n  };\n\n  render() {\n    const { error } = this.state;\n\n    return (\n      <form onSubmit={this.onSubmit}>\n        <button type='submit'>Sign In with Twitter</button>\n\n        {error && <p>{error.message}</p>}\n      </form>\n    );\n  }\n}\n\nconst SignInForm = compose(\n  withRouter,\n  withFirebase\n)(SignInFormBase);\n\nconst SignInGoogle = compose(\n  withRouter,\n  withFirebase\n)(SignInGoogleBase);\n\nconst SignInFacebook = compose(\n  withRouter,\n  withFirebase\n)(SignInFacebookBase);\n\nconst SignInTwitter = compose(\n  withRouter,\n  withFirebase\n)(SignInTwitterBase);\n\nexport default SignInPage;\n\nexport { SignInForm, SignInGoogle, SignInFacebook, SignInTwitter };\n","import React, { Component } from \"react\";\nimport { compose } from \"recompose\";\n\nimport { withAuthorization } from \"../Session\";\nimport { withFirebase } from \"../Firebase\";\n\nclass HomePage extends Component {\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      users: null\n    };\n  }\n\n  componentDidMount() {\n    this.props.firebase.users().on(\"value\", snapshot => {\n      this.setState({\n        users: snapshot.val()\n      });\n    });\n  }\n\n  componentWillUnmount() {\n    this.props.firebase.users().off();\n  }\n\n  render() {\n    return (\n      <div>\n        <h1>Home Page</h1>\n        <p>The Home Page is accessible by every signed in user.</p>\n      </div>\n    );\n  }\n}\n\nconst condition = authUser => !!authUser;\n\nexport default compose(\n  withFirebase,\n  withAuthorization(condition)\n)(HomePage);\n","import React, { Component } from 'react';\n\nimport { withFirebase } from '../Firebase';\n\nconst INITIAL_STATE = {\n  passwordOne: '',\n  passwordTwo: '',\n  error: null,\n};\n\nclass PasswordChangeForm extends Component {\n  constructor(props) {\n    super(props);\n\n    this.state = { ...INITIAL_STATE };\n  }\n\n  onSubmit = event => {\n    const { passwordOne } = this.state;\n\n    this.props.firebase\n      .doPasswordUpdate(passwordOne)\n      .then(() => {\n        this.setState({ ...INITIAL_STATE });\n      })\n      .catch(error => {\n        this.setState({ error });\n      });\n\n    event.preventDefault();\n  };\n\n  onChange = event => {\n    this.setState({ [event.target.name]: event.target.value });\n  };\n\n  render() {\n    const { passwordOne, passwordTwo, error } = this.state;\n\n    const isInvalid = passwordOne !== passwordTwo || passwordOne === '';\n\n    return (\n      <form onSubmit={this.onSubmit}>\n        <input\n          name='passwordOne'\n          value={passwordOne}\n          onChange={this.onChange}\n          type='password'\n          placeholder='New Password'\n        />\n        <input\n          name='passwordTwo'\n          value={passwordTwo}\n          onChange={this.onChange}\n          type='password'\n          placeholder='Confirm New Password'\n        />\n        <button disabled={isInvalid} type='submit'>\n          Reset My Password\n        </button>\n\n        {error && <p>{error.message}</p>}\n      </form>\n    );\n  }\n}\n\nexport default withFirebase(PasswordChangeForm);\n","import React, { Component } from 'react';\nimport { compose } from 'recompose';\n\nimport { AuthUserContext, withAuthorization } from '../Session';\nimport { withFirebase } from '../Firebase';\nimport { PasswordForgetForm } from '../PasswordForget';\nimport PasswordChangeForm from '../PasswordChange';\n\nconst SIGN_IN_METHODS = [\n  {\n    id: 'password',\n    provider: null,\n  },\n  {\n    id: 'google.com',\n    provider: 'googleProvider',\n  },\n  {\n    id: 'facebook.com',\n    provider: 'facebookProvider',\n  },\n  {\n    id: 'twitter.com',\n    provider: 'twitterProvider',\n  },\n];\n\nconst AccountPage = () => (\n  <AuthUserContext.Consumer>\n    {authUser => (\n      <div>\n        <h1>Account: {authUser.email}</h1>\n        <PasswordForgetForm />\n        <PasswordChangeForm />\n        <LoginManagement authUser={authUser} />\n      </div>\n    )}\n  </AuthUserContext.Consumer>\n);\n\nclass LoginManagementBase extends Component {\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      activeSignInMethods: [],\n      error: null,\n    };\n  }\n\n  componentDidMount() {\n    this.fetchSignInMethods();\n  }\n\n  fetchSignInMethods = () => {\n    this.props.firebase.auth\n      .fetchSignInMethodsForEmail(this.props.authUser.email)\n      .then(activeSignInMethods => this.setState({ activeSignInMethods, error: null }))\n      .catch(error => this.setState({ error }));\n  };\n\n  onSocialLoginLink = provider => {\n    this.props.firebase.auth.currentUser\n      .linkWithPopup(this.props.firebase[provider])\n      .then(this.fetchSignInMethods)\n      .catch(error => this.setState({ error }));\n  };\n\n  onDefaultLoginLink = password => {\n    const credential = this.props.firebase.emailAuthProvider.credential(this.props.authUser.email, password);\n\n    this.props.firebase.auth.currentUser\n      .linkAndRetrieveDataWithCredential(credential)\n      .then(this.fetchSignInMethods)\n      .catch(error => this.setState({ error }));\n  };\n\n  onUnlink = providerId => {\n    this.props.firebase.auth.currentUser\n      .unlink(providerId)\n      .then(this.fetchSignInMethods)\n      .catch(error => this.setState({ error }));\n  };\n\n  render() {\n    const { activeSignInMethods, error } = this.state;\n\n    return (\n      <div>\n        Sign In Methods:\n        <ul>\n          {SIGN_IN_METHODS.map(signInMethod => {\n            const onlyOneLeft = activeSignInMethods.length === 1;\n            const isEnabled = activeSignInMethods.includes(signInMethod.id);\n\n            return (\n              <li key={signInMethod.id}>\n                {signInMethod.id === 'password' ? (\n                  <DefaultLoginToggle\n                    onlyOneLeft={onlyOneLeft}\n                    isEnabled={isEnabled}\n                    signInMethod={signInMethod}\n                    onLink={this.onDefaultLoginLink}\n                    onUnlink={this.onUnlink}\n                  />\n                ) : (\n                  <SocialLoginToggle\n                    onlyOneLeft={onlyOneLeft}\n                    isEnabled={isEnabled}\n                    signInMethod={signInMethod}\n                    onLink={this.onSocialLoginLink}\n                    onUnlink={this.onUnlink}\n                  />\n                )}\n              </li>\n            );\n          })}\n        </ul>\n        {error && error.message}\n      </div>\n    );\n  }\n}\n\nconst SocialLoginToggle = ({ onlyOneLeft, isEnabled, signInMethod, onLink, onUnlink }) =>\n  isEnabled ? (\n    <button type='button' onClick={() => onUnlink(signInMethod.id)} disabled={onlyOneLeft}>\n      Deactivate {signInMethod.id}\n    </button>\n  ) : (\n    <button type='button' onClick={() => onLink(signInMethod.provider)}>\n      Link {signInMethod.id}\n    </button>\n  );\n\nclass DefaultLoginToggle extends Component {\n  constructor(props) {\n    super(props);\n\n    this.state = { passwordOne: '', passwordTwo: '' };\n  }\n\n  onSubmit = event => {\n    event.preventDefault();\n\n    this.props.onLink(this.state.passwordOne);\n    this.setState({ passwordOne: '', passwordTwo: '' });\n  };\n\n  onChange = event => {\n    this.setState({ [event.target.name]: event.target.value });\n  };\n\n  render() {\n    const { onlyOneLeft, isEnabled, signInMethod, onUnlink } = this.props;\n\n    const { passwordOne, passwordTwo } = this.state;\n\n    const isInvalid = passwordOne !== passwordTwo || passwordOne === '';\n\n    return isEnabled ? (\n      <button type='button' onClick={() => onUnlink(signInMethod.id)} disabled={onlyOneLeft}>\n        Deactivate {signInMethod.id}\n      </button>\n    ) : (\n      <form onSubmit={this.onSubmit}>\n        <input\n          name='passwordOne'\n          value={passwordOne}\n          onChange={this.onChange}\n          type='password'\n          placeholder='New Password'\n        />\n        <input\n          name='passwordTwo'\n          value={passwordTwo}\n          onChange={this.onChange}\n          type='password'\n          placeholder='Confirm New Password'\n        />\n\n        <button disabled={isInvalid} type='submit'>\n          Link {signInMethod.id}\n        </button>\n      </form>\n    );\n  }\n}\n\nconst LoginManagement = withFirebase(LoginManagementBase);\n\nconst condition = authUser => !!authUser;\n\nexport default compose(withAuthorization(condition))(AccountPage);\n","import React, { Component } from \"react\";\nimport { Link } from \"react-router-dom\";\n\nimport { withFirebase } from \"../Firebase\";\nimport * as ROUTES from \"../../constants/routes\";\n\nclass UserList extends Component {\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      loading: false,\n      users: []\n    };\n  }\n\n  componentDidMount() {\n    this.setState({ loading: true });\n\n    this.props.firebase.users().on(\"value\", snapshot => {\n      const usersObject = snapshot.val();\n\n      const usersList = Object.keys(usersObject).map(key => ({\n        ...usersObject[key],\n        uid: key\n      }));\n\n      this.setState({\n        users: usersList,\n        loading: false\n      });\n    });\n  }\n\n  componentWillUnmount() {\n    this.props.firebase.users().off();\n  }\n\n  render() {\n    const { users, loading } = this.state;\n\n    return (\n      <div>\n        <h2>Enrolled Users</h2>\n        {loading && <div>Loading ...</div>}\n        <ul>\n          {users.map(user => (\n            <li key={user.uid}>\n              <span>\n                <strong>ID:</strong> {user.uid}\n              </span>\n              <span>\n                <strong>E-Mail:</strong> {user.email}\n              </span>\n              <span>\n                <strong>Username:</strong> {user.username}\n              </span>\n              <span>\n                <Link\n                  to={{\n                    pathname: `${ROUTES.ADMIN}/${user.uid}`,\n                    state: { user }\n                  }}\n                >\n                  Details\n                </Link>\n              </span>\n            </li>\n          ))}\n        </ul>\n      </div>\n    );\n  }\n}\n\nexport default withFirebase(UserList);\n","import React, { Component } from \"react\";\n\nimport { withFirebase } from \"../Firebase\";\n\nclass UserItem extends Component {\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      loading: false,\n      user: null,\n      ...props.location.state\n    };\n  }\n\n  componentDidMount() {\n    if (this.state.user) {\n      return;\n    }\n\n    this.setState({ loading: true });\n\n    this.props.firebase\n      .user(this.props.match.params.id)\n      .on(\"value\", snapshot => {\n        this.setState({\n          user: snapshot.val(),\n          loading: false\n        });\n      });\n  }\n\n  componentWillUnmount() {\n    this.props.firebase.user(this.props.match.params.id).off();\n  }\n\n  onSendPasswordResetEmail = () => {\n    this.props.firebase.doPasswordReset(this.state.user.email);\n  };\n\n  render() {\n    const { user, loading } = this.state;\n\n    return (\n      <div>\n        <h2>User ({this.props.match.params.id})</h2>\n        {loading && <div>Loading ...</div>}\n\n        {user && (\n          <div>\n            <span>\n              <strong>ID:</strong> {user.uid}\n            </span>\n            <span>\n              <strong>E-Mail:</strong> {user.email}\n            </span>\n            <span>\n              <strong>Username:</strong> {user.username}\n            </span>\n            <span>\n              <button type=\"button\" onClick={this.onSendPasswordResetEmail}>\n                Send Password Reset\n              </button>\n            </span>\n          </div>\n        )}\n      </div>\n    );\n  }\n}\n\nexport default withFirebase(UserItem);\n","import React from \"react\";\nimport { Switch, Route } from \"react-router-dom\";\nimport { compose } from \"recompose\";\nimport { withAuthorization } from \"../Session\";\nimport { UserList, UserItem } from \"../Users\";\nimport * as ROLES from \"../../constants/roles\";\nimport * as ROUTES from \"../../constants/routes\";\n\nconst AdminPage = () => (\n  <div>\n    <h1>Admin</h1>\n    <p>The Admin Page is accessible by every signed in admin user.</p>\n\n    <Switch>\n      <Route exact path={ROUTES.ADMIN_DETAILS} component={UserItem} />\n      <Route exact path={ROUTES.ADMIN} component={UserList} />\n    </Switch>\n  </div>\n);\n\nconst condition = authUser => authUser && authUser.roles.includes(ROLES.ADMIN);\n\nexport default compose(withAuthorization(condition))(AdminPage);\n","import React, { Component } from \"react\";\nimport { Link } from \"react-router-dom\";\n\nimport { withFirebase } from \"../Firebase\";\nimport * as ROUTES from \"../../constants/routes\";\n\nclass TestList extends Component {\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      tests: [],\n      authUser: JSON.parse(localStorage.getItem(\"authUser\")),\n      loading: false\n    };\n  }\n\n  componentDidMount() {\n    this.setState({ loading: true });\n\n    this.props.firebase.tests(this.state.authUser.uid).on(\"value\", snapshot => {\n      const testsObject = snapshot.val();\n\n      const testsList = Object.keys(testsObject).map(key => ({\n        ...testsObject[key],\n        uid: key\n      }));\n\n      this.setState({\n        tests: testsList,\n        loading: false\n      });\n    });\n  }\n\n  componentWillUnmount() {\n    this.props.firebase.tests().off();\n  }\n\n  render() {\n    const { tests, loading } = this.state;\n    return (\n      <div>\n        <h2>Available Tests</h2>\n        {loading && <div>Loading ...</div>}\n        <ul>\n          {tests.map(test => (\n            <li key={test.tid}>\n              <strong>Take Test ID Number: </strong>\n              <Link\n                to={{\n                  pathname: `${ROUTES.TESTS}/${test.tid}`,\n                  state: { test }\n                }}\n              >\n                {test.tid}\n              </Link>\n            </li>\n          ))}\n        </ul>\n      </div>\n    );\n  }\n}\n\nexport default withFirebase(TestList);\n","import React from \"react\";\nimport \"../../styles/components/Tests/CreateTestBank.css\";\nimport { withFirebase } from \"../Firebase\";\n\nclass CreateTestBank extends React.Component {\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      authUser: JSON.parse(localStorage.getItem(\"authUser\")),\n      error: \"\",\n      tid: \"\",\n      totalPoints: \"\",\n      passingScore: \"\"\n    };\n  }\n\n  componentDidMount() {\n    this.fetchUser();\n  }\n\n  fetchUser = () => {\n    this.props.firebase.auth.onAuthStateChanged(user => {\n      if (user) {\n        this.setState({ user, error: null });\n      }\n    });\n  };\n\n  handleOnSubmit = e => {\n    e.preventDefault();\n\n    const testBankMeta = {\n      tid: this.state.tid,\n      totalPoints: this.state.totalPoints,\n      passingScore: this.state.passingScore\n    };\n\n    this.props.firebase\n      .user(this.state.authUser.uid)\n      .child(\"tests\")\n      .child(this.state.tid)\n      .set(testBankMeta);\n\n    this.setState({\n      tid: \"\",\n      totalPoints: \"\",\n      passingScore: \"\"\n    });\n  };\n\n  handleChange = e => {\n    this.setState({\n      [e.target.name]: e.target.value\n    });\n  };\n\n  render() {\n    return (\n      <main id=\"create-test-bank\">\n        <h2>Create Test Bank</h2>\n        <p>Instructor Name: {this.state.authUser.username}</p>\n        <form id=\"newTestBank\" onSubmit={this.handleOnSubmit}>\n          <label>Test Bank ID Number</label>\n          <input\n            type=\"number\"\n            value={this.state.testBankId}\n            name=\"tid\"\n            onChange={this.handleChange}\n          />\n          <label>Total Points</label>\n          <input\n            type=\"number\"\n            value={this.state.totalPoints}\n            name=\"totalPoints\"\n            onChange={this.handleChange}\n          />\n          <label>Passing Score</label>\n          <input\n            type=\"number\"\n            value={this.state.passingScore}\n            name=\"passingScore\"\n            onChange={this.handleChange}\n          />\n          <input type=\"submit\" name=\"submit\" value=\"Submit\" />\n          <input type=\"reset\" name=\"reset\" value=\"Reset\" />\n        </form>\n      </main>\n    );\n  }\n}\n\nexport default withFirebase(CreateTestBank);\n","import React from \"react\";\nimport { withFirebase } from \"../Firebase\";\n\nclass TakeTest extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      authUser: JSON.parse(localStorage.getItem(\"authUser\"))\n    };\n  }\n\n  componentDidMount() {}\n\n  render() {\n    return <h2>Take the Test</h2>;\n  }\n}\n\nexport default withFirebase(TakeTest);\n","import React from \"react\";\nimport TestList from \"./TestList\";\nimport { withFirebase } from \"../Firebase\";\nimport \"../../styles/components/Student/TakeTest.css\";\n\nconst TakeTest = () => (\n  <main id=\"taketest\">\n    <h2>Select A Test</h2>\n    <div className=\"select-test\">\n      <TestList />\n    </div>\n  </main>\n);\n\nexport default withFirebase(TakeTest);\n","import React from \"react\";\nimport \"../../styles/components/Tests/TestPage.css\";\nimport { withFirebase } from \"../Firebase\";\n\nclass TestPage extends React.Component {\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      authUser: JSON.parse(localStorage.getItem(\"authUser\")),\n      test: null,\n      tid: \"\",\n      questions: [],\n      loading: true,\n      url: \"\"\n    };\n  }\n\n  componentDidMount() {\n    const { authUser } = this.state;\n    if (authUser.tests) {\n      const tid = this.props.history.location.state.test.tid;\n      this.setState({ tid: tid });\n      this.props.firebase\n        .test(authUser.uid, this.props.history.location.state.test.tid)\n        .on(\"value\", snapshot => {\n          this.setState({\n            test: snapshot.val(),\n            questions: Object.values(snapshot.val().questions),\n            loading: false\n          });\n        });\n    }\n  }\n\n  componentWillUnmount() {\n    const { authUser, tid } = this.state;\n    this.props.firebase.test(authUser.uid, tid).off();\n  }\n\n  handleSubmitAnswer = e => {\n    console.log(e.target.id);\n  };\n\n  render() {\n    const { test, tid, loading } = this.state;\n\n    return (\n      <main id=\"test-page\">\n        <h2>Test #{tid}</h2>\n        {loading && <div>Loading ...</div>}\n\n        {test && (\n          <div>\n            <ul>\n              <li>Possible Points: {this.state.test.totalPoints}</li>\n              <li>Passing Score: {this.state.test.passingScore}</li>\n              <li>Number of Questions: {this.state.test.questions.length}</li>\n              <li>\n                Questions:\n                <ul id=\"questions\">\n                  {this.state.questions.map(question => {\n                    question.image &&\n                      this.props.firebase\n                        .images(this.state.authUser.uid)\n                        .child(`${question.image.substring(12)}`)\n                        .getDownloadURL()\n                        .then(url => {\n                          this.setState({ url });\n                        });\n                    return (\n                      <li className=\"question\" key={question.questionNum}>\n                        <p className=\"questionTitle\">\n                          Question #{question.questionNum}: {question.question}\n                        </p>\n                        <br />\n                        {question.image && (\n                          <img\n                            src={this.state.url}\n                            alt=\"question\"\n                            title=\"Image Question\"\n                          />\n                        )}\n                        <ol>\n                          {question.options.map(op => (\n                            <li\n                              key={op}\n                              className=\"option\"\n                              id={op}\n                              value={op}\n                              onClick={this.handleSubmitAnswer}\n                            >\n                              {op}\n                            </li>\n                          ))}\n                        </ol>\n                        Answer: {question.answer}\n                      </li>\n                    );\n                  })}\n                </ul>\n              </li>\n            </ul>\n          </div>\n        )}\n      </main>\n    );\n  }\n}\n\nexport default withFirebase(TestPage);\n","import React from \"react\";\nimport { Link } from \"react-router-dom\";\nimport { compose } from \"recompose\";\nimport { withAuthorization } from \"../Session\";\nimport { TestList } from \"../Tests\";\nimport * as ROLES from \"../../constants/roles\";\nimport * as ROUTES from \"../../constants/routes\";\nimport \"../../styles/components/Instructor/InstructorPage.css\";\n\nconst InstructorPage = () => (\n  <main id=\"instructor-page\">\n    <h1>Instructor</h1>\n    <p>The Instructor Page is accessible by every signed in Instructor user.</p>\n    <Link to={ROUTES.CREATE_TEST}>Create Test Bank</Link>\n    <br />\n    <Link to={ROUTES.NEW_QUESTION}>New Question</Link>\n\n    <TestList />\n  </main>\n);\n\nconst condition = authUser =>\n  (authUser && authUser.roles.includes(ROLES.ADMIN)) ||\n  authUser.roles.includes(ROLES.INSTRUCTOR);\n\nexport default compose(withAuthorization(condition))(InstructorPage);\n","import React from \"react\";\nimport { compose } from \"recompose\";\n\nimport { withAuthorization } from \"../Session\";\nimport * as ROLES from \"../../constants/roles\";\n\nconst StudentPage = () => (\n  <div>\n    <h1>Student</h1>\n    <p>The Student Page is accessible by every signed in user.</p>\n    <h3>What you can do</h3>\n    <ol>\n      <li>Take a Quiz</li>\n      <li>See Your Results</li>\n    </ol>\n  </div>\n);\n\nconst condition = authUser =>\n  (authUser && authUser.roles.includes(ROLES.ADMIN)) ||\n  authUser.roles.includes(ROLES.INSTRUCTOR) ||\n  authUser.roles.includes(ROLES.STUDENT);\n\nexport default compose(withAuthorization(condition))(StudentPage);\n","import React from \"react\";\nimport \"../../styles/components/Questions/NewQuestion.css\";\nimport { withFirebase } from \"../Firebase\";\nimport { isNullOrUndefined } from \"util\";\n\nclass NewQuestion extends React.Component {\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      tid: \"\",\n      reference1: \"\",\n      reference2: \"\",\n      question: \"\",\n      questionNum: \"\",\n      op1: \"\",\n      op2: \"\",\n      op3: \"\",\n      op4: \"\",\n      op5: \"\",\n      op6: \"\",\n      op7: \"\",\n      op8: \"\",\n      op9: \"\",\n      op10: \"\",\n      options: [],\n      answer: \"\",\n      user: \"\",\n      image: \"\"\n    };\n  }\n\n  componentDidMount() {\n    this.fetchUser();\n  }\n\n  fetchUser = () => {\n    this.props.firebase.auth.onAuthStateChanged(user => {\n      if (user) {\n        this.setState({ user, error: null });\n      }\n    });\n  };\n\n  handleOnSubmit = e => {\n    e.preventDefault();\n\n    if (this.state.op1) {\n      this.state.options.push(this.state.op1);\n    }\n    if (this.state.op2) {\n      this.state.options.push(this.state.op2);\n    }\n    if (this.state.op3) {\n      this.state.options.push(this.state.op3);\n    }\n    if (this.state.op4) {\n      this.state.options.push(this.state.op4);\n    }\n    if (this.state.op5) {\n      this.state.options.push(this.state.op5);\n    }\n    if (this.state.op6) {\n      this.state.options.push(this.state.op6);\n    }\n    if (this.state.op7) {\n      this.state.options.push(this.state.op7);\n    }\n    if (this.state.op8) {\n      this.state.options.push(this.state.op8);\n    }\n    if (this.state.op9) {\n      this.state.options.push(this.state.op9);\n    }\n    if (this.state.op10) {\n      this.state.options.push(this.state.op10);\n    }\n    if (e.target.upLoadImage === isNullOrUndefined) {\n      const file = e.target.uploadImage.files[0];\n      const fileName = file.name;\n      this.props.firebase\n        .image(this.state.user.uid, fileName)\n        .put(file)\n        .then(snapshot => {\n          console.log(snapshot);\n        });\n    }\n\n    const question = {\n      reference1: this.state.reference1,\n      reference2: this.state.reference2,\n      question: this.state.question,\n      questionNum: this.state.questionNum,\n      options: this.state.options,\n      answer: this.state.answer,\n      image: this.state.image\n    };\n\n    this.props.firebase\n      .user(this.state.user.uid)\n      .child(\"tests\")\n      .child(this.state.tid)\n      .child(\"questions/\")\n      .child(this.state.questionNum)\n      .set(question);\n\n    this.setState({\n      reference1: \"\",\n      reference2: \"\",\n      question: \"\",\n      questionNum: \"\",\n      op1: \"\",\n      op2: \"\",\n      op3: \"\",\n      op4: \"\",\n      op5: \"\",\n      op6: \"\",\n      op7: \"\",\n      op8: \"\",\n      op9: \"\",\n      op10: \"\",\n      answer: \"\",\n      options: [],\n      image: \"\"\n    });\n  };\n\n  handleChange = e => {\n    this.setState({\n      [e.target.name]: e.target.value\n    });\n  };\n\n  render() {\n    return (\n      <main id=\"new-question\">\n        <h2>Create Questions</h2>\n        <form id=\"newQuestion\" onSubmit={this.handleOnSubmit}>\n          <label>Test Bank ID Number</label>\n          <input\n            type=\"number\"\n            value={this.state.testBankId}\n            name=\"tid\"\n            onChange={this.handleChange}\n          />\n          <label>Reference 1</label>\n          <input\n            type=\"text\"\n            value={this.state.reference1}\n            name=\"reference1\"\n            onChange={this.handleChange}\n          />\n          <label>Reference 2</label>\n          <input\n            type=\"text\"\n            value={this.state.reference2}\n            name=\"reference2\"\n            onChange={this.handleChange}\n          />\n          <fieldset form=\"newQuestion\">\n            <legend>Question</legend>\n            <label>Question Number and Content</label>\n            <input\n              type=\"number\"\n              value={this.state.questionNum}\n              name=\"questionNum\"\n              onChange={this.handleChange}\n            />\n            <input\n              type=\"text\"\n              value={this.state.question}\n              name=\"question\"\n              onChange={this.handleChange}\n            />\n            <input\n              accept=\".jpg,.png\"\n              type=\"file\"\n              id=\"uploadImage\"\n              name=\"image\"\n              onChange={this.handleChange}\n            />\n            <fieldset form=\"newQuestion\">\n              <legend>Options</legend>\n              <label>Option 1</label>\n              <input\n                type=\"text\"\n                value={this.state.op1}\n                name=\"op1\"\n                onChange={this.handleChange}\n              />\n              <label>Option 2</label>\n              <input\n                type=\"text\"\n                value={this.state.op2}\n                name=\"op2\"\n                onChange={this.handleChange}\n              />\n              <label>Option 3</label>\n              <input\n                type=\"text\"\n                value={this.state.op3}\n                name=\"op3\"\n                onChange={this.handleChange}\n              />\n              <label>Option 4</label>\n              <input\n                type=\"text\"\n                value={this.state.op4}\n                name=\"op4\"\n                onChange={this.handleChange}\n              />\n              <label>Option 5</label>\n              <input\n                type=\"text\"\n                value={this.state.op5}\n                name=\"op5\"\n                onChange={this.handleChange}\n              />\n              <label>Option 6</label>\n              <input\n                type=\"text\"\n                value={this.state.op6}\n                name=\"op6\"\n                onChange={this.handleChange}\n              />\n              <label>Option 7</label>\n              <input\n                type=\"text\"\n                value={this.state.op7}\n                name=\"op7\"\n                onChange={this.handleChange}\n              />\n              <label>Option 8</label>\n              <input\n                type=\"text\"\n                value={this.state.op8}\n                name=\"op8\"\n                onChange={this.handleChange}\n              />\n              <label>Option 9</label>\n              <input\n                type=\"text\"\n                value={this.state.op9}\n                name=\"op9\"\n                onChange={this.handleChange}\n              />\n              <label>Option 10</label>\n              <input\n                type=\"text\"\n                value={this.state.op10}\n                name=\"op10\"\n                onChange={this.handleChange}\n              />\n            </fieldset>\n            <label>Correct Answer</label>\n            <input\n              type=\"text\"\n              value={this.state.answer}\n              name=\"answer\"\n              onChange={this.handleChange}\n            />\n          </fieldset>\n          <input type=\"submit\" name=\"submit\" value=\"Submit\" />\n        </form>\n      </main>\n    );\n  }\n}\n\nexport default withFirebase(NewQuestion);\n","import React from \"react\";\nimport { BrowserRouter as Router, Route, Switch } from \"react-router-dom\";\n\nimport Navigation from \"../Navigation\";\nimport SignUpPage from \"../SignUp\";\nimport SignInPage from \"../SignIn\";\nimport PasswordForgetPage from \"../PasswordForget\";\nimport HomePage from \"../Home\";\nimport AccountPage from \"../Account\";\nimport AdminPage from \"../Admin\";\nimport InstructorPage from \"../Instructor\";\nimport StudentPage from \"../Student\";\nimport { CreateTestBank, TakeTest, SelectTest, TestPage } from \"../Tests\";\nimport { NewQuestion } from \"../Questions\";\n\nimport * as ROUTES from \"../../constants/routes\";\nimport { withAuthentication } from \"../Session\";\nimport \"../../styles/base/App.css\";\n\nconst App = () => (\n  <Router>\n    <div>\n      <Navigation />\n      <Switch>\n        <Route exact path={ROUTES.HOME} component={HomePage} />\n        <Route path={ROUTES.SIGN_UP} component={SignUpPage} />\n        <Route path={ROUTES.SIGN_IN} component={SignInPage} />\n        <Route path={ROUTES.PASSWORD_FORGET} component={PasswordForgetPage} />\n        <Route path={ROUTES.ACCOUNT} component={AccountPage} />\n        <Route path={ROUTES.ADMIN} component={AdminPage} />\n        <Route path={ROUTES.INSTRUCTOR} component={InstructorPage} />\n        <Route path={ROUTES.STUDENT} component={StudentPage} />\n        <Route path={ROUTES.CREATE_TEST} component={CreateTestBank} />\n        <Route path={ROUTES.NEW_QUESTION} component={NewQuestion} />\n        <Route path={ROUTES.SELECT_TEST} component={SelectTest} />\n        <Route path={ROUTES.TESTS} component={TestPage} />\n        <Route path={ROUTES.TAKE_TEST} component={TakeTest} />\n      </Switch>\n    </div>\n  </Router>\n);\n\nexport default withAuthentication(App);\n","import React from 'react';\nimport ReactDOM from 'react-dom';\n\nimport './styles/base/index.css';\nimport * as serviceWorker from './serviceWorker';\n\nimport App from './components/App';\nimport Firebase, { FirebaseContext } from './components/Firebase';\n\nReactDOM.render(\n  <FirebaseContext.Provider value={new Firebase()}>\n    <App />\n  </FirebaseContext.Provider>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: http://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}